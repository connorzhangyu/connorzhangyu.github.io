<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mybatis on Hello World</title><link>https://connorzhangyu.com/categories/mybatis/</link><description>Recent content in Mybatis on Hello World</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Sat, 19 Nov 2022 18:25:00 +0000</lastBuildDate><atom:link href="https://connorzhangyu.com/categories/mybatis/index.xml" rel="self" type="application/rss+xml"/><item><title>Mybatis</title><link>https://connorzhangyu.com/posts/mybatis/</link><pubDate>Sat, 19 Nov 2022 18:25:00 +0000</pubDate><guid>https://connorzhangyu.com/posts/mybatis/</guid><description>&lt;h1 id="教程">教程&lt;/h1>
&lt;blockquote>
&lt;p>参考:&lt;/p>
&lt;p>&lt;a href="https://mybatis.org/mybatis-3/">官方文档&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/mybatis">源码&lt;/a>&lt;/p>&lt;/blockquote>
&lt;h2 id="provider的使用">Provider的使用&lt;/h2>
&lt;p>1.一定要注意type的类名.class 和 method方法名,还要注意形参也得是一样的&lt;/p>
&lt;p>2.Provider的方法,大概就三个方法sql.SELECT,sql.WHERE,sql.FROM&lt;/p>
&lt;p>3.SQL 对象里的方法名跟别的不一样,小写的不行,idea也识别不到,要用大写,比如SLELECT&lt;/p>
&lt;p>4.Provider里返回的是String&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051427670.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051427490.png" alt="">&lt;/p>
&lt;h2 id="注解-一对多查询多个参数">注解 一对多查询(多个参数)&lt;/h2>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051427839.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051428785.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051429441.png" alt="">&lt;/p>
&lt;h2 id="注解-一对多查询多个参数-1">注解 一对多查询(多个参数)&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@SelectProvider&lt;/span>(method&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;queryPageFloors&amp;#34;&lt;/span>,type&lt;span style="color:#f92672">=&lt;/span>BarterGroupProvider.&lt;span style="color:#a6e22e">class&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Results&lt;/span>({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Result&lt;/span>(property &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;userId&amp;#34;&lt;/span>,column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;user_id&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Result&lt;/span>(property &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;floorNum&amp;#34;&lt;/span>,column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;floor_num&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Result&lt;/span>(property &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;floorSecond&amp;#34;&lt;/span>,column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Result&lt;/span>(property &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;say&amp;#34;&lt;/span>,column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;note&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Result&lt;/span>(property &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;joinOrPublish&amp;#34;&lt;/span>,column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;join_or_publish&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Result&lt;/span>(property&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;categorys&amp;#34;&lt;/span>,javaType &lt;span style="color:#f92672">=&lt;/span> List.&lt;span style="color:#a6e22e">class&lt;/span>,column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>,many&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">@Many&lt;/span>(select&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;com.ecloud.hobay.marketing.service.infrastructure.mapper.bartergroup.BarterGroupMapper.queryCategory&amp;#34;&lt;/span>)),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Result&lt;/span>(property&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;productIds&amp;#34;&lt;/span>,javaType &lt;span style="color:#f92672">=&lt;/span> List.&lt;span style="color:#a6e22e">class&lt;/span>,column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>,many&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">@Many&lt;/span>(select&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;com.ecloud.hobay.marketing.service.infrastructure.mapper.bartergroup.BarterGroupMapper.queryProducts&amp;#34;&lt;/span>)),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Result&lt;/span>(property&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;beforeResult&amp;#34;&lt;/span>,javaType &lt;span style="color:#f92672">=&lt;/span> List.&lt;span style="color:#a6e22e">class&lt;/span>,column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>,many&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">@Many&lt;/span>(select&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;com.ecloud.hobay.marketing.service.infrastructure.mapper.bartergroup.BarterGroupEvaluationMapper.queryAll&amp;#34;&lt;/span>)),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Result&lt;/span>(property&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;barterGroupUser&amp;#34;&lt;/span>,javaType &lt;span style="color:#f92672">=&lt;/span> BarterGroupUser.&lt;span style="color:#a6e22e">class&lt;/span>,column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{user_id=user_id,id = barter_group_id }&amp;#34;&lt;/span>,many&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">@Many&lt;/span>(select&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;com.ecloud.hobay.marketing.service.infrastructure.mapper.bartergroup.BarterGroupMapper.isHead&amp;#34;&lt;/span>)),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Result&lt;/span>(property&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;futureResultNum&amp;#34;&lt;/span>,column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>,many&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">@Many&lt;/span>(select&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;com.ecloud.hobay.marketing.service.infrastructure.mapper.bartergroup.BarterGroupMapper.futureResultNum&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>List&lt;span style="color:#f92672">&amp;lt;&lt;/span>QueryFloors&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">queryFloors3&lt;/span>(Page&lt;span style="color:#f92672">&amp;lt;&lt;/span>QueryFloors&lt;span style="color:#f92672">&amp;gt;&lt;/span> page);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 分类
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param id
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @return
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Select&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;SELECT * FROM ecloud_marketing.barter_group_category WHERE barter_group_details_id = #{id} limit 0,7 &amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>List&lt;span style="color:#f92672">&amp;lt;&lt;/span>BarterGroupCategory&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">queryCategory&lt;/span>(&lt;span style="color:#a6e22e">@Param&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>) Long id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 产品
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param id
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @return
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Select&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;SELECT product_id from ecloud_marketing.barter_group_product_category WHERE barter_group_details_id = #{id} limit 0,3 &amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>List&lt;span style="color:#f92672">&amp;lt;&lt;/span>Long&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">queryProducts&lt;/span>(&lt;span style="color:#a6e22e">@Param&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>) Long id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 团员
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param userId
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param id
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @return
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Select&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;SELECT * FROM ecloud_marketing.barter_group_user WHERE user_id =#{user_id} and barter_group_id = #{id} and status = 1&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>BarterGroupUser &lt;span style="color:#a6e22e">isHead&lt;/span>(Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>String,Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> map);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Select&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;SELECT count(*) from ecloud_marketing.barter_group_evaluation WHERE barter_group_details_id = #{id}&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Integer &lt;span style="color:#a6e22e">futureResultNum&lt;/span>(&lt;span style="color:#a6e22e">@Param&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>) Long id);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">QueryFloors&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> Serializable {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;我有的产品的id&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>ProductBarter&lt;span style="color:#f92672">&amp;gt;&lt;/span> list;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;封装前的评论数据&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>BarterGroupEvaluation&lt;span style="color:#f92672">&amp;gt;&lt;/span> beforeResult;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;封装后的评论数据有分页给功能&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Page&lt;span style="color:#f92672">&amp;lt;&lt;/span>BarterGroupEvaluation&lt;span style="color:#f92672">&amp;gt;&lt;/span> beforeResultPage;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;封装后的评论数据&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>BarterGroupEvaluationResult&lt;span style="color:#f92672">&amp;gt;&lt;/span> futureResult;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;剩余评论条数&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Integer futureResultNum;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;分类&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>BarterGroupCategory&lt;span style="color:#f92672">&amp;gt;&lt;/span> categorys;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(value&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;楼层数&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Integer floorNum;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(value&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;楼层id&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Long floorSecond;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(value&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;要说的&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> String say;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(value&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;加入或者是发布&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Integer joinOrPublish;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;会员表&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> BarterGroupUser barterGroupUser;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(value&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;加入时间&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Long joinData;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="注解-一对多查询一个参数">注解 一对多查询(一个参数)&lt;/h2>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051430732.png" alt="">&lt;/p></description><content>&lt;h1 id="教程">教程&lt;/h1>
&lt;blockquote>
&lt;p>参考:&lt;/p>
&lt;p>&lt;a href="https://mybatis.org/mybatis-3/">官方文档&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/mybatis">源码&lt;/a>&lt;/p>&lt;/blockquote>
&lt;h2 id="provider的使用">Provider的使用&lt;/h2>
&lt;p>1.一定要注意type的类名.class 和 method方法名,还要注意形参也得是一样的&lt;/p>
&lt;p>2.Provider的方法,大概就三个方法sql.SELECT,sql.WHERE,sql.FROM&lt;/p>
&lt;p>3.SQL 对象里的方法名跟别的不一样,小写的不行,idea也识别不到,要用大写,比如SLELECT&lt;/p>
&lt;p>4.Provider里返回的是String&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051427670.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051427490.png" alt="">&lt;/p>
&lt;h2 id="注解-一对多查询多个参数">注解 一对多查询(多个参数)&lt;/h2>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051427839.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051428785.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051429441.png" alt="">&lt;/p>
&lt;h2 id="注解-一对多查询多个参数-1">注解 一对多查询(多个参数)&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@SelectProvider&lt;/span>(method&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;queryPageFloors&amp;#34;&lt;/span>,type&lt;span style="color:#f92672">=&lt;/span>BarterGroupProvider.&lt;span style="color:#a6e22e">class&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Results&lt;/span>({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Result&lt;/span>(property &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;userId&amp;#34;&lt;/span>,column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;user_id&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Result&lt;/span>(property &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;floorNum&amp;#34;&lt;/span>,column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;floor_num&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Result&lt;/span>(property &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;floorSecond&amp;#34;&lt;/span>,column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Result&lt;/span>(property &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;say&amp;#34;&lt;/span>,column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;note&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Result&lt;/span>(property &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;joinOrPublish&amp;#34;&lt;/span>,column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;join_or_publish&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Result&lt;/span>(property&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;categorys&amp;#34;&lt;/span>,javaType &lt;span style="color:#f92672">=&lt;/span> List.&lt;span style="color:#a6e22e">class&lt;/span>,column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>,many&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">@Many&lt;/span>(select&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;com.ecloud.hobay.marketing.service.infrastructure.mapper.bartergroup.BarterGroupMapper.queryCategory&amp;#34;&lt;/span>)),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Result&lt;/span>(property&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;productIds&amp;#34;&lt;/span>,javaType &lt;span style="color:#f92672">=&lt;/span> List.&lt;span style="color:#a6e22e">class&lt;/span>,column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>,many&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">@Many&lt;/span>(select&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;com.ecloud.hobay.marketing.service.infrastructure.mapper.bartergroup.BarterGroupMapper.queryProducts&amp;#34;&lt;/span>)),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Result&lt;/span>(property&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;beforeResult&amp;#34;&lt;/span>,javaType &lt;span style="color:#f92672">=&lt;/span> List.&lt;span style="color:#a6e22e">class&lt;/span>,column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>,many&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">@Many&lt;/span>(select&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;com.ecloud.hobay.marketing.service.infrastructure.mapper.bartergroup.BarterGroupEvaluationMapper.queryAll&amp;#34;&lt;/span>)),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Result&lt;/span>(property&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;barterGroupUser&amp;#34;&lt;/span>,javaType &lt;span style="color:#f92672">=&lt;/span> BarterGroupUser.&lt;span style="color:#a6e22e">class&lt;/span>,column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{user_id=user_id,id = barter_group_id }&amp;#34;&lt;/span>,many&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">@Many&lt;/span>(select&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;com.ecloud.hobay.marketing.service.infrastructure.mapper.bartergroup.BarterGroupMapper.isHead&amp;#34;&lt;/span>)),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Result&lt;/span>(property&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;futureResultNum&amp;#34;&lt;/span>,column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>,many&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">@Many&lt;/span>(select&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;com.ecloud.hobay.marketing.service.infrastructure.mapper.bartergroup.BarterGroupMapper.futureResultNum&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>List&lt;span style="color:#f92672">&amp;lt;&lt;/span>QueryFloors&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">queryFloors3&lt;/span>(Page&lt;span style="color:#f92672">&amp;lt;&lt;/span>QueryFloors&lt;span style="color:#f92672">&amp;gt;&lt;/span> page);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 分类
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param id
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @return
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Select&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;SELECT * FROM ecloud_marketing.barter_group_category WHERE barter_group_details_id = #{id} limit 0,7 &amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>List&lt;span style="color:#f92672">&amp;lt;&lt;/span>BarterGroupCategory&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">queryCategory&lt;/span>(&lt;span style="color:#a6e22e">@Param&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>) Long id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 产品
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param id
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @return
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Select&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;SELECT product_id from ecloud_marketing.barter_group_product_category WHERE barter_group_details_id = #{id} limit 0,3 &amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>List&lt;span style="color:#f92672">&amp;lt;&lt;/span>Long&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">queryProducts&lt;/span>(&lt;span style="color:#a6e22e">@Param&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>) Long id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * 团员
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param userId
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @param id
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * @return
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Select&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;SELECT * FROM ecloud_marketing.barter_group_user WHERE user_id =#{user_id} and barter_group_id = #{id} and status = 1&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>BarterGroupUser &lt;span style="color:#a6e22e">isHead&lt;/span>(Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>String,Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> map);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Select&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;SELECT count(*) from ecloud_marketing.barter_group_evaluation WHERE barter_group_details_id = #{id}&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Integer &lt;span style="color:#a6e22e">futureResultNum&lt;/span>(&lt;span style="color:#a6e22e">@Param&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>) Long id);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">QueryFloors&lt;/span> &lt;span style="color:#66d9ef">implements&lt;/span> Serializable {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;我有的产品的id&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>ProductBarter&lt;span style="color:#f92672">&amp;gt;&lt;/span> list;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;封装前的评论数据&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>BarterGroupEvaluation&lt;span style="color:#f92672">&amp;gt;&lt;/span> beforeResult;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;封装后的评论数据有分页给功能&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Page&lt;span style="color:#f92672">&amp;lt;&lt;/span>BarterGroupEvaluation&lt;span style="color:#f92672">&amp;gt;&lt;/span> beforeResultPage;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;封装后的评论数据&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>BarterGroupEvaluationResult&lt;span style="color:#f92672">&amp;gt;&lt;/span> futureResult;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;剩余评论条数&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Integer futureResultNum;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;分类&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>BarterGroupCategory&lt;span style="color:#f92672">&amp;gt;&lt;/span> categorys;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(value&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;楼层数&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Integer floorNum;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(value&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;楼层id&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Long floorSecond;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(value&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;要说的&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> String say;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(value&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;加入或者是发布&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Integer joinOrPublish;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;会员表&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> BarterGroupUser barterGroupUser;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@ApiModelProperty&lt;/span>(value&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;加入时间&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> Long joinData;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="注解-一对多查询一个参数">注解 一对多查询(一个参数)&lt;/h2>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051430732.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051430867.png" alt="">&lt;/p>
&lt;h2 id="标签">标签&lt;/h2>
&lt;p>mybatis的xml的常用标签:&lt;/p>
&lt;p>&lt;strong>include&lt;/strong>和&lt;strong>sql&lt;/strong>标签&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;sql&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;query_column&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id,user_no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/sql&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;select&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;test&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> select &lt;span style="color:#f92672">&amp;lt;include&lt;/span> &lt;span style="color:#a6e22e">refid=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;query_column&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/include&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> from user_info
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/select&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>where标签&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;select&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;test&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> select * from user_info
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> where
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;if&lt;/span> &lt;span style="color:#a6e22e">test=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;userName != null and userName != &amp;#39;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user_name = #{userName}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/if&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;if&lt;/span> &lt;span style="color:#a6e22e">test=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;password != null and password != &amp;#39;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> and password = #{password}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/if&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/select&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果userName= null，则sql语句就变成&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> user_info &lt;span style="color:#66d9ef">where&lt;/span> &lt;span style="color:#66d9ef">and&lt;/span> password &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">#&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">{&lt;/span>password&lt;span style="color:#960050;background-color:#1e0010">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>where&lt;/code>标签可以去除where语句中的第一个and 或 or。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;select&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;test&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> select * from user_info
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;where&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;if&lt;/span> &lt;span style="color:#a6e22e">test=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;userName != null and userName != &amp;#39;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> and user_name = #{userName}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/if&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;if&lt;/span> &lt;span style="color:#a6e22e">test=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;password != null and password != &amp;#39;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> and password = #{password}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/if&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/where&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/select&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>set标签&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;update&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;myupdate&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> update user_info
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;set&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;if&lt;/span> &lt;span style="color:#a6e22e">test=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;userName != null&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user_name = #{userName},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/if&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;if&lt;/span> &lt;span style="color:#a6e22e">test=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;password != null&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> password = #{password,jdbcType=VARCHAR},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/if&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/set&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> where id = #{id,jdbcType=INTEGER}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/update&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>trim标签&lt;/strong>&lt;/p>
&lt;p>&lt;code>where&lt;/code>标签只能去除第一个and或or，不够灵活，trim标签功能更加强大。
trim标签的属性如下：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>prefix&lt;/strong> 在trim标签内容前面加上前缀&lt;/li>
&lt;li>&lt;strong>suffix&lt;/strong> 在trim标签内容后面加上后缀&lt;/li>
&lt;li>&lt;strong>prefixOverrides&lt;/strong> 移除前缀内容。即 属性会忽略通过管道分隔的文本序列，多个忽略序列用 “|” 隔开。它带来的结果就是所有在 prefixOverrides 属性中指定的内容将被移除。&lt;/li>
&lt;li>&lt;strong>suffixOverrides&lt;/strong> 移除前缀内容。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;trim&lt;/span> &lt;span style="color:#a6e22e">prefix=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;where&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">prefixOverrides=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;and&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;if&lt;/span> &lt;span style="color:#a6e22e">test=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;userId != null&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user_id=#{userId}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/if&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;if&lt;/span> &lt;span style="color:#a6e22e">test=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;pwd != null and pwd !=&amp;#39;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user_id=#{userId}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/if&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/trim&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>foreach标签&lt;/strong>&lt;/p>
&lt;p>foreach元素的属性主要有item，index，collection，open，separator，close.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>collection&lt;/strong> 要做foreach的对象，作为入参时，List对象默认用&amp;quot;list&amp;quot;代替作为键，数组对象有&amp;quot;array&amp;quot;代替作为键，Map对象没有默认的键。当然在作为入参时可以使用@Param(&amp;ldquo;keyName&amp;rdquo;)来设置键，设置keyName后，list,array将会失效。 除了入参这种情况外，还有一种作为参数对象的某个字段的时候。举个例子：如果User有属性List ids。入参是User对象，那么这个collection = &amp;ldquo;ids&amp;rdquo;.如果User有属性Ids ids;其中Ids是个对象，Ids有个属性List id;入参是User对象，那么collection = &amp;ldquo;&lt;a href="https://links.jianshu.com/go?to=http%3A%2F%2Fids.id">ids.id&lt;/a>&amp;quot;，必填&lt;/li>
&lt;li>&lt;strong>item&lt;/strong> 合中元素迭代时的别名，必选&lt;/li>
&lt;li>&lt;strong>index&lt;/strong> 在list和数组中,index是元素的序号，在map中，index是元素的key，可选&lt;/li>
&lt;li>&lt;strong>open&lt;/strong> foreach代码的开始符号，一般是(和close=&amp;rdquo;)&amp;ldquo;合用。常用在in(),values()时。可选&lt;/li>
&lt;li>&lt;strong>separator&lt;/strong> 元素之间的分隔符，例如在in()的时候，separator=&amp;rdquo;,&amp;ldquo;会自动在元素中间用“,“隔开，避免手动输入逗号导致sql错误，如in(1,2,)这样，可选。&lt;/li>
&lt;li>&lt;strong>close&lt;/strong> foreach代码的关闭符号，一般是)和open=&amp;rdquo;(&amp;ldquo;合用。常用在in(),values()时。可选&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>choose，when，otherwise标签&lt;/strong>&lt;/p>
&lt;p>功能有点类似于Java中的 swicth - case - default&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;select&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;getUser&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">resultType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;com.cat.pojo.User&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SELECT * FROM user
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;where&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;choose&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;when&lt;/span> &lt;span style="color:#a6e22e">test=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;id != null and test.trim() != &amp;#39;&amp;#39; &amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id = #{id}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/when&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;when&lt;/span> &lt;span style="color:#a6e22e">test=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;name != null and name.trim() != &amp;#39;&amp;#39; &amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name = #{name}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/when&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;otherwise&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> age = 17
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/otherwise&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/choose&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/where&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/select&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>if标签&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- 判断字符串--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;if&lt;/span> &lt;span style="color:#a6e22e">test=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;item != null and item != &amp;#39;&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/if&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&amp;lt;!-- 如果是Integer类型的需要把and后面去掉或是加上or--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;if&lt;/span> &lt;span style="color:#a6e22e">test=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;item != null&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/if&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;if&lt;/span> &lt;span style="color:#a6e22e">test=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;item != null and item != &amp;#39;&amp;#39; or item == 0&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&amp;lt;/if&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="存过函数">存过/函数&lt;/h2>
&lt;p>存过&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;select&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;pNextSupperUsers&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">parameterType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;map&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">statementType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;CALLABLE&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">resultType=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;vo.UserAgentVO&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> call p_next_supper_users(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #{type,mode=IN,jdbcType=INTEGER},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> #{userId,mode=IN,jdbcType=BIGINT}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/select&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>List&lt;span style="color:#f92672">&amp;lt;&lt;/span>UserAgentVO&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">pNextSupperUsers&lt;/span>(Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>String, Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> param);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>String, Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> param &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> HashMap&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>param.&lt;span style="color:#a6e22e">put&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;type&amp;#34;&lt;/span>, 1);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>param.&lt;span style="color:#a6e22e">put&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;userId&amp;#34;&lt;/span>, userId);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>List&lt;span style="color:#f92672">&amp;lt;&lt;/span>UserAgentVO&lt;span style="color:#f92672">&amp;gt;&lt;/span> list &lt;span style="color:#f92672">=&lt;/span> userInfoMapper.&lt;span style="color:#a6e22e">pNextSupperUsers&lt;/span>(param);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>函数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fn_next_user_count ( &lt;span style="color:#ae81ff">1&lt;/span>, u.id ) &lt;span style="color:#66d9ef">AS&lt;/span> teamCount,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">FROM&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>user_info
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="源码">源码&lt;/h1>
&lt;h2 id="参考">参考&lt;/h2>
&lt;blockquote>
&lt;p>&lt;a href="https://www.bilibili.com/video/BV1R14y1W7yS?p=1&amp;amp;vd_source=6f5cde8de02ba80d9974b12cabbbdddb">b站博学谷&lt;/a>&lt;/p>&lt;/blockquote>
&lt;p>架构设计&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051430309.png" alt="img">&lt;/p>
&lt;h2 id="启动测试方法">启动测试方法&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span> 第一种调用方法
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">test&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String resource &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;com/analyze/mybatis/mybatis-config.xml&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InputStream inputStream &lt;span style="color:#f92672">=&lt;/span> Resources.&lt;span style="color:#a6e22e">getResourceAsStream&lt;/span>(resource);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SqlSessionFactory sqlSessionFactory &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SqlSessionFactoryBuilder().&lt;span style="color:#a6e22e">build&lt;/span>(inputStream);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SqlSession sqlSession &lt;span style="color:#f92672">=&lt;/span> sqlSessionFactory.&lt;span style="color:#a6e22e">openSession&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Map map &lt;span style="color:#f92672">=&lt;/span> sqlSession.&lt;span style="color:#a6e22e">selectOne&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;com.analyze.mybatis.mapper.UserMapper.getUA&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sqlSession.&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">#&lt;/span> 第二种调用方法
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">test2&lt;/span>(){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String resource &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;com/analyze/mybatis/mybatis-config.xml&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InputStream inputStream &lt;span style="color:#f92672">=&lt;/span> Resources.&lt;span style="color:#a6e22e">getResourceAsStream&lt;/span>(resource);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SqlSessionFactory sqlSessionFactory &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SqlSessionFactoryBuilder().&lt;span style="color:#a6e22e">build&lt;/span>(inputStream);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SqlSession sqlSession &lt;span style="color:#f92672">=&lt;/span> sqlSessionFactory.&lt;span style="color:#a6e22e">openSession&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> UserMapper userMapper &lt;span style="color:#f92672">=&lt;/span> sqlSession.&lt;span style="color:#a6e22e">getMapper&lt;/span>(UserMapper.&lt;span style="color:#a6e22e">class&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Map map &lt;span style="color:#f92672">=&lt;/span> userMapper.&lt;span style="color:#a6e22e">getUA&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sqlSession.&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>下面的代码,大概意思就是能加载的配置文件的信息,解释&lt;/p>
&lt;p>&lt;code>InputStream inputStream = Resources.getResourceAsStream(resource);&lt;/code>这行代码的作用&lt;/p>
&lt;h2 id="读取mybatis的配置文件">读取mybatis的配置文件&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.io.Resources#getResourceAsStream(java.lang.String)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> InputStream &lt;span style="color:#a6e22e">getResourceAsStream&lt;/span>(String resource) &lt;span style="color:#66d9ef">throws&lt;/span> IOException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> getResourceAsStream(&lt;span style="color:#66d9ef">null&lt;/span>, resource);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.io.Resources#getResourceAsStream(java.lang.ClassLoader, java.lang.String)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> InputStream &lt;span style="color:#a6e22e">getResourceAsStream&lt;/span>(ClassLoader loader, String resource) &lt;span style="color:#66d9ef">throws&lt;/span> IOException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InputStream in &lt;span style="color:#f92672">=&lt;/span> classLoaderWrapper.&lt;span style="color:#a6e22e">getResourceAsStream&lt;/span>(resource, loader);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (in &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> IOException(&lt;span style="color:#e6db74">&amp;#34;Could not find resource &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> resource);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> in;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.io.ClassLoaderWrapper#getResourceAsStream(java.lang.String, java.lang.ClassLoader)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> InputStream &lt;span style="color:#a6e22e">getResourceAsStream&lt;/span>(String resource, ClassLoader classLoader) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> getResourceAsStream(resource, getClassLoaders(classLoader));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.io.ClassLoaderWrapper#getClassLoaders&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ClassLoader&lt;span style="color:#f92672">[]&lt;/span> &lt;span style="color:#a6e22e">getClassLoaders&lt;/span>(ClassLoader classLoader) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ClassLoader&lt;span style="color:#f92672">[]&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> classLoader,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> defaultClassLoader,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Thread.&lt;span style="color:#a6e22e">currentThread&lt;/span>().&lt;span style="color:#a6e22e">getContextClassLoader&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> getClass().&lt;span style="color:#a6e22e">getClassLoader&lt;/span>(),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> systemClassLoader};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.io.ClassLoaderWrapper#getResourceAsStream(java.lang.String, java.lang.ClassLoader[])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 找到一个可以用的Classloader&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>InputStream &lt;span style="color:#a6e22e">getResourceAsStream&lt;/span>(String resource, ClassLoader&lt;span style="color:#f92672">[]&lt;/span> classLoader) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (ClassLoader cl : classLoader) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> cl) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// try to find the resource as passed&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InputStream returnValue &lt;span style="color:#f92672">=&lt;/span> cl.&lt;span style="color:#a6e22e">getResourceAsStream&lt;/span>(resource);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">==&lt;/span> returnValue) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> returnValue &lt;span style="color:#f92672">=&lt;/span> cl.&lt;span style="color:#a6e22e">getResourceAsStream&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> resource);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> returnValue) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> returnValue;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>下面的代码,解释&lt;code>SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream);&lt;/code>,用来解析全局配置文件和解析mapper文件&lt;/p>
&lt;p>下面是解析全局配置文件&lt;/p>
&lt;h2 id="解析全局配置文件">解析全局配置文件&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.session.SqlSessionFactoryBuilder#build(java.io.InputStream)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> SqlSessionFactory &lt;span style="color:#a6e22e">build&lt;/span>(InputStream inputStream) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> build(inputStream, &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#66d9ef">null&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.session.SqlSessionFactoryBuilder#build(java.io.InputStream, java.lang.String, java.util.Properties)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> SqlSessionFactory &lt;span style="color:#a6e22e">build&lt;/span>(InputStream inputStream, String environment, Properties properties) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 1.创建XpathParse解析器对象,根据inputStream解析成Document对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 2.创建全局配置Configuration对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 使用构建者模式,好处降低偶尔,分离复杂对象的创建&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 构建XMLConfig&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> XMLConfigBuilder parser &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> XMLConfigBuilder(inputStream, environment, properties);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 根据Xpath解析xml配置文件,将配置文件封装到Configuration对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 返回DefaultSqlSessionFactory对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// parse() 就是配置文件解析完成了&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> build(parser.&lt;span style="color:#a6e22e">parse&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> ExceptionFactory.&lt;span style="color:#a6e22e">wrapException&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Error building SqlSession.&amp;#34;&lt;/span>, e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">finally&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ErrorContext.&lt;span style="color:#a6e22e">instance&lt;/span>().&lt;span style="color:#a6e22e">reset&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> inputStream.&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (IOException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Intentionally ignore. Prefer previous error.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.session.SqlSessionFactoryBuilder#build(org.apache.ibatis.session.Configuration)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 最终返回&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> SqlSessionFactory &lt;span style="color:#a6e22e">build&lt;/span>(Configuration config) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> DefaultSqlSessionFactory(config);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.builder.xml.XMLConfigBuilder#XMLConfigBuilder(java.io.InputStream, java.lang.String, java.util.Properties)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">XMLConfigBuilder&lt;/span>(InputStream inputStream, String environment, Properties props) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 点this,查看代码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> XPathParser(inputStream, &lt;span style="color:#66d9ef">true&lt;/span>, props, &lt;span style="color:#66d9ef">new&lt;/span> XMLMapperEntityResolver()), environment, props);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.builder.xml.XMLConfigBuilder#XMLConfigBuilder(org.apache.ibatis.parsing.XPathParser, java.lang.String, java.util.Properties)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#a6e22e">XMLConfigBuilder&lt;/span>(XPathParser parser, String environment, Properties props) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 创建Configuration对象，并通过TypeAliasRegistry注册一些Mybatis内部相关类的别名&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> Configuration());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ErrorContext.&lt;span style="color:#a6e22e">instance&lt;/span>().&lt;span style="color:#a6e22e">resource&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;SQL Mapper Configuration&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">configuration&lt;/span>.&lt;span style="color:#a6e22e">setVariables&lt;/span>(props);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">parsed&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">environment&lt;/span> &lt;span style="color:#f92672">=&lt;/span> environment;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">parser&lt;/span> &lt;span style="color:#f92672">=&lt;/span> parser;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.parsing.XPathParser#XPathParser(java.io.InputStream, boolean, java.util.Properties, org.xml.sax.EntityResolver)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">XPathParser&lt;/span>(InputStream inputStream, &lt;span style="color:#66d9ef">boolean&lt;/span> validation, Properties variables, EntityResolver entityResolver) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> commonConstructor(validation, variables, entityResolver);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 创建解析器&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">document&lt;/span> &lt;span style="color:#f92672">=&lt;/span> createDocument(&lt;span style="color:#66d9ef">new&lt;/span> InputSource(inputStream));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.parsing.XPathParser#createDocument&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 不用太关系,只是创建一个解析器的对象,顺便检查xml文档有没有写错&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> Document &lt;span style="color:#a6e22e">createDocument&lt;/span>(InputSource inputSource) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// important: this must only be called AFTER common constructor&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DocumentBuilderFactory factory &lt;span style="color:#f92672">=&lt;/span> DocumentBuilderFactory.&lt;span style="color:#a6e22e">newInstance&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> factory.&lt;span style="color:#a6e22e">setValidating&lt;/span>(validation);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> factory.&lt;span style="color:#a6e22e">setNamespaceAware&lt;/span>(&lt;span style="color:#66d9ef">false&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> factory.&lt;span style="color:#a6e22e">setIgnoringComments&lt;/span>(&lt;span style="color:#66d9ef">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> factory.&lt;span style="color:#a6e22e">setIgnoringElementContentWhitespace&lt;/span>(&lt;span style="color:#66d9ef">false&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> factory.&lt;span style="color:#a6e22e">setCoalescing&lt;/span>(&lt;span style="color:#66d9ef">false&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> factory.&lt;span style="color:#a6e22e">setExpandEntityReferences&lt;/span>(&lt;span style="color:#66d9ef">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DocumentBuilder builder &lt;span style="color:#f92672">=&lt;/span> factory.&lt;span style="color:#a6e22e">newDocumentBuilder&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> builder.&lt;span style="color:#a6e22e">setEntityResolver&lt;/span>(entityResolver);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> builder.&lt;span style="color:#a6e22e">setErrorHandler&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> ErrorHandler() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">error&lt;/span>(SAXParseException exception) &lt;span style="color:#66d9ef">throws&lt;/span> SAXException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> exception;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">fatalError&lt;/span>(SAXParseException exception) &lt;span style="color:#66d9ef">throws&lt;/span> SAXException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> exception;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">warning&lt;/span>(SAXParseException exception) &lt;span style="color:#66d9ef">throws&lt;/span> SAXException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 解析器的源码了,跟mybatis没有关系了&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> builder.&lt;span style="color:#a6e22e">parse&lt;/span>(inputSource);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> BuilderException(&lt;span style="color:#e6db74">&amp;#34;Error creating document instance. Cause: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> e, e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.builder.xml.XMLConfigBuilder#parse&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> Configuration &lt;span style="color:#a6e22e">parse&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (parsed) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 每一个配置文件,只能解析一次&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> BuilderException(&lt;span style="color:#e6db74">&amp;#34;Each XMLConfigBuilder can only be used once.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parsed &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 从根节点开始解析,最终封装到Configuration对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parseConfiguration(parser.&lt;span style="color:#a6e22e">evalNode&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/configuration&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> configuration;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.parsing.XPathParser#evalNode(java.lang.String)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> XNode &lt;span style="color:#a6e22e">evalNode&lt;/span>(String expression) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> evalNode(document, expression);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.parsing.XPathParser#evalNode(java.lang.Object, java.lang.String)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> XNode &lt;span style="color:#a6e22e">evalNode&lt;/span>(Object root, String expression) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Node node &lt;span style="color:#f92672">=&lt;/span> (Node) evaluate(expression, root, XPathConstants.&lt;span style="color:#a6e22e">NODE&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (node &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> XNode(&lt;span style="color:#66d9ef">this&lt;/span>, node, variables);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.builder.xml.XMLConfigBuilder#parseConfiguration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 可以配置这些信息:https://mybatis.org/mybatis-3/zh/configuration.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">parseConfiguration&lt;/span>(XNode root) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//issue #117 read properties first&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> propertiesElement(root.&lt;span style="color:#a6e22e">evalNode&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;properties&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Properties settings &lt;span style="color:#f92672">=&lt;/span> settingsAsProperties(root.&lt;span style="color:#a6e22e">evalNode&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;settings&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> loadCustomVfs(settings);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> loadCustomLogImpl(settings);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> typeAliasesElement(root.&lt;span style="color:#a6e22e">evalNode&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;typeAliases&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 插件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pluginElement(root.&lt;span style="color:#a6e22e">evalNode&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;plugins&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> objectFactoryElement(root.&lt;span style="color:#a6e22e">evalNode&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;objectFactory&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> objectWrapperFactoryElement(root.&lt;span style="color:#a6e22e">evalNode&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;objectWrapperFactory&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reflectorFactoryElement(root.&lt;span style="color:#a6e22e">evalNode&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;reflectorFactory&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> settingsElement(settings);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// read it after objectFactory and objectWrapperFactory issue #631&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 重点&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> environmentsElement(root.&lt;span style="color:#a6e22e">evalNode&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;environments&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> databaseIdProviderElement(root.&lt;span style="color:#a6e22e">evalNode&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;databaseIdProvider&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> typeHandlerElement(root.&lt;span style="color:#a6e22e">evalNode&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;typeHandlers&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 重点&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mapperElement(root.&lt;span style="color:#a6e22e">evalNode&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;mappers&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> BuilderException(&lt;span style="color:#e6db74">&amp;#34;Error parsing SQL Mapper Configuration. Cause: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> e, e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.builder.xml.XMLConfigBuilder#mapperElement&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">mapperElement&lt;/span>(XNode parent) &lt;span style="color:#66d9ef">throws&lt;/span> Exception {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (parent &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (XNode child : parent.&lt;span style="color:#a6e22e">getChildren&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#e6db74">&amp;#34;package&amp;#34;&lt;/span>.&lt;span style="color:#a6e22e">equals&lt;/span>(child.&lt;span style="color:#a6e22e">getName&lt;/span>())) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String mapperPackage &lt;span style="color:#f92672">=&lt;/span> child.&lt;span style="color:#a6e22e">getStringAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;name&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configuration.&lt;span style="color:#a6e22e">addMappers&lt;/span>(mapperPackage);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String resource &lt;span style="color:#f92672">=&lt;/span> child.&lt;span style="color:#a6e22e">getStringAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;resource&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String url &lt;span style="color:#f92672">=&lt;/span> child.&lt;span style="color:#a6e22e">getStringAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;url&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String mapperClass &lt;span style="color:#f92672">=&lt;/span> child.&lt;span style="color:#a6e22e">getStringAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;class&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 三个值是互斥的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (resource &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> url &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> mapperClass &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ErrorContext.&lt;span style="color:#a6e22e">instance&lt;/span>().&lt;span style="color:#a6e22e">resource&lt;/span>(resource);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InputStream inputStream &lt;span style="color:#f92672">=&lt;/span> Resources.&lt;span style="color:#a6e22e">getResourceAsStream&lt;/span>(resource);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> XMLMapperBuilder mapperParser &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> XMLMapperBuilder(inputStream, configuration, resource, configuration.&lt;span style="color:#a6e22e">getSqlFragments&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mapperParser.&lt;span style="color:#a6e22e">parse&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (resource &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> url &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> mapperClass &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ErrorContext.&lt;span style="color:#a6e22e">instance&lt;/span>().&lt;span style="color:#a6e22e">resource&lt;/span>(url);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 专门用来解析mapper映射文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> InputStream inputStream &lt;span style="color:#f92672">=&lt;/span> Resources.&lt;span style="color:#a6e22e">getUrlAsStream&lt;/span>(url);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 重点&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> XMLMapperBuilder mapperParser &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> XMLMapperBuilder(inputStream, configuration, url, configuration.&lt;span style="color:#a6e22e">getSqlFragments&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mapperParser.&lt;span style="color:#a6e22e">parse&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (resource &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> url &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> mapperClass &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Class&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&lt;/span> mapperInterface &lt;span style="color:#f92672">=&lt;/span> Resources.&lt;span style="color:#a6e22e">classForName&lt;/span>(mapperClass);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configuration.&lt;span style="color:#a6e22e">addMapper&lt;/span>(mapperInterface);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> BuilderException(&lt;span style="color:#e6db74">&amp;#34;A mapper element may only specify a url, resource or class, but not more than one.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>解释下environment作用,就是&lt;code>&amp;lt;environment id=&amp;quot;development&amp;quot;&amp;gt;&lt;/code>这里的,不同的环境不同的配置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;environments&lt;/span> &lt;span style="color:#a6e22e">default=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;development&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;environment&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;development&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;transactionManager&lt;/span> &lt;span style="color:#a6e22e">type=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;JDBC&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dataSource&lt;/span> &lt;span style="color:#a6e22e">type=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;POOLED&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;driver&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;com.mysql.cj.jdbc.Driver&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;url&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jdbc:mysql://192.168.3.12:3306/orangedb&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;username&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;root&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;abcd2022&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dataSource&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/environment&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;environment&lt;/span> &lt;span style="color:#a6e22e">id=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;test&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;transactionManager&lt;/span> &lt;span style="color:#a6e22e">type=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;JDBC&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dataSource&lt;/span> &lt;span style="color:#a6e22e">type=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;POOLED&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;driver&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;com.mysql.cj.jdbc.Driver&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;url&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;jdbc:mysql://192.168.3.12:3306/orangedb&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;username&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;root&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;property&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;abcd2022&amp;#34;&lt;/span>&lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/dataSource&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/environment&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/environments&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>用法:如下代码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>SqlSessionFactory sqlSessionFactory &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SqlSessionFactoryBuilder().&lt;span style="color:#a6e22e">build&lt;/span>(inputStream,&lt;span style="color:#e6db74">&amp;#34;development&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>下面是解析mapper文件,配置的属性,参考:&lt;code>https://mybatis.org/mybatis-3/zh/sqlmap-xml.html&lt;/code>&lt;/p>
&lt;h2 id="解析mapper配置文件">解析mapper配置文件&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.builder.xml.XMLMapperBuilder#XMLMapperBuilder(java.io.InputStream, org.apache.ibatis.session.Configuration, java.lang.String, java.util.Map&amp;lt;java.lang.String,org.apache.ibatis.parsing.XNode&amp;gt;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 这个方法,前面已经用过了&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">XMLMapperBuilder&lt;/span>(InputStream inputStream, Configuration configuration, String resource, Map&lt;span style="color:#f92672">&amp;lt;&lt;/span>String, XNode&lt;span style="color:#f92672">&amp;gt;&lt;/span> sqlFragments) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>(&lt;span style="color:#66d9ef">new&lt;/span> XPathParser(inputStream, &lt;span style="color:#66d9ef">true&lt;/span>, configuration.&lt;span style="color:#a6e22e">getVariables&lt;/span>(), &lt;span style="color:#66d9ef">new&lt;/span> XMLMapperEntityResolver()),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configuration, resource, sqlFragments);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.builder.xml.XMLMapperBuilder#parse&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">parse&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// mapper映射文件是否已经加载过&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>configuration.&lt;span style="color:#a6e22e">isResourceLoaded&lt;/span>(resource)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 从根节点解析&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configurationElement(parser.&lt;span style="color:#a6e22e">evalNode&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/mapper&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 标记已经解析&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configuration.&lt;span style="color:#a6e22e">addLoadedResource&lt;/span>(resource);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 为命名空间绑定映射&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> bindMapperForNamespace();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parsePendingResultMaps();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parsePendingCacheRefs();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parsePendingStatements();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.builder.xml.XMLMapperBuilder#configurationElement&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">configurationElement&lt;/span>(XNode context) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 获取命名空间&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String namespace &lt;span style="color:#f92672">=&lt;/span> context.&lt;span style="color:#a6e22e">getStringAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;namespace&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 命名空间不能为空&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (namespace &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">||&lt;/span> namespace.&lt;span style="color:#a6e22e">equals&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> BuilderException(&lt;span style="color:#e6db74">&amp;#34;Mapper&amp;#39;s namespace cannot be empty&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 设置当前的命名空间的值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 构建mappedStatement对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> builderAssistant.&lt;span style="color:#a6e22e">setCurrentNamespace&lt;/span>(namespace);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cacheRefElement(context.&lt;span style="color:#a6e22e">evalNode&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;cache-ref&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cacheElement(context.&lt;span style="color:#a6e22e">evalNode&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;cache&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parameterMapElement(context.&lt;span style="color:#a6e22e">evalNodes&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/mapper/parameterMap&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resultMapElements(context.&lt;span style="color:#a6e22e">evalNodes&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/mapper/resultMap&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sqlElement(context.&lt;span style="color:#a6e22e">evalNodes&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/mapper/sql&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 重点&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buildStatementFromContext(context.&lt;span style="color:#a6e22e">evalNodes&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;select|insert|update|delete&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> BuilderException(&lt;span style="color:#e6db74">&amp;#34;Error parsing Mapper XML. The XML location is &amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> resource &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39;. Cause: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> e, e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.builder.xml.XMLMapperBuilder#buildStatementFromContext(java.util.List&amp;lt;org.apache.ibatis.parsing.XNode&amp;gt;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">buildStatementFromContext&lt;/span>(List&lt;span style="color:#f92672">&amp;lt;&lt;/span>XNode&lt;span style="color:#f92672">&amp;gt;&lt;/span> list) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (configuration.&lt;span style="color:#a6e22e">getDatabaseId&lt;/span>() &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buildStatementFromContext(list, configuration.&lt;span style="color:#a6e22e">getDatabaseId&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 没有配置过getDatabaseId,所以走这里&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buildStatementFromContext(list, &lt;span style="color:#66d9ef">null&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.builder.xml.XMLMapperBuilder#buildStatementFromContext(java.util.List&amp;lt;org.apache.ibatis.parsing.XNode&amp;gt;, java.lang.String)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">buildStatementFromContext&lt;/span>(List&lt;span style="color:#f92672">&amp;lt;&lt;/span>XNode&lt;span style="color:#f92672">&amp;gt;&lt;/span> list, String requiredDatabaseId) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (XNode context : list) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">final&lt;/span> XMLStatementBuilder statementParser &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> XMLStatementBuilder(configuration, builderAssistant, context, requiredDatabaseId);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> statementParser.&lt;span style="color:#a6e22e">parseStatementNode&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (IncompleteElementException e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configuration.&lt;span style="color:#a6e22e">addIncompleteStatement&lt;/span>(statementParser);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.builder.xml.XMLStatementBuilder#parseStatementNode&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">parseStatementNode&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String id &lt;span style="color:#f92672">=&lt;/span> context.&lt;span style="color:#a6e22e">getStringAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String databaseId &lt;span style="color:#f92672">=&lt;/span> context.&lt;span style="color:#a6e22e">getStringAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;databaseId&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 没有设置过databaseId&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">!&lt;/span>databaseIdMatchesCurrent(id, databaseId, &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">requiredDatabaseId&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String nodeName &lt;span style="color:#f92672">=&lt;/span> context.&lt;span style="color:#a6e22e">getNode&lt;/span>().&lt;span style="color:#a6e22e">getNodeName&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 解析Sql命令类型是什么,确实是 Select,update,insert,delete 类型&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SqlCommandType sqlCommandType &lt;span style="color:#f92672">=&lt;/span> SqlCommandType.&lt;span style="color:#a6e22e">valueOf&lt;/span>(nodeName.&lt;span style="color:#a6e22e">toUpperCase&lt;/span>(Locale.&lt;span style="color:#a6e22e">ENGLISH&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> isSelect &lt;span style="color:#f92672">=&lt;/span> sqlCommandType &lt;span style="color:#f92672">==&lt;/span> SqlCommandType.&lt;span style="color:#a6e22e">SELECT&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> flushCache &lt;span style="color:#f92672">=&lt;/span> context.&lt;span style="color:#a6e22e">getBooleanAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;flushCache&amp;#34;&lt;/span>, &lt;span style="color:#f92672">!&lt;/span>isSelect);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> useCache &lt;span style="color:#f92672">=&lt;/span> context.&lt;span style="color:#a6e22e">getBooleanAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;useCache&amp;#34;&lt;/span>, isSelect);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> resultOrdered &lt;span style="color:#f92672">=&lt;/span> context.&lt;span style="color:#a6e22e">getBooleanAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;resultOrdered&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">false&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Include Fragments before parsing&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> XMLIncludeTransformer includeParser &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> XMLIncludeTransformer(configuration, builderAssistant);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> includeParser.&lt;span style="color:#a6e22e">applyIncludes&lt;/span>(context.&lt;span style="color:#a6e22e">getNode&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String parameterType &lt;span style="color:#f92672">=&lt;/span> context.&lt;span style="color:#a6e22e">getStringAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;parameterType&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Class&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&lt;/span> parameterTypeClass &lt;span style="color:#f92672">=&lt;/span> resolveClass(parameterType);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 配置语言驱动&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String lang &lt;span style="color:#f92672">=&lt;/span> context.&lt;span style="color:#a6e22e">getStringAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;lang&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LanguageDriver langDriver &lt;span style="color:#f92672">=&lt;/span> getLanguageDriver(lang);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Parse selectKey after includes and remove them.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> processSelectKeyNodes(id, parameterTypeClass, langDriver);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Parse the SQL (pre: &amp;lt;selectKey&amp;gt; and &amp;lt;include&amp;gt; were parsed and removed)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> KeyGenerator keyGenerator;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String keyStatementId &lt;span style="color:#f92672">=&lt;/span> id &lt;span style="color:#f92672">+&lt;/span> SelectKeyGenerator.&lt;span style="color:#a6e22e">SELECT_KEY_SUFFIX&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> keyStatementId &lt;span style="color:#f92672">=&lt;/span> builderAssistant.&lt;span style="color:#a6e22e">applyCurrentNamespace&lt;/span>(keyStatementId, &lt;span style="color:#66d9ef">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (configuration.&lt;span style="color:#a6e22e">hasKeyGenerator&lt;/span>(keyStatementId)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> keyGenerator &lt;span style="color:#f92672">=&lt;/span> configuration.&lt;span style="color:#a6e22e">getKeyGenerator&lt;/span>(keyStatementId);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> keyGenerator &lt;span style="color:#f92672">=&lt;/span> context.&lt;span style="color:#a6e22e">getBooleanAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;useGeneratedKeys&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configuration.&lt;span style="color:#a6e22e">isUseGeneratedKeys&lt;/span>() &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> SqlCommandType.&lt;span style="color:#a6e22e">INSERT&lt;/span>.&lt;span style="color:#a6e22e">equals&lt;/span>(sqlCommandType))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">?&lt;/span> Jdbc3KeyGenerator.&lt;span style="color:#a6e22e">INSTANCE&lt;/span> : NoKeyGenerator.&lt;span style="color:#a6e22e">INSTANCE&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 替换占位符?,保存#{}里面的内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SqlSource sqlSource &lt;span style="color:#f92672">=&lt;/span> langDriver.&lt;span style="color:#a6e22e">createSqlSource&lt;/span>(configuration, context, parameterTypeClass);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> StatementType statementType &lt;span style="color:#f92672">=&lt;/span> StatementType.&lt;span style="color:#a6e22e">valueOf&lt;/span>(context.&lt;span style="color:#a6e22e">getStringAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;statementType&amp;#34;&lt;/span>, StatementType.&lt;span style="color:#a6e22e">PREPARED&lt;/span>.&lt;span style="color:#a6e22e">toString&lt;/span>()));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Integer fetchSize &lt;span style="color:#f92672">=&lt;/span> context.&lt;span style="color:#a6e22e">getIntAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;fetchSize&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Integer timeout &lt;span style="color:#f92672">=&lt;/span> context.&lt;span style="color:#a6e22e">getIntAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;timeout&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String parameterMap &lt;span style="color:#f92672">=&lt;/span> context.&lt;span style="color:#a6e22e">getStringAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;parameterMap&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String resultType &lt;span style="color:#f92672">=&lt;/span> context.&lt;span style="color:#a6e22e">getStringAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;resultType&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Class&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&lt;/span> resultTypeClass &lt;span style="color:#f92672">=&lt;/span> resolveClass(resultType);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String resultMap &lt;span style="color:#f92672">=&lt;/span> context.&lt;span style="color:#a6e22e">getStringAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;resultMap&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String resultSetType &lt;span style="color:#f92672">=&lt;/span> context.&lt;span style="color:#a6e22e">getStringAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;resultSetType&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ResultSetType resultSetTypeEnum &lt;span style="color:#f92672">=&lt;/span> resolveResultSetType(resultSetType);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (resultSetTypeEnum &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resultSetTypeEnum &lt;span style="color:#f92672">=&lt;/span> configuration.&lt;span style="color:#a6e22e">getDefaultResultSetType&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String keyProperty &lt;span style="color:#f92672">=&lt;/span> context.&lt;span style="color:#a6e22e">getStringAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;keyProperty&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String keyColumn &lt;span style="color:#f92672">=&lt;/span> context.&lt;span style="color:#a6e22e">getStringAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;keyColumn&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String resultSets &lt;span style="color:#f92672">=&lt;/span> context.&lt;span style="color:#a6e22e">getStringAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;resultSets&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 通过构建者助手,创建mappedstatement对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> builderAssistant.&lt;span style="color:#a6e22e">addMappedStatement&lt;/span>(id, sqlSource, statementType, sqlCommandType,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fetchSize, timeout, parameterMap, parameterTypeClass, resultMap, resultTypeClass,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resultSetTypeEnum, flushCache, useCache, resultOrdered,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> keyGenerator, keyProperty, keyColumn, databaseId, langDriver, resultSets);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.builder.MapperBuilderAssistant#addMappedStatement(java.lang.String, org.apache.ibatis.mapping.SqlSource, org.apache.ibatis.mapping.StatementType, org.apache.ibatis.mapping.SqlCommandType, java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.Class&amp;lt;?&amp;gt;, java.lang.String, java.lang.Class&amp;lt;?&amp;gt;, org.apache.ibatis.mapping.ResultSetType, boolean, boolean, boolean, org.apache.ibatis.executor.keygen.KeyGenerator, java.lang.String, java.lang.String, java.lang.String, org.apache.ibatis.scripting.LanguageDriver, java.lang.String)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> MappedStatement &lt;span style="color:#a6e22e">addMappedStatement&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String id,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SqlSource sqlSource,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> StatementType statementType,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SqlCommandType sqlCommandType,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Integer fetchSize,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Integer timeout,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String parameterMap,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Class&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&lt;/span> parameterType,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String resultMap,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Class&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&lt;/span> resultType,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ResultSetType resultSetType,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> flushCache,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> useCache,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> resultOrdered,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> KeyGenerator keyGenerator,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String keyProperty,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String keyColumn,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String databaseId,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LanguageDriver lang,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String resultSets) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (unresolvedCacheRef) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> IncompleteElementException(&lt;span style="color:#e6db74">&amp;#34;Cache-ref not yet resolved&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id &lt;span style="color:#f92672">=&lt;/span> applyCurrentNamespace(id, &lt;span style="color:#66d9ef">false&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">boolean&lt;/span> isSelect &lt;span style="color:#f92672">=&lt;/span> sqlCommandType &lt;span style="color:#f92672">==&lt;/span> SqlCommandType.&lt;span style="color:#a6e22e">SELECT&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 创建MappedStatement对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MappedStatement.&lt;span style="color:#a6e22e">Builder&lt;/span> statementBuilder &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> MappedStatement.&lt;span style="color:#a6e22e">Builder&lt;/span>(configuration, id, sqlSource, sqlCommandType)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">resource&lt;/span>(resource)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">fetchSize&lt;/span>(fetchSize)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">timeout&lt;/span>(timeout)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">statementType&lt;/span>(statementType)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">keyGenerator&lt;/span>(keyGenerator)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">keyProperty&lt;/span>(keyProperty)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">keyColumn&lt;/span>(keyColumn)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">databaseId&lt;/span>(databaseId)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">lang&lt;/span>(lang)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">resultOrdered&lt;/span>(resultOrdered)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">resultSets&lt;/span>(resultSets)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">resultMaps&lt;/span>(getStatementResultMaps(resultMap, resultType, id))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">resultSetType&lt;/span>(resultSetType)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">flushCacheRequired&lt;/span>(valueOrDefault(flushCache, &lt;span style="color:#f92672">!&lt;/span>isSelect))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">useCache&lt;/span>(valueOrDefault(useCache, isSelect))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#a6e22e">cache&lt;/span>(currentCache);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ParameterMap statementParameterMap &lt;span style="color:#f92672">=&lt;/span> getStatementParameterMap(parameterMap, parameterType, id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (statementParameterMap &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> statementBuilder.&lt;span style="color:#a6e22e">parameterMap&lt;/span>(statementParameterMap);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 封装好MappedStatement,并返回&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MappedStatement statement &lt;span style="color:#f92672">=&lt;/span> statementBuilder.&lt;span style="color:#a6e22e">build&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configuration.&lt;span style="color:#a6e22e">addMappedStatement&lt;/span>(statement);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> statement;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.builder.MapperBuilderAssistant#applyCurrentNamespace&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">applyCurrentNamespace&lt;/span>(String base, &lt;span style="color:#66d9ef">boolean&lt;/span> isReference) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (base &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (isReference) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// is it qualified with any namespace yet?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (base.&lt;span style="color:#a6e22e">contains&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> base;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// is it qualified with this namespace yet?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (base.&lt;span style="color:#a6e22e">startsWith&lt;/span>(currentNamespace &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> base;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (base.&lt;span style="color:#a6e22e">contains&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span>)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> BuilderException(&lt;span style="color:#e6db74">&amp;#34;Dots are not allowed in element names, please remove it from &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> base);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// namespacename+点+方法名&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> currentNamespace &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> base;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>到这里,配置文件就解析完成了,下面是创建SqlSessionFactory对象&lt;/p>
&lt;h2 id="sqlsession">SqlSession&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// org.apache.ibatis.session.SqlSessionFactoryBuilder#build(org.apache.ibatis.session.Configuration)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> SqlSessionFactory &lt;span style="color:#a6e22e">build&lt;/span>(Configuration config) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> DefaultSqlSessionFactory(config);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>下面是mybatis创建sql的流程&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// /Users/anthony/.m2/repository/org/mybatis/mybatis/3.5.2/mybatis-3.5.2-sources.jar!/org/apache/ibatis/builder/xml/XMLStatementBuilder.java:96&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 占位符是如果进行替换的?动态sql如果进行的解析&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>String lang &lt;span style="color:#f92672">=&lt;/span> context.&lt;span style="color:#a6e22e">getStringAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;lang&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>LanguageDriver langDriver &lt;span style="color:#f92672">=&lt;/span> getLanguageDriver(lang);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SqlSource sqlSource &lt;span style="color:#f92672">=&lt;/span> langDriver.&lt;span style="color:#a6e22e">createSqlSource&lt;/span>(configuration, context, parameterTypeClass);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.builder.xml.XMLStatementBuilder#getLanguageDriver&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> LanguageDriver &lt;span style="color:#a6e22e">getLanguageDriver&lt;/span>(String lang) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Class&lt;span style="color:#f92672">&amp;lt;?&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> LanguageDriver&lt;span style="color:#f92672">&amp;gt;&lt;/span> langClass &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (lang &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> langClass &lt;span style="color:#f92672">=&lt;/span> resolveClass(lang);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> configuration.&lt;span style="color:#a6e22e">getLanguageDriver&lt;/span>(langClass);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.session.Configuration#getLanguageDriver&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> LanguageDriver &lt;span style="color:#a6e22e">getLanguageDriver&lt;/span>(Class&lt;span style="color:#f92672">&amp;lt;?&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> LanguageDriver&lt;span style="color:#f92672">&amp;gt;&lt;/span> langClass) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (langClass &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> languageRegistry.&lt;span style="color:#a6e22e">getDefaultDriver&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> languageRegistry.&lt;span style="color:#a6e22e">register&lt;/span>(langClass);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> languageRegistry.&lt;span style="color:#a6e22e">getDriver&lt;/span>(langClass);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.scripting.LanguageDriverRegistry#getDefaultDriver&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 打断点可以看到是:XMLLanguageDriver&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> LanguageDriver &lt;span style="color:#a6e22e">getDefaultDriver&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> getDriver(getDefaultDriverClass());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> Class&lt;span style="color:#f92672">&amp;lt;?&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> LanguageDriver&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">getDefaultDriverClass&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> defaultDriverClass;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.scripting.xmltags.XMLLanguageDriver#createSqlSource(org.apache.ibatis.session.Configuration, org.apache.ibatis.parsing.XNode, java.lang.Class&amp;lt;?&amp;gt;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> SqlSource &lt;span style="color:#a6e22e">createSqlSource&lt;/span>(Configuration configuration, XNode script, Class&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&lt;/span> parameterType) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> XMLScriptBuilder builder &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> XMLScriptBuilder(configuration, script, parameterType);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> builder.&lt;span style="color:#a6e22e">parseScriptNode&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.scripting.xmltags.XMLScriptBuilder#XMLScriptBuilder(org.apache.ibatis.session.Configuration, org.apache.ibatis.parsing.XNode, java.lang.Class&amp;lt;?&amp;gt;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">XMLScriptBuilder&lt;/span>(Configuration configuration, XNode context, Class&lt;span style="color:#f92672">&amp;lt;?&amp;gt;&lt;/span> parameterType) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">super&lt;/span>(configuration);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">context&lt;/span> &lt;span style="color:#f92672">=&lt;/span> context;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">parameterType&lt;/span> &lt;span style="color:#f92672">=&lt;/span> parameterType;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 初始化动态sql的节点处理器结合&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> initNodeHandlerMap();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.scripting.xmltags.XMLScriptBuilder#initNodeHandlerMap&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">initNodeHandlerMap&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodeHandlerMap.&lt;span style="color:#a6e22e">put&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;trim&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> TrimHandler());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodeHandlerMap.&lt;span style="color:#a6e22e">put&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;where&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> WhereHandler());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodeHandlerMap.&lt;span style="color:#a6e22e">put&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;set&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> SetHandler());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodeHandlerMap.&lt;span style="color:#a6e22e">put&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;foreach&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> ForEachHandler());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodeHandlerMap.&lt;span style="color:#a6e22e">put&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;if&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> IfHandler());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodeHandlerMap.&lt;span style="color:#a6e22e">put&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;choose&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> ChooseHandler());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodeHandlerMap.&lt;span style="color:#a6e22e">put&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;when&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> IfHandler());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodeHandlerMap.&lt;span style="color:#a6e22e">put&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;otherwise&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> OtherwiseHandler());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nodeHandlerMap.&lt;span style="color:#a6e22e">put&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;bind&amp;#34;&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> BindHandler());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.scripting.xmltags.XMLScriptBuilder#parseScriptNode&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 解析sql,还有参数类型和结果集类型&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> SqlSource &lt;span style="color:#a6e22e">parseScriptNode&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MixedSqlNode rootSqlNode &lt;span style="color:#f92672">=&lt;/span> parseDynamicTags(context);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SqlSource sqlSource;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (isDynamic) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sqlSource &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> DynamicSqlSource(configuration, rootSqlNode);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sqlSource &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> RawSqlSource(configuration, rootSqlNode, parameterType);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> sqlSource;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>全部就解析完成了,接下来&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051430408.png" alt="image-20230813213519036">&lt;/p>
&lt;p>看看&lt;code>session = sqlSessionFactory.openSession();&lt;/code>&lt;/p>
&lt;ul>
&lt;li>创建事务对象&lt;/li>
&lt;li>创建了执行器对象CasheingExecutor&lt;/li>
&lt;li>创建DefaultSqlSession对象&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.session.defaults.DefaultSqlSessionFactory#openSession()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> SqlSession &lt;span style="color:#a6e22e">openSession&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> openSessionFromDataSource(configuration.&lt;span style="color:#a6e22e">getDefaultExecutorType&lt;/span>(), &lt;span style="color:#66d9ef">null&lt;/span>, &lt;span style="color:#66d9ef">false&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.session.Configuration#getDefaultExecutorType&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// protected ExecutorType defaultExecutorType = ExecutorType.SIMPLE;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> ExecutorType &lt;span style="color:#a6e22e">getDefaultExecutorType&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> defaultExecutorType;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.session.defaults.DefaultSqlSessionFactory#openSessionFromDataSource&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 参数一:执行器,参数二:隔离级别&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> SqlSession &lt;span style="color:#a6e22e">openSessionFromDataSource&lt;/span>(ExecutorType execType, TransactionIsolationLevel level, &lt;span style="color:#66d9ef">boolean&lt;/span> autoCommit) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Transaction tx &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 获取数据源环境信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">final&lt;/span> Environment environment &lt;span style="color:#f92672">=&lt;/span> configuration.&lt;span style="color:#a6e22e">getEnvironment&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 获取事务工厂&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">final&lt;/span> TransactionFactory transactionFactory &lt;span style="color:#f92672">=&lt;/span> getTransactionFactoryFromEnvironment(environment);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 获取JdbcTransaction或者ManagedTransaction&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// ManagedTransaction 就相当于没有事务&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tx &lt;span style="color:#f92672">=&lt;/span> transactionFactory.&lt;span style="color:#a6e22e">newTransaction&lt;/span>(environment.&lt;span style="color:#a6e22e">getDataSource&lt;/span>(), level, autoCommit);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 创建Executor执行器&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">final&lt;/span> Executor executor &lt;span style="color:#f92672">=&lt;/span> configuration.&lt;span style="color:#a6e22e">newExecutor&lt;/span>(tx, execType);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 创建DefaultSqlSession&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> DefaultSqlSession(configuration, executor, autoCommit);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> closeTransaction(tx); &lt;span style="color:#75715e">// may have fetched a connection so lets call close()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> ExceptionFactory.&lt;span style="color:#a6e22e">wrapException&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Error opening session. Cause: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> e, e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">finally&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ErrorContext.&lt;span style="color:#a6e22e">instance&lt;/span>().&lt;span style="color:#a6e22e">reset&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.transaction.jdbc.JdbcTransactionFactory#newTransaction(java.sql.Connection)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> Transaction &lt;span style="color:#a6e22e">newTransaction&lt;/span>(DataSource ds, TransactionIsolationLevel level, &lt;span style="color:#66d9ef">boolean&lt;/span> autoCommit) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> JdbcTransaction(ds, level, autoCommit);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.session.Configuration#newExecutor(org.apache.ibatis.transaction.Transaction, org.apache.ibatis.session.ExecutorType)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">public&lt;/span> Executor &lt;span style="color:#a6e22e">newExecutor&lt;/span>(Transaction transaction, ExecutorType executorType) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> executorType &lt;span style="color:#f92672">=&lt;/span> executorType &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">?&lt;/span> defaultExecutorType : executorType;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> executorType &lt;span style="color:#f92672">=&lt;/span> executorType &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">?&lt;/span> ExecutorType.&lt;span style="color:#a6e22e">SIMPLE&lt;/span> : executorType;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Executor executor;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (ExecutorType.&lt;span style="color:#a6e22e">BATCH&lt;/span> &lt;span style="color:#f92672">==&lt;/span> executorType) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> executor &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> BatchExecutor(&lt;span style="color:#66d9ef">this&lt;/span>, transaction);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (ExecutorType.&lt;span style="color:#a6e22e">REUSE&lt;/span> &lt;span style="color:#f92672">==&lt;/span> executorType) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> executor &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ReuseExecutor(&lt;span style="color:#66d9ef">this&lt;/span>, transaction);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> executor &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SimpleExecutor(&lt;span style="color:#66d9ef">this&lt;/span>, transaction);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 如果允许缓存,会通过CachingExecutor去代理一层&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (cacheEnabled) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> executor &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> CachingExecutor(executor);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 拦截器插件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> executor &lt;span style="color:#f92672">=&lt;/span> (Executor) interceptorChain.&lt;span style="color:#a6e22e">pluginAll&lt;/span>(executor);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> executor;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.executor.CachingExecutor#CachingExecutor&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">CachingExecutor&lt;/span>(Executor delegate) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">delegate&lt;/span> &lt;span style="color:#f92672">=&lt;/span> delegate;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> delegate.&lt;span style="color:#a6e22e">setExecutorWrapper&lt;/span>(&lt;span style="color:#66d9ef">this&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="调用具体的api进行查询">调用具体的API进行查询&lt;/h2>
&lt;p>用&lt;code>启动类&lt;/code>中的方法,对比可以发现两段代码不同之处为:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>Map map &lt;span style="color:#f92672">=&lt;/span> sqlSession.&lt;span style="color:#a6e22e">selectOne&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;com.analyze.mybatis.mapper.UserMapper.getUA&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>UserMapper userMapper &lt;span style="color:#f92672">=&lt;/span> sqlSession.&lt;span style="color:#a6e22e">getMapper&lt;/span>(UserMapper.&lt;span style="color:#a6e22e">class&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Map map &lt;span style="color:#f92672">=&lt;/span> userMapper.&lt;span style="color:#a6e22e">getUA&lt;/span>();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>在查看&lt;code>DefaultSqlSession&lt;/code>中的&lt;code>selectOne&lt;/code>方法,会执行以下的调用链&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.session.defaults.DefaultSqlSession#selectOne(java.lang.String, java.lang.Object)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> T &lt;span style="color:#a6e22e">selectOne&lt;/span>(String statement, Object parameter) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Popular vote was to return null on 0 results and throw exception on too many.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>T&lt;span style="color:#f92672">&amp;gt;&lt;/span> list &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">selectList&lt;/span>(statement, parameter);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (list.&lt;span style="color:#a6e22e">size&lt;/span>() &lt;span style="color:#f92672">==&lt;/span> 1) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> list.&lt;span style="color:#a6e22e">get&lt;/span>(0);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (list.&lt;span style="color:#a6e22e">size&lt;/span>() &lt;span style="color:#f92672">&amp;gt;&lt;/span> 1) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> TooManyResultsException(&lt;span style="color:#e6db74">&amp;#34;Expected one result (or null) to be returned by selectOne(), but found: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> list.&lt;span style="color:#a6e22e">size&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.session.defaults.DefaultSqlSession#selectList(java.lang.String, java.lang.Object)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// RowBounds 分页对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">selectList&lt;/span>(String statement, Object parameter) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#a6e22e">selectList&lt;/span>(statement, parameter, RowBounds.&lt;span style="color:#a6e22e">DEFAULT&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.session.defaults.DefaultSqlSession#selectList(java.lang.String, java.lang.Object, org.apache.ibatis.session.RowBounds)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">selectList&lt;/span>(String statement, Object parameter, RowBounds rowBounds) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 根据传入的statementId,获取mapperStatement对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MappedStatement ms &lt;span style="color:#f92672">=&lt;/span> configuration.&lt;span style="color:#a6e22e">getMappedStatement&lt;/span>(statement);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 调用执行器的方法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> executor.&lt;span style="color:#a6e22e">query&lt;/span>(ms, wrapCollection(parameter), rowBounds, Executor.&lt;span style="color:#a6e22e">NO_RESULT_HANDLER&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">catch&lt;/span> (Exception e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> ExceptionFactory.&lt;span style="color:#a6e22e">wrapException&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Error querying database. Cause: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> e, e);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">finally&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ErrorContext.&lt;span style="color:#a6e22e">instance&lt;/span>().&lt;span style="color:#a6e22e">reset&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.executor.CachingExecutor#query(org.apache.ibatis.mapping.MappedStatement, java.lang.Object, org.apache.ibatis.session.RowBounds, org.apache.ibatis.session.ResultHandler)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 注意这里是CachingExecutor,默认的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">query&lt;/span>(MappedStatement ms, Object parameterObject, RowBounds rowBounds, ResultHandler resultHandler) &lt;span style="color:#66d9ef">throws&lt;/span> SQLException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 获取带问号的sql语句,比如 select * from user_info where id = ?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BoundSql boundSql &lt;span style="color:#f92672">=&lt;/span> ms.&lt;span style="color:#a6e22e">getBoundSql&lt;/span>(parameterObject);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 生成缓存key&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CacheKey key &lt;span style="color:#f92672">=&lt;/span> createCacheKey(ms, parameterObject, rowBounds, boundSql);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> query(ms, parameterObject, rowBounds, resultHandler, key, boundSql);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.executor.CachingExecutor#query(org.apache.ibatis.mapping.MappedStatement, java.lang.Object, org.apache.ibatis.session.RowBounds, org.apache.ibatis.session.ResultHandler, org.apache.ibatis.cache.CacheKey, org.apache.ibatis.mapping.BoundSql)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">query&lt;/span>(MappedStatement ms, Object parameterObject, RowBounds rowBounds, ResultHandler resultHandler, CacheKey key, BoundSql boundSql)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throws&lt;/span> SQLException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 二级缓存&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// usermapper的标签里可以设置&amp;lt;Cache&amp;gt;缓存标签&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Cache cache &lt;span style="color:#f92672">=&lt;/span> ms.&lt;span style="color:#a6e22e">getCache&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (cache &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 刷新二级缓存,在&amp;lt;select&amp;gt; 标签里可以配置flushcache&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flushCacheIfRequired(ms);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 在&amp;lt;select&amp;gt; 标签里可以配置usecache&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (ms.&lt;span style="color:#a6e22e">isUseCache&lt;/span>() &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> resultHandler &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 判断是不是存过&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ensureNoOutParams(ms, boundSql);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@SuppressWarnings&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;unchecked&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 从二级缓存中查询数据&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span> list &lt;span style="color:#f92672">=&lt;/span> (List&lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span>) tcm.&lt;span style="color:#a6e22e">getObject&lt;/span>(cache, key);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 如果从二级缓存没有查询到数据&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (list &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 委托给BaseExecutor执行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> list &lt;span style="color:#f92672">=&lt;/span> delegate.&lt;span style="color:#a6e22e">query&lt;/span>(ms, parameterObject, rowBounds, resultHandler, key, boundSql);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 将查询结果保存到二级缓存中,这里只是存到map集合中,没有真正存到二级缓存中&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tcm.&lt;span style="color:#a6e22e">putObject&lt;/span>(cache, key, list); &lt;span style="color:#75715e">// issue #578 and #116&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> list;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> delegate.&lt;span style="color:#a6e22e">query&lt;/span>(ms, parameterObject, rowBounds, resultHandler, key, boundSql);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.executor.BaseExecutor#query(org.apache.ibatis.mapping.MappedStatement, java.lang.Object, org.apache.ibatis.session.RowBounds, org.apache.ibatis.session.ResultHandler, org.apache.ibatis.cache.CacheKey, org.apache.ibatis.mapping.BoundSql)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">query&lt;/span>(MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler, CacheKey key, BoundSql boundSql) &lt;span style="color:#66d9ef">throws&lt;/span> SQLException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ErrorContext.&lt;span style="color:#a6e22e">instance&lt;/span>().&lt;span style="color:#a6e22e">resource&lt;/span>(ms.&lt;span style="color:#a6e22e">getResource&lt;/span>()).&lt;span style="color:#a6e22e">activity&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;executing a query&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">object&lt;/span>(ms.&lt;span style="color:#a6e22e">getId&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (closed) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ExecutorException(&lt;span style="color:#e6db74">&amp;#34;Executor was closed.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 如果配置了FlushCacheRequired为true,则会在执行器执行之前就清空本地一级缓存&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (queryStack &lt;span style="color:#f92672">==&lt;/span> 0 &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ms.&lt;span style="color:#a6e22e">isFlushCacheRequired&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 清空缓存&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clearLocalCache();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span> list;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> queryStack&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 从一级缓存中获取数据&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> list &lt;span style="color:#f92672">=&lt;/span> resultHandler &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">?&lt;/span> (List&lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span>) localCache.&lt;span style="color:#a6e22e">getObject&lt;/span>(key) : &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (list &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 如果有数据,则处理本地缓存结果给输出参数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 还是处理存过&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> handleLocallyCachedOutputParameters(ms, key, parameter, boundSql);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 没有缓存结果,则从数据库查询结果&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> list &lt;span style="color:#f92672">=&lt;/span> queryFromDatabase(ms, parameter, rowBounds, resultHandler, key, boundSql);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">finally&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> queryStack&lt;span style="color:#f92672">--&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (queryStack &lt;span style="color:#f92672">==&lt;/span> 0) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (DeferredLoad deferredLoad : deferredLoads) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> deferredLoad.&lt;span style="color:#a6e22e">load&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// issue #601&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> deferredLoads.&lt;span style="color:#a6e22e">clear&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (configuration.&lt;span style="color:#a6e22e">getLocalCacheScope&lt;/span>() &lt;span style="color:#f92672">==&lt;/span> LocalCacheScope.&lt;span style="color:#a6e22e">STATEMENT&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// issue #482&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> clearLocalCache();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> list;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.executor.BaseExecutor#queryFromDatabase&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">queryFromDatabase&lt;/span>(MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler, CacheKey key, BoundSql boundSql) &lt;span style="color:#66d9ef">throws&lt;/span> SQLException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span> list;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 向本地缓存中存入一个ExecutionPlaceholder的枚举类占位&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> localCache.&lt;span style="color:#a6e22e">putObject&lt;/span>(key, EXECUTION_PLACEHOLDER);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 执行查询&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> list &lt;span style="color:#f92672">=&lt;/span> doQuery(ms, parameter, rowBounds, resultHandler, boundSql);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">finally&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 执行玩移除这个key&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> localCache.&lt;span style="color:#a6e22e">removeObject&lt;/span>(key);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> localCache.&lt;span style="color:#a6e22e">putObject&lt;/span>(key, list);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (ms.&lt;span style="color:#a6e22e">getStatementType&lt;/span>() &lt;span style="color:#f92672">==&lt;/span> StatementType.&lt;span style="color:#a6e22e">CALLABLE&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> localOutputParameterCache.&lt;span style="color:#a6e22e">putObject&lt;/span>(key, parameter);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> list;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.executor.SimpleExecutor#doQuery&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">doQuery&lt;/span>(MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler, BoundSql boundSql) &lt;span style="color:#66d9ef">throws&lt;/span> SQLException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Statement stmt &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 获取全局配置文件实例&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Configuration configuration &lt;span style="color:#f92672">=&lt;/span> ms.&lt;span style="color:#a6e22e">getConfiguration&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// new一个statementHandler实例&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> StatementHandler handler &lt;span style="color:#f92672">=&lt;/span> configuration.&lt;span style="color:#a6e22e">newStatementHandler&lt;/span>(wrapper, ms, parameter, rowBounds, resultHandler, boundSql);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 准备处理器,主要包括创建statement以及动态参数的设置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stmt &lt;span style="color:#f92672">=&lt;/span> prepareStatement(handler, ms.&lt;span style="color:#a6e22e">getStatementLog&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 执行真正的数据库操作调用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> handler.&lt;span style="color:#a6e22e">query&lt;/span>(stmt, resultHandler);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">finally&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> closeStatement(stmt);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.session.Configuration#newStatementHandler&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> StatementHandler &lt;span style="color:#a6e22e">newStatementHandler&lt;/span>(Executor executor, MappedStatement mappedStatement, Object parameterObject, RowBounds rowBounds, ResultHandler resultHandler, BoundSql boundSql) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 创建路由功能的StatementHanlder,根据MappedStatement中的StetementType&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> StatementHandler statementHandler &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> RoutingStatementHandler(executor, mappedStatement, parameterObject, rowBounds, resultHandler, boundSql);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 插件机制:对核心对象进行拦截&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> statementHandler &lt;span style="color:#f92672">=&lt;/span> (StatementHandler) interceptorChain.&lt;span style="color:#a6e22e">pluginAll&lt;/span>(statementHandler);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> statementHandler;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.executor.statement.RoutingStatementHandler#RoutingStatementHandler&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">RoutingStatementHandler&lt;/span>(Executor executor, MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler, BoundSql boundSql) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">switch&lt;/span> (ms.&lt;span style="color:#a6e22e">getStatementType&lt;/span>()) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> STATEMENT:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> delegate &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SimpleStatementHandler(executor, ms, parameter, rowBounds, resultHandler, boundSql);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> PREPARED:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> delegate &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> PreparedStatementHandler(executor, ms, parameter, rowBounds, resultHandler, boundSql);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">case&lt;/span> CALLABLE:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> delegate &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> CallableStatementHandler(executor, ms, parameter, rowBounds, resultHandler, boundSql);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">default&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ExecutorException(&lt;span style="color:#e6db74">&amp;#34;Unknown statement type: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> ms.&lt;span style="color:#a6e22e">getStatementType&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.executor.SimpleExecutor#prepareStatement&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">private&lt;/span> Statement &lt;span style="color:#a6e22e">prepareStatement&lt;/span>(StatementHandler handler, Log statementLog){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Statement stmt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 获取代理后,增加日志功能的Connection对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Connection connection &lt;span style="color:#f92672">=&lt;/span> getConnection(statementLog);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 创建Statement对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stmt &lt;span style="color:#f92672">=&lt;/span> handler.&lt;span style="color:#a6e22e">prepare&lt;/span>(connection, transaction.&lt;span style="color:#a6e22e">getTimeout&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 参数化处理&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> handler.&lt;span style="color:#a6e22e">parameterize&lt;/span>(stmt);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> stmt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.executor.statement.PreparedStatementHandler#query&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>E&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">query&lt;/span>(Statement statement, ResultHandler resultHandler) &lt;span style="color:#66d9ef">throws&lt;/span> SQLException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PreparedStatement ps &lt;span style="color:#f92672">=&lt;/span> (PreparedStatement) statement;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ps.&lt;span style="color:#a6e22e">execute&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> resultSetHandler.&lt;span style="color:#a6e22e">handleResultSets&lt;/span>(ps);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://image.runtimes.cc/202404051430956.png" alt="image-20230816183741743">&lt;/p>
&lt;h2 id="解析结果">解析结果&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.executor.resultset.DefaultResultSetHandler#handleResultSets&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#a6e22e">handleResultSets&lt;/span>(Statement stmt) &lt;span style="color:#66d9ef">throws&lt;/span> SQLException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ErrorContext.&lt;span style="color:#a6e22e">instance&lt;/span>().&lt;span style="color:#a6e22e">activity&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;handling results&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">object&lt;/span>(mappedStatement.&lt;span style="color:#a6e22e">getId&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">final&lt;/span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>Object&lt;span style="color:#f92672">&amp;gt;&lt;/span> multipleResults &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ArrayList&lt;span style="color:#f92672">&amp;lt;&amp;gt;&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> resultSetCount &lt;span style="color:#f92672">=&lt;/span> 0;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ResultSetWrapper rsw &lt;span style="color:#f92672">=&lt;/span> getFirstResultSet(stmt);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>ResultMap&lt;span style="color:#f92672">&amp;gt;&lt;/span> resultMaps &lt;span style="color:#f92672">=&lt;/span> mappedStatement.&lt;span style="color:#a6e22e">getResultMaps&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> resultMapCount &lt;span style="color:#f92672">=&lt;/span> resultMaps.&lt;span style="color:#a6e22e">size&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> validateResultMapsCount(rsw, resultMapCount);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> (rsw &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> resultMapCount &lt;span style="color:#f92672">&amp;gt;&lt;/span> resultSetCount) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ResultMap resultMap &lt;span style="color:#f92672">=&lt;/span> resultMaps.&lt;span style="color:#a6e22e">get&lt;/span>(resultSetCount);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> handleResultSet(rsw, resultMap, multipleResults, &lt;span style="color:#66d9ef">null&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rsw &lt;span style="color:#f92672">=&lt;/span> getNextResultSet(stmt);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cleanUpAfterHandlingResultSet();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resultSetCount&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String&lt;span style="color:#f92672">[]&lt;/span> resultSets &lt;span style="color:#f92672">=&lt;/span> mappedStatement.&lt;span style="color:#a6e22e">getResultSets&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (resultSets &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> (rsw &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> resultSetCount &lt;span style="color:#f92672">&amp;lt;&lt;/span> resultSets.&lt;span style="color:#a6e22e">length&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ResultMapping parentMapping &lt;span style="color:#f92672">=&lt;/span> nextResultMaps.&lt;span style="color:#a6e22e">get&lt;/span>(resultSets&lt;span style="color:#f92672">[&lt;/span>resultSetCount&lt;span style="color:#f92672">]&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (parentMapping &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String nestedResultMapId &lt;span style="color:#f92672">=&lt;/span> parentMapping.&lt;span style="color:#a6e22e">getNestedResultMapId&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ResultMap resultMap &lt;span style="color:#f92672">=&lt;/span> configuration.&lt;span style="color:#a6e22e">getResultMap&lt;/span>(nestedResultMapId);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> handleResultSet(rsw, resultMap, &lt;span style="color:#66d9ef">null&lt;/span>, parentMapping);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rsw &lt;span style="color:#f92672">=&lt;/span> getNextResultSet(stmt);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cleanUpAfterHandlingResultSet();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resultSetCount&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> collapseSingleResultList(multipleResults);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="缓存">缓存&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.executor.CachingExecutor#createCacheKey&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// CacheKey重新了 hacode和equals方法&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> CacheKey &lt;span style="color:#a6e22e">createCacheKey&lt;/span>(MappedStatement ms, Object parameterObject, RowBounds rowBounds, BoundSql boundSql) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// delegate 是具体类型的执行器的应用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 默认是SimpleExecutor&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> delegate.&lt;span style="color:#a6e22e">createCacheKey&lt;/span>(ms, parameterObject, rowBounds, boundSql);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// org.apache.ibatis.executor.BaseExecutor#createCacheKey&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">public&lt;/span> CacheKey &lt;span style="color:#a6e22e">createCacheKey&lt;/span>(MappedStatement ms, Object parameterObject, RowBounds rowBounds, BoundSql boundSql) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (closed) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">throw&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> ExecutorException(&lt;span style="color:#e6db74">&amp;#34;Executor was closed.&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 通过构造器创建&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CacheKey cacheKey &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> CacheKey();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cacheKey.&lt;span style="color:#a6e22e">update&lt;/span>(ms.&lt;span style="color:#a6e22e">getId&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 分页参数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cacheKey.&lt;span style="color:#a6e22e">update&lt;/span>(rowBounds.&lt;span style="color:#a6e22e">getOffset&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cacheKey.&lt;span style="color:#a6e22e">update&lt;/span>(rowBounds.&lt;span style="color:#a6e22e">getLimit&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// sql&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cacheKey.&lt;span style="color:#a6e22e">update&lt;/span>(boundSql.&lt;span style="color:#a6e22e">getSql&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List&lt;span style="color:#f92672">&amp;lt;&lt;/span>ParameterMapping&lt;span style="color:#f92672">&amp;gt;&lt;/span> parameterMappings &lt;span style="color:#f92672">=&lt;/span> boundSql.&lt;span style="color:#a6e22e">getParameterMappings&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TypeHandlerRegistry typeHandlerRegistry &lt;span style="color:#f92672">=&lt;/span> ms.&lt;span style="color:#a6e22e">getConfiguration&lt;/span>().&lt;span style="color:#a6e22e">getTypeHandlerRegistry&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// mimic DefaultParameterHandler logic&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (ParameterMapping parameterMapping : parameterMappings) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (parameterMapping.&lt;span style="color:#a6e22e">getMode&lt;/span>() &lt;span style="color:#f92672">!=&lt;/span> ParameterMode.&lt;span style="color:#a6e22e">OUT&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Object value;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> String propertyName &lt;span style="color:#f92672">=&lt;/span> parameterMapping.&lt;span style="color:#a6e22e">getProperty&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (boundSql.&lt;span style="color:#a6e22e">hasAdditionalParameter&lt;/span>(propertyName)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value &lt;span style="color:#f92672">=&lt;/span> boundSql.&lt;span style="color:#a6e22e">getAdditionalParameter&lt;/span>(propertyName);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (parameterObject &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> (typeHandlerRegistry.&lt;span style="color:#a6e22e">hasTypeHandler&lt;/span>(parameterObject.&lt;span style="color:#a6e22e">getClass&lt;/span>())) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value &lt;span style="color:#f92672">=&lt;/span> parameterObject;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MetaObject metaObject &lt;span style="color:#f92672">=&lt;/span> configuration.&lt;span style="color:#a6e22e">newMetaObject&lt;/span>(parameterObject);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value &lt;span style="color:#f92672">=&lt;/span> metaObject.&lt;span style="color:#a6e22e">getValue&lt;/span>(propertyName);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 参数的值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cacheKey.&lt;span style="color:#a6e22e">update&lt;/span>(value);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (configuration.&lt;span style="color:#a6e22e">getEnvironment&lt;/span>() &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// issue #176&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 当前环境的值&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cacheKey.&lt;span style="color:#a6e22e">update&lt;/span>(configuration.&lt;span style="color:#a6e22e">getEnvironment&lt;/span>().&lt;span style="color:#a6e22e">getId&lt;/span>());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> cacheKey;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="面试题">面试题&lt;/h1></content></item></channel></rss>