<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>部署 on Hello World</title><link>https://connorzhangyu.com/tags/%E9%83%A8%E7%BD%B2/</link><description>Recent content in 部署 on Hello World</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Sat, 19 Nov 2022 18:25:00 +0000</lastBuildDate><atom:link href="https://connorzhangyu.com/tags/%E9%83%A8%E7%BD%B2/index.xml" rel="self" type="application/rss+xml"/><item><title>Jenkins</title><link>https://connorzhangyu.com/posts/jenkins/</link><pubDate>Sat, 19 Nov 2022 18:25:00 +0000</pubDate><guid>https://connorzhangyu.com/posts/jenkins/</guid><description>&lt;h1 id="root用户权限启动jenkins">Root用户权限启动Jenkins&lt;/h1>
&lt;p>适用于Ubuntu环境下通过&lt;code>apt-get install -y jenkins&lt;/code>命令在线安装的Jenkins&lt;/p>
&lt;p>1.修改配置文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>vim /etc/default/jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 将下面两个参数修改为root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 修改前&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JENKINS_USER&lt;span style="color:#f92672">=&lt;/span>$NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JENKINS_GROUP&lt;span style="color:#f92672">=&lt;/span>$NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 修改后&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JENKINS_USER&lt;span style="color:#f92672">=&lt;/span>root
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JENKINS_GROUP&lt;span style="color:#f92672">=&lt;/span>root
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>2.更改目录权限&lt;/p>
&lt;p>不知道这步有没有起作用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd /var/lib/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chown -R root:root ./jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 重启&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl restart jenkins.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="jenkins使用教程">Jenkins使用教程&lt;/h1>
&lt;h2 id="配置jdk">配置JDK&lt;/h2>
&lt;p>Manage Jenkins &amp;ndash;&amp;gt; Global Tool Configuration&lt;/p>
&lt;ol>
&lt;li>自动安装&lt;/li>
&lt;li>手动安装要注意,J&lt;code>AVA_HOME&lt;/code>的输入框下面，不要有警告或者错误信息，否则就是路径不正确,取消勾选自动安装&lt;/li>
&lt;/ol>
&lt;h2 id="配置maven">配置Maven&lt;/h2>
&lt;ol>
&lt;li>安装Maven Integration 插件&lt;/li>
&lt;li>通常自动安装maven就行了,如果手动安装,&lt;code>MAVEN_HOME&lt;/code> 输入框下面，不要有警告或者错误信息，否则就是路径不正确&lt;/li>
&lt;/ol>
&lt;h2 id="获取当前项目名称">获取当前项目名称&lt;/h2>
&lt;p>在脚本中输入 &lt;code>$JOB_NAME&lt;/code>就能获取到了&lt;/p>
&lt;h2 id="卸载jenkins">卸载jenkins&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>//服务
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get remove jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>//安装包，注意这里如果不是ubuntu那就yum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get remove --auto-remove jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>//配置和数据
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get purge jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get purge --auto-remove jenkins
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="升级jenkins">升级jenkins&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 适用于ubuntu安装的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get upgrade jenkins
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="同时构建任务的个数">同时构建任务的个数&lt;/h2>
&lt;p>系统管理&amp;ndash;&amp;gt;系统设置&amp;ndash;&amp;gt;执行者数量&lt;/p></description><content>&lt;h1 id="root用户权限启动jenkins">Root用户权限启动Jenkins&lt;/h1>
&lt;p>适用于Ubuntu环境下通过&lt;code>apt-get install -y jenkins&lt;/code>命令在线安装的Jenkins&lt;/p>
&lt;p>1.修改配置文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>vim /etc/default/jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 将下面两个参数修改为root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 修改前&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JENKINS_USER&lt;span style="color:#f92672">=&lt;/span>$NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JENKINS_GROUP&lt;span style="color:#f92672">=&lt;/span>$NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 修改后&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JENKINS_USER&lt;span style="color:#f92672">=&lt;/span>root
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JENKINS_GROUP&lt;span style="color:#f92672">=&lt;/span>root
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>2.更改目录权限&lt;/p>
&lt;p>不知道这步有没有起作用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd /var/lib/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chown -R root:root ./jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 重启&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl restart jenkins.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="jenkins使用教程">Jenkins使用教程&lt;/h1>
&lt;h2 id="配置jdk">配置JDK&lt;/h2>
&lt;p>Manage Jenkins &amp;ndash;&amp;gt; Global Tool Configuration&lt;/p>
&lt;ol>
&lt;li>自动安装&lt;/li>
&lt;li>手动安装要注意,J&lt;code>AVA_HOME&lt;/code>的输入框下面，不要有警告或者错误信息，否则就是路径不正确,取消勾选自动安装&lt;/li>
&lt;/ol>
&lt;h2 id="配置maven">配置Maven&lt;/h2>
&lt;ol>
&lt;li>安装Maven Integration 插件&lt;/li>
&lt;li>通常自动安装maven就行了,如果手动安装,&lt;code>MAVEN_HOME&lt;/code> 输入框下面，不要有警告或者错误信息，否则就是路径不正确&lt;/li>
&lt;/ol>
&lt;h2 id="获取当前项目名称">获取当前项目名称&lt;/h2>
&lt;p>在脚本中输入 &lt;code>$JOB_NAME&lt;/code>就能获取到了&lt;/p>
&lt;h2 id="卸载jenkins">卸载jenkins&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>//服务
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get remove jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>//安装包，注意这里如果不是ubuntu那就yum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get remove --auto-remove jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>//配置和数据
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get purge jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get purge --auto-remove jenkins
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="升级jenkins">升级jenkins&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 适用于ubuntu安装的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get upgrade jenkins
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="同时构建任务的个数">同时构建任务的个数&lt;/h2>
&lt;p>系统管理&amp;ndash;&amp;gt;系统设置&amp;ndash;&amp;gt;执行者数量&lt;/p>
&lt;h2 id="构建成功才继续发包">构建成功才继续发包&lt;/h2>
&lt;p>只是个不大不小的功能,很容易忽略了,在 任务的配置&amp;ndash;&amp;gt;Post Steps &amp;ndash;&amp;gt; Run only if build succeeds&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202405280938281.png" alt="image-20240528093819570">&lt;/p>
&lt;h2 id="修改时区">修改时区&lt;/h2>
&lt;p>&lt;img src="https://image.runtimes.cc/202408091744504.png" alt="image-20240809174451156">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202408091746778.png" alt="image-20240809174606994">&lt;/p>
&lt;h2 id="webhook">WebHook&lt;/h2>
&lt;p>使用的场景,Github Push代码之后,自动构建&lt;/p>
&lt;p>第一步.jenkins的配置&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202408091740783.png" alt="image-20240809174000506">&lt;/p>
&lt;p>第二步.Github的配置&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202408091741395.png" alt="image-20240809174111087">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202408091742218.png" alt="image-20240809174235801">&lt;/p>
&lt;p>第三步.返回jenkins设置&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202408091743820.png" alt="image-20240809174324197">&lt;/p>
&lt;p>第四步.push代码,查看有没有正常构建&lt;/p>
&lt;h1 id="jenkinsdocker部署maven聚合工程">Jenkins+Docker部署Maven聚合工程&lt;/h1>
&lt;p>安装Jenkins&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>docker run &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -v /var/run/docker.sock:/var/run/docker.sock &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -v &lt;span style="color:#66d9ef">$(&lt;/span>which docker&lt;span style="color:#66d9ef">)&lt;/span>:/usr/bin/docker &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -v /root/jenkins:/var/jenkins_home &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --name jenkins &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --user&lt;span style="color:#f92672">=&lt;/span>root &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -p 8080:8080 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -p 50000:50000 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -d &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -u &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> jenkins/jenkins:jdk11
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>第2行是将宿主机的/var/run/docker.sock映射到容器中，这样在容器中运行的docker命令，就会在宿主机上来执行。&lt;/li>
&lt;li>第3行是将宿主机的docker程序映射进容器中，这样本身没有安装docker的jenkins容器就可以执行docker命令了（事实上容器里是没有运行docker的服务的，我们只是用这个映射进容器的docker来作为客户端发送docker的指令到/var/run/docker.sock而已，而/var/run/docker.sock已经被链接到宿主机了)&lt;/li>
&lt;/ul>
&lt;p>Dockerfile&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">FROM&lt;/span>&lt;span style="color:#e6db74"> openjdk:8-jdk-alpine&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">VOLUME&lt;/span>&lt;span style="color:#e6db74"> /tmp&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">ADD&lt;/span> admin-server-0.0.1-SNAPSHOT.jar app.jar&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">ENTRYPOINT&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;java&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;-Djava.security.egd=file:/dev/./urandom&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;-jar&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;/app.jar&amp;#34;&lt;/span>]&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Maven的pom.xml配置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>com.spotify&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>docker-maven-plugin&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>0.4.13&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;imageName&amp;gt;&lt;/span>springboot/${project.artifactId}&lt;span style="color:#f92672">&amp;lt;/imageName&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dockerDirectory&amp;gt;&lt;/span>src/main/docker&lt;span style="color:#f92672">&amp;lt;/dockerDirectory&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;resources&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;resource&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;targetPath&amp;gt;&lt;/span>/&lt;span style="color:#f92672">&amp;lt;/targetPath&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;directory&amp;gt;&lt;/span>${project.build.directory}&lt;span style="color:#f92672">&amp;lt;/directory&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;include&amp;gt;&lt;/span>${project.build.finalName}.jar&lt;span style="color:#f92672">&amp;lt;/include&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/resource&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/resources&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>imageName&lt;/code>打的镜像名称,这里的镜像名称是:springboot/admin-server&lt;/li>
&lt;li>&lt;code>dockerDirectory&lt;/code>指定docker文件夹的位置&lt;/li>
&lt;/ul>
&lt;p>Job配置&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051423837.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051424832.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051424206.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051424089.png" alt="">&lt;/p>
&lt;p>• &lt;code>-e “SPRING_PROFILES_ACTIVE=prerelease”&lt;/code> ,可以看成是启动jar的时候的,java -jar admin-server.jar –spring.profiles.active=prerelease ,指定运行环境&lt;/p>
&lt;h1 id="脚本">脚本&lt;/h1>
&lt;h2 id="检测容器的运行">检测容器的运行&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># &amp;#34;=&amp;#34; 两边不能有空格&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>count&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>docker ps -a | grep sabong-admin-controlfront |awk &lt;span style="color:#e6db74">&amp;#39;{print $1}&amp;#39;&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> -n &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$count&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> docker stop $count
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> docker rm $count
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;停止并删除容器&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker run &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -itd &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -p 9011:9011 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -e “SPRING_PROFILES_ACTIVE&lt;span style="color:#f92672">=&lt;/span>prerelease” &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --name admin-server &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> springboot/admin-server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="推送镜像到harbor">推送镜像到harbor&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 打标签&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># sabong/sabong-controller-manager:latest 已经build成功了的镜像名字&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 10.0.0.7/library/sabong/sabong-controller-manager:latest 新的镜像名字&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker tag sabong/sabong-controller-manager:latest 10.0.0.7/library/sabong/sabong-controller-manager:latest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 登录私有仓库&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker login -u admin -p &lt;span style="color:#ae81ff">123456&lt;/span> 10.0.0.7
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 推送镜像&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker push 10.0.0.7/library/sabong/sabong-controller-manager:latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="vue打包成镜像">Vue打包成镜像&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm install
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm run build:prod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># build&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># sabong/sabong-admin-controlfront 随便起的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker build -t sabong/sabong-admin-controlfront --no-cache .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 打标签&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker tag sabong/sabong-admin-controlfront:latest 10.0.0.7/library/sabong/sabong-admin-controlfront:latest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 登录私有仓库&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker login -u admin -p &lt;span style="color:#ae81ff">123456&lt;/span> 10.0.0.7
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 推送镜像&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker push 10.0.0.7/library/sabong/sabong-admin-controlfront:latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Dockerfile&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-docker" data-lang="docker">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">From&lt;/span>&lt;span style="color:#e6db74"> nginx&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">COPY&lt;/span> dist/ /usr/share/nginx/html/&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>⛔ 这里用的是nginx容器里默认的nginx配置文件,所以这里没有使用自定义的nginx配置&lt;/p>
&lt;h2 id="springboot项目脚本">SpringBoot项目脚本&lt;/h2>
&lt;p>适用于ssh传输文件,启动脚本&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 具体不知道是干啥的,加上这个,这个看情况加&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># BUILD_ID=DONTKILLME&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>APP_NAME&lt;span style="color:#f92672">=&lt;/span>xxx.jar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 杀进程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pid&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>ps -ef|grep $APP_NAME|grep -v grep|awk &lt;span style="color:#e6db74">&amp;#39;{print $2}&amp;#39;&lt;/span> &lt;span style="color:#e6db74">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> -n &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kill -9 $pid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#39;准备启动jar包&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nohup java -jar /root/$APP_NAME --spring.profiles.active&lt;span style="color:#f92672">=&lt;/span>prod &amp;amp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sleep &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#39;启动成功&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="maven多模块打包">Maven多模块打包&lt;/h1>
&lt;p>指定打包项目名&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>clean package -pl 模块名 -am
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>配置SSH server&lt;/p>
&lt;p>在系统管理&amp;ndash;&amp;gt;System&amp;mdash;&amp;gt;SSH Server配置&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051424215.png" alt="image-20240319175903145">&lt;/p>
&lt;p>配置SSH Over FTP publish&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051424247.png" alt="image-20240319184601103">&lt;/p>
&lt;p>这里&lt;code>Verbose output in console&lt;/code>的作用是把远程的步骤,和远程的shell执行的结果也打印出来&lt;/p>
&lt;p>这里&lt;code>Exec in pty&lt;/code> 要勾选,不然项目启动完成了,也不会停止SSH链接&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051424187.png" alt="image-20240319175519104">&lt;/p>
&lt;h1 id="前端打包">前端打包&lt;/h1>
&lt;p>选择已经配置的node版本&lt;/p>
&lt;p>&lt;strong>构建环境&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051424037.png" alt="image-20240319183930032">&lt;/p>
&lt;p>&lt;strong>Build Steps&lt;/strong>&lt;/p>
&lt;p>选择执行shell&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>npm install
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm run build:prod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pwd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 删除上一次构建打的包,然后dist文件夹打包成dist.zip文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm -f dist.zip &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> zip -r dist.zip dist
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://image.runtimes.cc/202404051424098.png" alt="image-20240319184412134">&lt;/p>
&lt;h1 id="各种问题报错">各种问题报错&lt;/h1>
&lt;p>1.HTTP ERROR 403 No valid crumb was included in the request&lt;/p>
&lt;p>解决办法:网上都是要去关闭CSRF，很明确的是我这里的全局安全配置里面根本就没有选项，我的版本是&lt;code>jenkins 2.293&lt;/code>。所以百度出来的都是一堆垃圾，无奈自己解决，尝试一番之后，找到了方法，如&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051425841.png" alt="image-20231201155420918">&lt;/p>
&lt;p>下图所示：还是在全局安全配置里面，勾选上这个参数即可。&lt;/p>
&lt;hr>
&lt;p>2.Jenkins配置中安装插件时提示&lt;code>No such plugin: cloudbees-folder&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo systemctl start jenkins
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>2.Jenkins和Github personal access token&lt;/p>
&lt;ul>
&lt;li>登录到您的 Jenkins 服务器。&lt;/li>
&lt;li>选择“Jenkins”&amp;gt;“Manage Jenkins”&amp;gt;“Configure System”。&lt;/li>
&lt;li>滚动到“GitHub”部分。&lt;/li>
&lt;li>点击“Add GitHub Server”按钮。&lt;/li>
&lt;li>在“API URL”字段中输入您的 Github API URL（例如 &lt;a href="https://link.juejin.cn/?target=https%3A%2F%2Fapi.github.com%EF%BC%89%E3%80%82">api.github.com）。&lt;/a>&lt;/li>
&lt;li>在“Credentials”字段中选择“Add”。&lt;/li>
&lt;li>选择“Kind”为“Username with password”。&lt;/li>
&lt;li>在“Username”字段中输入您的 Github 用户名。&lt;/li>
&lt;li>在“Password”字段中输入您的 Github 个人访问令牌。&lt;/li>
&lt;li>点击“Verify credentials”按钮以验证凭据是否有效。&lt;/li>
&lt;li>如果验证成功，请点击“Save”按钮保存更改。&lt;/li>
&lt;/ul>
&lt;p>3.jenkins映射docker&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 如果docker run jenkins 没有指定&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 这里就不能打包,就是因为在jenkins里的容器中,没有安装对象,使用了-v &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 就是把jenkins里所需要的docker映射到宿主docker中&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-v /var/run/docker.sock:/var/run/docker.sock &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-v &lt;span style="color:#66d9ef">$(&lt;/span>which docker&lt;span style="color:#66d9ef">)&lt;/span>:/usr/bin/docker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>4.安装插件没有成功&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051425983.png" alt="">
需要到插件中心,在可更新和可选插件里,一个一个手动去搜索安装,如果还有问题,就需要更新jenkins&lt;/p>
&lt;p>5.&lt;code>npm install&lt;/code>需要权限&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>Unable to save binary /var/lib/jenkins/workspace/mymanager-/node_modules/node-sass/vendor/linux-x64-83 : Error: EACCES: permission denied, mkdir &lt;span style="color:#e6db74">&amp;#39;/var/lib/jenkins/workspace/lottery-web-24kai-ausk3/node_modules/node-sass/vendor&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="修改端口">修改端口&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 第一步&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo vim /etc/init.d/jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 8088改成想要的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>check_tcp_port &lt;span style="color:#e6db74">&amp;#34;http&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$HTTP_PORT&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;8088&amp;#34;&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 第二步&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo vim /etc/default/jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 8088改成想要的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HTTP_PORT&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">8088&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 第三步&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim /lib/systemd/system/jenkins.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Environment&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;JENKINS_PORT=80&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 执行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl start jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl status jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 这个时候就启动报错,然后接着修改&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim /lib/systemd/system/jenkins.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 本来是jenkins的,改成root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User&lt;span style="color:#f92672">=&lt;/span>root
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Group&lt;span style="color:#f92672">=&lt;/span>root
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 执行,就可以了,不知道为啥&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl start jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl status jenkins
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="jenkins使用root账号登录">jenkins使用root账号登录&lt;/h1>
&lt;p>&lt;a href="https://www.baimeidashu.com/13094.html">设置1&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.cnblogs.com/fieldtianye/p/17852160.html">设置2&lt;/a>&lt;/p>
&lt;h1 id="权限管理">权限管理&lt;/h1>
&lt;p>1.安装插件,&lt;code>Role-based Authorization Strategy&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202408081650831.png" alt="image-20240808165032732">&lt;/p>
&lt;p>2.点击 管理系统&amp;ndash;&amp;gt;安全段落下的&amp;ndash;&amp;gt;全局安全配置,选中&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202408081652851.png" alt="image-20240808165220186">&lt;/p>
&lt;p>3.管理系统&amp;ndash;&amp;gt;安全段落下的 就会多一个功能&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202408081653465.png" alt="image-20240808165321957">&lt;/p></content></item></channel></rss>