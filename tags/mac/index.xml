<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mac on Hello World</title><link>https://connorzhangyu.com/tags/mac/</link><description>Recent content in Mac on Hello World</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Thu, 29 May 2025 10:23:17 +0000</lastBuildDate><atom:link href="https://connorzhangyu.com/tags/mac/index.xml" rel="self" type="application/rss+xml"/><item><title>Dapp</title><link>https://connorzhangyu.com/posts/dapp/</link><pubDate>Thu, 29 May 2025 10:23:17 +0000</pubDate><guid>https://connorzhangyu.com/posts/dapp/</guid><description>&lt;h1 id="helloworld合约">HelloWorld合约&lt;/h1>
&lt;p>&lt;a href="https://remix.ethereum.org">Remix编辑器&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202505281038720.png" alt="image-20250524144934373">&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-solidity" data-lang="solidity">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// SPDX-License-Identifier: MIT
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">pragma solidity&lt;/span> &lt;span style="color:#f92672">^&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">8&lt;/span>.&lt;span style="color:#ae81ff">13&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">contract&lt;/span> &lt;span style="color:#a6e22e">helloworld&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">helloWorld&lt;/span>() &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">pure&lt;/span> &lt;span style="color:#66d9ef">returns&lt;/span> (&lt;span style="color:#66d9ef">string&lt;/span> &lt;span style="color:#66d9ef">memory&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Hello, World!&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://image.runtimes.cc/202505281038400.png" alt="image-20250524145024856">&lt;/p>
&lt;h1 id="发行代币">发行代币&lt;/h1>
&lt;p>在闲鱼,淘宝上买些测试币,也可以通过水龙头获取(只是有点要求和门槛,不如直接买),这里我买了两笔
&lt;img src="https://image.runtimes.cc/202505281036642.webp" alt="">&lt;/p>
&lt;p>新建合约文件&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202505291022584.png" alt="image-20250529101100930">&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-solidity" data-lang="solidity">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// SPDX-License-Identifier: MIT
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">pragma solidity&lt;/span> &lt;span style="color:#f92672">^&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">8&lt;/span>.&lt;span style="color:#ae81ff">13&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;@openzeppelin/contracts/token/ERC20/ERC20.sol&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">contract&lt;/span> &lt;span style="color:#a6e22e">MyError20Token&lt;/span> &lt;span style="color:#66d9ef">is&lt;/span> ERC20{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">constructor&lt;/span>(&lt;span style="color:#66d9ef">string&lt;/span> &lt;span style="color:#66d9ef">memory&lt;/span> _name,&lt;span style="color:#66d9ef">string&lt;/span> &lt;span style="color:#66d9ef">memory&lt;/span> _symbol) ERC20(_name,_symbol){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _mint(msg.sender,&lt;span style="color:#ae81ff">10000&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#f92672">**&lt;/span> &lt;span style="color:#ae81ff">18&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://image.runtimes.cc/202505291022541.png" alt="image-20250529101412816">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202505291022024.png" alt="image-20250529101510973">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202505291022071.png" alt="image-20250529101815851">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202505291022160.png" alt="image-20250529102052827">&lt;/p></description><content>&lt;h1 id="helloworld合约">HelloWorld合约&lt;/h1>
&lt;p>&lt;a href="https://remix.ethereum.org">Remix编辑器&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202505281038720.png" alt="image-20250524144934373">&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-solidity" data-lang="solidity">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// SPDX-License-Identifier: MIT
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">pragma solidity&lt;/span> &lt;span style="color:#f92672">^&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">8&lt;/span>.&lt;span style="color:#ae81ff">13&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">contract&lt;/span> &lt;span style="color:#a6e22e">helloworld&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">helloWorld&lt;/span>() &lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">pure&lt;/span> &lt;span style="color:#66d9ef">returns&lt;/span> (&lt;span style="color:#66d9ef">string&lt;/span> &lt;span style="color:#66d9ef">memory&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Hello, World!&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://image.runtimes.cc/202505281038400.png" alt="image-20250524145024856">&lt;/p>
&lt;h1 id="发行代币">发行代币&lt;/h1>
&lt;p>在闲鱼,淘宝上买些测试币,也可以通过水龙头获取(只是有点要求和门槛,不如直接买),这里我买了两笔
&lt;img src="https://image.runtimes.cc/202505281036642.webp" alt="">&lt;/p>
&lt;p>新建合约文件&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202505291022584.png" alt="image-20250529101100930">&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-solidity" data-lang="solidity">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// SPDX-License-Identifier: MIT
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">pragma solidity&lt;/span> &lt;span style="color:#f92672">^&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">8&lt;/span>.&lt;span style="color:#ae81ff">13&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;@openzeppelin/contracts/token/ERC20/ERC20.sol&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">contract&lt;/span> &lt;span style="color:#a6e22e">MyError20Token&lt;/span> &lt;span style="color:#66d9ef">is&lt;/span> ERC20{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">constructor&lt;/span>(&lt;span style="color:#66d9ef">string&lt;/span> &lt;span style="color:#66d9ef">memory&lt;/span> _name,&lt;span style="color:#66d9ef">string&lt;/span> &lt;span style="color:#66d9ef">memory&lt;/span> _symbol) ERC20(_name,_symbol){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _mint(msg.sender,&lt;span style="color:#ae81ff">10000&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#f92672">**&lt;/span> &lt;span style="color:#ae81ff">18&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://image.runtimes.cc/202505291022541.png" alt="image-20250529101412816">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202505291022024.png" alt="image-20250529101510973">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202505291022071.png" alt="image-20250529101815851">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202505291022160.png" alt="image-20250529102052827">&lt;/p></content></item><item><title>DataGrip</title><link>https://connorzhangyu.com/posts/datagrip/</link><pubDate>Sat, 19 Nov 2022 18:25:00 +0000</pubDate><guid>https://connorzhangyu.com/posts/datagrip/</guid><description>&lt;h1 id="查看ddl和复制为insert语句">查看ddl和复制为insert语句&lt;/h1>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051411320.png" alt="">&lt;/p>
&lt;h1 id="显示">显示&lt;/h1>
&lt;h2 id="设置数据库颜色">设置数据库颜色&lt;/h2>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051411473.png" alt="image-20230723151325737">&lt;/p>
&lt;h2 id="显示树状结构">显示树状结构&lt;/h2>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051412133.png" alt="image-20230726133150472">&lt;/p>
&lt;h2 id="显示表的commnet">显示表的commnet&lt;/h2>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051412038.png" alt="image-20230726133353607">&lt;/p>
&lt;h2 id="显示数据库ddl最后一次更新的时间">显示数据库DDL最后一次更新的时间&lt;/h2>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051412291.png" alt="image-20230726133451693">&lt;/p>
&lt;h1 id="同步比较两个表的数据结构">同步/比较两个表的数据结构&lt;/h1>
&lt;p>用command 选中 两个想要比较的表,然后在其中一个表,选择&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051412792.png" alt="image-20230723151708711">&lt;/p>
&lt;p>只显示不一样的字段
&lt;img src="https://image.runtimes.cc/202404051412925.png" alt="image-20230723151821734">&lt;/p>
&lt;p>显示全部字段,绿色表示不一样&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051412733.png" alt="image-20230723151913910">&lt;/p>
&lt;p>也可以比较两个库,还是刚才的方法,选中两个库,再比较&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051412216.png" alt="image-20230723153819424">&lt;/p>
&lt;p>相当于Navicat的这个功能&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051413066.png" alt="image-20230723153427586">&lt;/p>
&lt;h1 id="复制功能">复制功能&lt;/h1>
&lt;p>标记1,选中表,&lt;code>Command + c&lt;/code> 就是复制的表名&lt;/p>
&lt;p>标记2,选中库,&lt;code>Command + c&lt;/code> 就是复制的库名&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051414322.png" alt="image-20230726133739963">&lt;/p>
&lt;p>右边的选项,让你复制出的SQL格式是什么样的,比如复制出insert的sql,或者update的sql,或者导出xml 或者,多条记录复制出一条sql语句,简单使用可以尝试&lt;/p>
&lt;p>build-in:&lt;/p>
&lt;ul>
&lt;li>sql inserts&lt;/li>
&lt;li>sql updates&lt;/li>
&lt;/ul>
&lt;p>scripted:&lt;/p>
&lt;ul>
&lt;li>sql-insert-multirow&lt;/li>
&lt;li>Sql-insert-statements&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051414566.png" alt="image-20230726133946342">&lt;/p>
&lt;h1 id="导出的功能">导出的功能&lt;/h1>
&lt;p>使用mysqldump,导出整个库&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051414556.png" alt="image-20230726134405227">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051414094.png" alt="image-20230726134504395">&lt;/p>
&lt;p>Mac电脑需要安装,&lt;code>mysql-client&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>brew install mysql-client
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 二进制目录(需要手动复制到上图的路径):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/opt/homebrew/opt/mysql-client/bin/mysqldump
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="导入sql">导入SQL&lt;/h1>
&lt;p>要在库名上点右键&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051414735.png" alt="image-20231201154603739">&lt;/p>
&lt;p>这个功能类似于&lt;/p>
&lt;img src="https://image.runtimes.cc/202404051414049.png" alt="image-20231201154745846" style="zoom:50%;" /></description><content>&lt;h1 id="查看ddl和复制为insert语句">查看ddl和复制为insert语句&lt;/h1>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051411320.png" alt="">&lt;/p>
&lt;h1 id="显示">显示&lt;/h1>
&lt;h2 id="设置数据库颜色">设置数据库颜色&lt;/h2>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051411473.png" alt="image-20230723151325737">&lt;/p>
&lt;h2 id="显示树状结构">显示树状结构&lt;/h2>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051412133.png" alt="image-20230726133150472">&lt;/p>
&lt;h2 id="显示表的commnet">显示表的commnet&lt;/h2>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051412038.png" alt="image-20230726133353607">&lt;/p>
&lt;h2 id="显示数据库ddl最后一次更新的时间">显示数据库DDL最后一次更新的时间&lt;/h2>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051412291.png" alt="image-20230726133451693">&lt;/p>
&lt;h1 id="同步比较两个表的数据结构">同步/比较两个表的数据结构&lt;/h1>
&lt;p>用command 选中 两个想要比较的表,然后在其中一个表,选择&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051412792.png" alt="image-20230723151708711">&lt;/p>
&lt;p>只显示不一样的字段
&lt;img src="https://image.runtimes.cc/202404051412925.png" alt="image-20230723151821734">&lt;/p>
&lt;p>显示全部字段,绿色表示不一样&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051412733.png" alt="image-20230723151913910">&lt;/p>
&lt;p>也可以比较两个库,还是刚才的方法,选中两个库,再比较&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051412216.png" alt="image-20230723153819424">&lt;/p>
&lt;p>相当于Navicat的这个功能&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051413066.png" alt="image-20230723153427586">&lt;/p>
&lt;h1 id="复制功能">复制功能&lt;/h1>
&lt;p>标记1,选中表,&lt;code>Command + c&lt;/code> 就是复制的表名&lt;/p>
&lt;p>标记2,选中库,&lt;code>Command + c&lt;/code> 就是复制的库名&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051414322.png" alt="image-20230726133739963">&lt;/p>
&lt;p>右边的选项,让你复制出的SQL格式是什么样的,比如复制出insert的sql,或者update的sql,或者导出xml 或者,多条记录复制出一条sql语句,简单使用可以尝试&lt;/p>
&lt;p>build-in:&lt;/p>
&lt;ul>
&lt;li>sql inserts&lt;/li>
&lt;li>sql updates&lt;/li>
&lt;/ul>
&lt;p>scripted:&lt;/p>
&lt;ul>
&lt;li>sql-insert-multirow&lt;/li>
&lt;li>Sql-insert-statements&lt;/li>
&lt;li>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051414566.png" alt="image-20230726133946342">&lt;/p>
&lt;h1 id="导出的功能">导出的功能&lt;/h1>
&lt;p>使用mysqldump,导出整个库&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051414556.png" alt="image-20230726134405227">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051414094.png" alt="image-20230726134504395">&lt;/p>
&lt;p>Mac电脑需要安装,&lt;code>mysql-client&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>brew install mysql-client
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 二进制目录(需要手动复制到上图的路径):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/opt/homebrew/opt/mysql-client/bin/mysqldump
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="导入sql">导入SQL&lt;/h1>
&lt;p>要在库名上点右键&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051414735.png" alt="image-20231201154603739">&lt;/p>
&lt;p>这个功能类似于&lt;/p>
&lt;img src="https://image.runtimes.cc/202404051414049.png" alt="image-20231201154745846" style="zoom:50%;" /></content></item><item><title>ElasticSearch</title><link>https://connorzhangyu.com/posts/elasticsearch/</link><pubDate>Sat, 19 Nov 2022 18:25:00 +0000</pubDate><guid>https://connorzhangyu.com/posts/elasticsearch/</guid><description>&lt;h1 id="手动安装7x">手动安装7.x&lt;/h1>
&lt;h2 id="手动安装单机elasticsearch7x">手动安装单机ElasticSearch7.x&lt;/h2>
&lt;pre tabindex="0">&lt;code># 下载tar包,(6.6.2)
wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.6.2.tar.gz
# 解压缩之后修改配置文件
vi /elasticsearch-7.10.1/config/elasticsearch.yml
network.host: 0.0.0.0 #设置成外网也可以访问
# 追加内容,修改系统环境该变量,修改完需要重启才能生效
vi /etc/sysctl.conf
vm.max_map_count=262144
# 加载参数
anthony@base:/usr/local/elasticsearch-6.6.2$ sudo sysctl -p
vm.max_map_count = 262144
# 允许打开的最大文件描述,加入
vim /etc/security/limits.conf
* soft nofile 65536
* hard nofile 65536
* soft nproc 4096 或者(65536)
* hard nproc 4096 或者(65536)
# 修改JVM分配大小 这两个值要一致
vi config/jvm.options
-Xms4g
-Xmx4g
# 启动
bin/elasticsearch
bin/elasticsearch -d #后台启动
&lt;/code>&lt;/pre>&lt;ol>
&lt;li>安装分词器下载解压缩的哦elasticsearch的plugin目录下IK分词器&lt;a href="https://github.com/medcl/elasticsearch-analysis-ik/releases/tag/v6.6.2">https://github.com/medcl/elasticsearch-analysis-ik/releases/tag/v6.6.2&lt;/a>&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>POST /_analyze { &amp;#34;analyzer&amp;#34;: &amp;#34;ik_smart&amp;#34;, &amp;#34;text&amp;#34;: &amp;#34; 程序员 }
&lt;/code>&lt;/pre>&lt;p>拼音分词器&lt;a href="https://github.com/medcl/elasticsearch-analysis-pinyin/releases/tag/v6.6.2">https://github.com/medcl/elasticsearch-analysis-pinyin/releases/tag/v6.6.2&lt;/a>&lt;/p></description><content>&lt;h1 id="手动安装7x">手动安装7.x&lt;/h1>
&lt;h2 id="手动安装单机elasticsearch7x">手动安装单机ElasticSearch7.x&lt;/h2>
&lt;pre tabindex="0">&lt;code># 下载tar包,(6.6.2)
wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.6.2.tar.gz
# 解压缩之后修改配置文件
vi /elasticsearch-7.10.1/config/elasticsearch.yml
network.host: 0.0.0.0 #设置成外网也可以访问
# 追加内容,修改系统环境该变量,修改完需要重启才能生效
vi /etc/sysctl.conf
vm.max_map_count=262144
# 加载参数
anthony@base:/usr/local/elasticsearch-6.6.2$ sudo sysctl -p
vm.max_map_count = 262144
# 允许打开的最大文件描述,加入
vim /etc/security/limits.conf
* soft nofile 65536
* hard nofile 65536
* soft nproc 4096 或者(65536)
* hard nproc 4096 或者(65536)
# 修改JVM分配大小 这两个值要一致
vi config/jvm.options
-Xms4g
-Xmx4g
# 启动
bin/elasticsearch
bin/elasticsearch -d #后台启动
&lt;/code>&lt;/pre>&lt;ol>
&lt;li>安装分词器下载解压缩的哦elasticsearch的plugin目录下IK分词器&lt;a href="https://github.com/medcl/elasticsearch-analysis-ik/releases/tag/v6.6.2">https://github.com/medcl/elasticsearch-analysis-ik/releases/tag/v6.6.2&lt;/a>&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>POST /_analyze { &amp;#34;analyzer&amp;#34;: &amp;#34;ik_smart&amp;#34;, &amp;#34;text&amp;#34;: &amp;#34; 程序员 }
&lt;/code>&lt;/pre>&lt;p>拼音分词器&lt;a href="https://github.com/medcl/elasticsearch-analysis-pinyin/releases/tag/v6.6.2">https://github.com/medcl/elasticsearch-analysis-pinyin/releases/tag/v6.6.2&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>GET /medcl/_analyze
{
&amp;#34;text&amp;#34;: [&amp;#34;程序员&amp;#34;],
&amp;#34;analyzer&amp;#34;: &amp;#34;pinyin_analyzer&amp;#34;
}
&lt;/code>&lt;/pre>&lt;p>报错原因:&lt;/p>
&lt;pre tabindex="0">&lt;code># chown -R 用户名:用户名 目录名
Exception in thread &amp;#34;main&amp;#34; java.nio.file.AccessDeniedException: /root/home/searchengine/elasticsearch-6.2.4/config/jvm.options
at sun.nio.fs.UnixException.translateToIOException(UnixException.java:84)
at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102)
at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)
at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214)
at java.nio.file.Files.newByteChannel(Files.java:361)
at java.nio.file.Files.newByteChannel(Files.java:407)
at java.nio.file.spi.FileSystemProvider.newInputStream(FileSystemProvider.java:384)
at java.nio.file.Files.newInputStream(Files.java:152)
at org.elasticsearch.tools.launchers.JvmOptionsParser.main(JvmOptionsParser.java:58)
&lt;/code>&lt;/pre>&lt;h2 id="手动安装集群elasticsearch7x">手动安装集群ElasticSearch7.x&lt;/h2>
&lt;p>1.修改一台elasticsearch的elasticsearch.yml&lt;/p>
&lt;pre tabindex="0">&lt;code>cluster.name: kkb-es
node.name: node0
node.master: true
network.host: 0.0.0.0
http.port: 9200
transport.tcp.port: 9300
discovery.zen.ping.unicast.hosts: [&amp;#34;127.0.0.1:9300&amp;#34;,&amp;#34;127.0.0.1:9301&amp;#34;,&amp;#34;127.0.0
.1:9302&amp;#34;]
discovery.zen.minimum_master_nodes: 2
http.cors.enabled: true
http.cors.allow-origin: &amp;#34;*&amp;#34;
&lt;/code>&lt;/pre>&lt;p>2.拷贝到其他的服务器&lt;/p>
&lt;p>修改上面呢的配置文件中的3个配置&lt;/p>
&lt;pre tabindex="0">&lt;code>node.name: node0
http.port: 9200
transport.tcp.port: 9300
&lt;/code>&lt;/pre>&lt;p>3.检查健康状态&lt;/p>
&lt;pre tabindex="0">&lt;code>http://localhost:9200/_cat/health?v
&lt;/code>&lt;/pre>&lt;h2 id="手动单机kibana7x安装">手动单机Kibana7.x安装&lt;/h2>
&lt;pre tabindex="0">&lt;code># 下载解压
https://artifacts.elastic.co/downloads/kibana/kibana-6.6.2-linux-x86_64.tar.gz
# 修改配置文件
vi kibana-6.4.2-linux-x86_64/config/kibana.yml
server.port: 5600
server.host: &amp;#34;0.0.0.0&amp;#34;
elasticsearch.url: &amp;#34;http://localhost:9200&amp;#34;
# 启动,后台启动
./bin/kibana &amp;amp;
&lt;/code>&lt;/pre>&lt;h2 id="手动单机logstash7x安装">手动单机Logstash7.x安装&lt;/h2>
&lt;p>&lt;code>mysql-connector-java-5.1.48.jar&lt;/code>是放在&lt;code>logstash-6.6.2/logstash-core/lib/jars&lt;/code>,这样就不需要写相对路径了&lt;/p>
&lt;pre tabindex="0">&lt;code>input {
jdbc {
jdbc_driver_library =&amp;gt; &amp;#34;mysql-connector-java-5.1.48.jar&amp;#34;
jdbc_driver_class =&amp;gt; &amp;#34;com.mysql.jdbc.Driver&amp;#34;
jdbc_connection_string =&amp;gt; &amp;#34;jdbc:mysql://192.168.111.128:3306/ssm&amp;#34;
jdbc_user =&amp;gt; &amp;#34;root&amp;#34;
jdbc_password =&amp;gt; &amp;#34;123456&amp;#34;
jdbc_paging_enabled =&amp;gt; &amp;#34;true&amp;#34;
jdbc_page_size =&amp;gt; &amp;#34;2&amp;#34;
statement =&amp;gt; &amp;#34;SELECT id,&amp;#39;name&amp;#39;,phone FROM phone where update_data &amp;gt;= :sql_last_value&amp;#34;
tracking_column_type =&amp;gt; &amp;#34;timestamp&amp;#34;
tracking_column =&amp;gt; &amp;#34;update_date&amp;#34;
schedule =&amp;gt; &amp;#34;* * * * *&amp;#34;
}
}
output {
elasticsearch {
index =&amp;gt; &amp;#34;phone&amp;#34;
document_id=&amp;gt; &amp;#34;%{id}&amp;#34;
hosts =&amp;gt; [&amp;#34;http://192.168.111.128:9200&amp;#34;]
}
}
&lt;/code>&lt;/pre>&lt;p>启动命令&lt;/p>
&lt;pre tabindex="0">&lt;code>./logstash -f ../config/logstash-sample.conf
&lt;/code>&lt;/pre>&lt;h1 id="手动安装8x">手动安装8.x&lt;/h1>
&lt;aside>
📌 8.0 已经自带了jdk
&lt;/aside>
&lt;h2 id="二进制包安装es">二进制包安装ES&lt;/h2>
&lt;h3 id="安装">安装&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 下载包并解压&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wget https://xxxx.tar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 启动./elasticsearch&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./bin/elasticsearch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="运行结果">运行结果&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>✅ Elasticsearch security features have been automatically configured!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>✅ Authentication is enabled and cluster connections are encrypted.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ℹ️ Password &lt;span style="color:#66d9ef">for&lt;/span> the elastic user &lt;span style="color:#f92672">(&lt;/span>reset with &lt;span style="color:#e6db74">`&lt;/span>bin/elasticsearch-reset-password -u elastic&lt;span style="color:#e6db74">`&lt;/span>&lt;span style="color:#f92672">)&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Shb2+OuCKthxFTxD-*jE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ℹ️ HTTP CA certificate SHA-256 fingerprint:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ceb6add33653a4c8f3493bddde839cdfcf1035a3a50cb01247962495f15ea40f
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ℹ️ Configure Kibana to use this cluster:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>• Run Kibana and click the configuration link in the terminal when Kibana starts.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>• Copy the following enrollment token and paste it into Kibana in your browser &lt;span style="color:#f92672">(&lt;/span>valid &lt;span style="color:#66d9ef">for&lt;/span> the next &lt;span style="color:#ae81ff">30&lt;/span> minutes&lt;span style="color:#f92672">)&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> eyJ2ZXIiOiI4LjAuMCIsImFkciI6WyIxMC4wLjIuNDo5MjAwIl0sImZnciI6ImNlYjZhZGQzMzY1M2E0YzhmMzQ5M2JkZGRlODM5Y2RmY2YxMDM1YTNhNTBjYjAxMjQ3OTYyNDk1ZjE1ZWE0MGYiLCJrZXkiOiJXaEV4SDM4QlZXV242cU9KejgxNTprUVliUEY0dlJfaU56MnRFaDlRY0hnIn0&lt;span style="color:#f92672">=&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ℹ️ Configure other nodes to join this cluster:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>• On this node:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ⁃ Create an enrollment token with &lt;span style="color:#e6db74">`&lt;/span>bin/elasticsearch-create-enrollment-token -s node&lt;span style="color:#e6db74">`&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ⁃ Uncomment the transport.host setting at the end of config/elasticsearch.yml.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ⁃ Restart Elasticsearch.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>• On other nodes:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ⁃ Start Elasticsearch with &lt;span style="color:#e6db74">`&lt;/span>bin/elasticsearch --enrollment-token &amp;lt;token&amp;gt;&lt;span style="color:#e6db74">`&lt;/span>, using the enrollment token that you generated.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="停止服务修改配置文件">停止服务,修改配置文件&lt;/h3>
&lt;p>然后输入：curl 127.0.0.1:9200,返回是：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>hy@localhost ~&lt;span style="color:#f92672">]&lt;/span>$ curl 127.0.0.1:9200
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl: &lt;span style="color:#f92672">(&lt;/span>52&lt;span style="color:#f92672">)&lt;/span> Empty reply from server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>而ES那边也有响应&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 看来这和以前的7.1.1版本不一样了&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>2022-02-19T05:02:02,812&lt;span style="color:#f92672">][&lt;/span>WARN &lt;span style="color:#f92672">][&lt;/span>o.e.x.s.t.n.SecurityNetty4HttpServerTransport&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">[&lt;/span>localhost.localdomain&lt;span style="color:#f92672">]&lt;/span> received plaintext http traffic on an https channel, closing connection Netty4HttpChannel&lt;span style="color:#f92672">{&lt;/span>localAddress&lt;span style="color:#f92672">=&lt;/span>/127.0.0.1:9200, remoteAddress&lt;span style="color:#f92672">=&lt;/span>/127.0.0.1:38518&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>2022-02-19T05:02:27,144&lt;span style="color:#f92672">][&lt;/span>WARN &lt;span style="color:#f92672">][&lt;/span>o.e.x.s.t.n.SecurityNetty4HttpServerTransport&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">[&lt;/span>localhost.localdomain&lt;span style="color:#f92672">]&lt;/span> received plaintext http traffic on an https channel, closing connection Netty4HttpChannel&lt;span style="color:#f92672">{&lt;/span>localAddress&lt;span style="color:#f92672">=&lt;/span>/&lt;span style="color:#f92672">[&lt;/span>0:0:0:0:0:0:0:1&lt;span style="color:#f92672">]&lt;/span>:9200, remoteAddress&lt;span style="color:#f92672">=&lt;/span>/&lt;span style="color:#f92672">[&lt;/span>0:0:0:0:0:0:0:1&lt;span style="color:#f92672">]&lt;/span>:56174&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改配置文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 需要把security features都关闭，否则http不对外服务了&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># true改成false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>xpack.security.http.ssl:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enabled: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> keystore.path: certs/http.p12
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Enable encryption and mutual authentication between cluster nodes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>xpack.security.transport.ssl:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> enabled: false
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="测试访问">测试访问&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>http://localhost:9200
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>需要输入账号和密码:elastic / Shb2+OuCKthxFTxD-*jE
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="java访问测试">java访问测试&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>org.elasticsearch.client&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>elasticsearch-rest-client&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>8.0.0&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>@Bean(destroyMethod = &amp;#34;close&amp;#34;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>public RestClient restClient() throws CertificateException, IOException, KeyStoreException, NoSuchAlgorithmException, KeyManagementException {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> final CredentialsProvider credentialsProvider =
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> new BasicCredentialsProvider();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> credentialsProvider.setCredentials(AuthScope.ANY,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> new UsernamePasswordCredentials(&amp;#34;elastic&amp;#34;, &amp;#34;VWFjE60dbpKIjbajGJQ4&amp;#34;));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Path caCertificatePath = Paths.get(&amp;#34;E:\\es\\elasticsearch-8.0.0-windows-x86_64\\elasticsearch-8.0.0\\config\\certs\\http_ca.crt&amp;#34;);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CertificateFactory factory =
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CertificateFactory.getInstance(&amp;#34;X.509&amp;#34;);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Certificate trustedCa;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> try (InputStream is = Files.newInputStream(caCertificatePath)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> trustedCa = factory.generateCertificate(is);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> KeyStore trustStore = KeyStore.getInstance(&amp;#34;pkcs12&amp;#34;);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> trustStore.load(null, null);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> trustStore.setCertificateEntry(&amp;#34;ca&amp;#34;, trustedCa);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SSLContextBuilder sslContextBuilder = SSLContexts.custom()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .loadTrustMaterial(trustStore, null);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> final SSLContext sslContext = sslContextBuilder.build();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RestClientBuilder builder = RestClient.builder(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> new HttpHost(&amp;#34;localhost&amp;#34;, 9200, &amp;#34;https&amp;#34;))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .setHttpClientConfigCallback(httpClientBuilder -&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> httpClientBuilder.setDefaultCredentialsProvider(credentialsProvider);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> return httpClientBuilder.setSSLContext(sslContext);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> return builder.build();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-java" data-lang="java">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">//注入client&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@Autowired&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RestClient restClient;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Request request &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Request(&lt;span style="color:#e6db74">&amp;#34;GET&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;/ess_book/_doc/1&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Response response &lt;span style="color:#f92672">=&lt;/span> restClient.&lt;span style="color:#a6e22e">performRequest&lt;/span>(request);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">return&lt;/span> EntityUtils.&lt;span style="color:#a6e22e">toString&lt;/span>(response.&lt;span style="color:#a6e22e">getEntity&lt;/span>());
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="集群安装es">集群安装ES&lt;/h2>
&lt;p>&lt;a href="https://juejin.cn/post/7066717637564170271">全栈开发之ElasticSearch8.0分布式搜索引擎集群及其高可用测试 - 掘金&lt;/a>&lt;/p>
&lt;h2 id="安装kibana">安装Kibana&lt;/h2>
&lt;h1 id="安装报错">安装报错&lt;/h1>
&lt;p>max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>vim /etc/sysctl.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vm.max_map_count&lt;span style="color:#f92672">=&lt;/span>****262144
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 使生效&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sysctl -p****
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="安装插件">安装插件&lt;/h1>
&lt;h3 id="安装head">安装HEAD&lt;/h3>
&lt;p>Head是elasticsearch的集群管理工具，可以用于数据的浏览和查询&lt;/p>
&lt;p>(1)elasticsearch-head是一款开源软件，被托管在github上面，所以如果我们要使用它，必须先安装git，通过git获取elasticsearch-head&lt;/p>
&lt;p>(2)运行elasticsearch-head会用到grunt，而grunt需要npm包管理器，所以nodejs是必须要安装的&lt;/p>
&lt;p>(3)elasticsearch5.0之后，elasticsearch-head不做为插件放在其plugins目录下了。使用git拷贝elasticsearch-head到本地&lt;/p>
&lt;p>cd /usr/local/&lt;/p>
&lt;p>git clone git://github.com/mobz/elasticsearch-head.git&lt;/p>
&lt;p>(4)安装elasticsearch-head依赖包&lt;/p>
&lt;p>[root&lt;a href="#ZgotmplZ">@localhost&lt;/a> local]# npm install -g grunt-cli&lt;/p>
&lt;p>[root&lt;a href="#ZgotmplZ">@localhost&lt;/a> _site]# cd /usr/local/elasticsearch-head/&lt;/p>
&lt;p>[root&lt;a href="#ZgotmplZ">@localhost&lt;/a> elasticsearch-head]# cnpm install&lt;/p>
&lt;p>(5)修改Gruntfile.js&lt;/p>
&lt;p>[root&lt;a href="#ZgotmplZ">@localhost&lt;/a> _site]# cd /usr/local/elasticsearch-head/&lt;/p>
&lt;p>[root&lt;a href="#ZgotmplZ">@localhost&lt;/a> elasticsearch-head]# vi Gruntfile.js&lt;/p>
&lt;p>在connect&amp;ndash;&amp;gt;server&amp;ndash;&amp;gt;options下面添加：hostname:’*’，允许所有IP可以访问&lt;/p>
&lt;p>(6)修改elasticsearch-head默认连接地址[root&lt;a href="#ZgotmplZ">@localhost&lt;/a> elasticsearch-head]# cd /usr/local/elasticsearch-head/_site/&lt;/p>
&lt;p>[root&lt;a href="#ZgotmplZ">@localhost&lt;/a> _site]# vi app.js&lt;/p>
&lt;p>将this.base_uri = this.config.base_uri || this.prefs.get(&amp;ldquo;app-base_uri&amp;rdquo;) || &amp;ldquo;http://localhost:9200&amp;rdquo;;中的localhost修改成你es的服务器地址&lt;/p>
&lt;p>(7)配置elasticsearch允许跨域访问&lt;/p>
&lt;p>打开elasticsearch的配置文件elasticsearch.yml，在文件末尾追加下面两行代码即可：&lt;/p>
&lt;p>http.cors.enabled: true&lt;/p>
&lt;p>http.cors.allow-origin: &amp;ldquo;*&amp;rdquo;&lt;/p>
&lt;p>(8)打开9100端口&lt;/p>
&lt;p>[root&lt;a href="#ZgotmplZ">@localhost&lt;/a> elasticsearch-head]# firewall-cmd &amp;ndash;zone=public &amp;ndash;add-port=9100/tcp &amp;ndash;permanent&lt;/p>
&lt;p>重启防火墙&lt;/p>
&lt;p>[root&lt;a href="#ZgotmplZ">@localhost&lt;/a> elasticsearch-head]# firewall-cmd &amp;ndash;reload&lt;/p>
&lt;p>(9)启动elasticsearch&lt;/p>
&lt;p>(10)启动elasticsearch-head&lt;/p>
&lt;p>[root&lt;a href="#ZgotmplZ">@localhost&lt;/a> _site]# cd /usr/local/elasticsearch-head/&lt;/p>
&lt;p>[root&lt;a href="#ZgotmplZ">@localhost&lt;/a> elasticsearch-head]# node_modules/grunt/bin/grunt server&lt;/p>
&lt;p>(11)访问elasticsearch-head&lt;/p>
&lt;p>关闭防火墙：systemctl stop firewalld.service&lt;/p>
&lt;p>浏览器输入网址：&lt;a href="http://192.168.25.131:9100/">http://192.168.25.131:9100/&lt;/a>&lt;/p>
&lt;h3 id="安装中文分词器">安装中文分词器&lt;/h3>
&lt;p>(1)下载中文分词器&lt;a href="https://github.com/medcl/elasticsearch-analysis-ik">https://github.com/medcl/elasticsearch-analysis-ik&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>下载elasticsearch-analysis-ik-master.zip
&lt;/code>&lt;/pre>&lt;p>(2)解压elasticsearch-analysis-ik-master.zip&lt;/p>
&lt;p>unzip elasticsearch-analysis-ik-master.zip&lt;/p>
&lt;p>(3)进入elasticsearch-analysis-ik-master，编译源码&lt;/p>
&lt;p>mvn clean install -Dmaven.test.skip=true&lt;/p>
&lt;p>(4)在es的plugins文件夹下创建目录ik&lt;/p>
&lt;p>(5)将编译后生成的elasticsearch-analysis-ik-版本.zip移动到ik下，并解压&lt;/p>
&lt;p>(6)解压后的内容移动到ik目录下&lt;/p>
&lt;h3 id="分词器介绍及内置分词器">分词器介绍及内置分词器&lt;/h3>
&lt;p>分词器：从一串文本中切分出一个一个的词条，并对每个词条进行标准化&lt;/p>
&lt;p>包括三部分：&lt;/p>
&lt;p>character filter：分词之前的预处理，过滤掉HTML标签，特殊符号转换等&lt;/p>
&lt;p>tokenizer：分词&lt;/p>
&lt;p>token filter：标准化&lt;/p>
&lt;p>内置分词器：&lt;/p>
&lt;p>standard 分词器：(默认的)他会将词汇单元转换成小写形式，并去除停用词和标点符号，支持中文采用的方法为单字切分&lt;/p>
&lt;p>simple 分词器：首先会通过非字母字符来分割文本信息，然后将词汇单元统一为小写形式。该分析器会去掉数字类型的字符。&lt;/p>
&lt;p>Whitespace 分词器：仅仅是去除空格，对字符没有lowcase化,不支持中文；并且不对生成的词汇单元进行其他的标准化处理。&lt;/p>
&lt;p>language 分词器：特定语言的分词器，不支持中文&lt;/p>
&lt;h1 id="api简单使用">API简单使用&lt;/h1>
&lt;h1 id="查询索引和映射">查询索引和映射&lt;/h1>
&lt;pre tabindex="0">&lt;code># 这两个都是查看索引,只是第三行比第三行多几个字段
GET lib
GET /lib/_settings
# 查询所有索引
GET /_all/_settings
# 查询映射
GET /lib2/_mapping
&lt;/code>&lt;/pre>&lt;h1 id="添加索引">添加索引&lt;/h1>
&lt;pre tabindex="0">&lt;code># 方式一,使用的是默认的配置
PUT /lib
# 方式二
PUT /lib/
{
&amp;#34;settings&amp;#34;: {
&amp;#34;index&amp;#34;: {
&amp;#34;number_of_shards&amp;#34;: 5,
&amp;#34;number_of_replicas&amp;#34;: 1
}
}
}
# 方式三,指定字段类型
PUT /lib3
{
&amp;#34;mappings&amp;#34;: {
&amp;#34;user&amp;#34;:{
&amp;#34;properties&amp;#34;:{
&amp;#34;name&amp;#34;:{&amp;#34;type&amp;#34;:&amp;#34;text&amp;#34;},
&amp;#34;address&amp;#34;:{&amp;#34;type&amp;#34;:&amp;#34;text&amp;#34;},
&amp;#34;age&amp;#34;:{&amp;#34;type&amp;#34;:&amp;#34;text&amp;#34;},
&amp;#34;interests&amp;#34;:{&amp;#34;type&amp;#34;:&amp;#34;text&amp;#34;},
&amp;#34;birthday&amp;#34;:{&amp;#34;type&amp;#34;:&amp;#34;text&amp;#34;}
}
}
}
}
&lt;/code>&lt;/pre>&lt;h1 id="添加文档">添加文档&lt;/h1>
&lt;pre tabindex="0">&lt;code># 指定id的时候用PUT
PUT /lib/user/1
{
&amp;#34;first_name&amp;#34;:&amp;#34;Jame&amp;#34;,
&amp;#34;last_name&amp;#34;:&amp;#34;Smith&amp;#34;,
&amp;#34;age&amp;#34;:&amp;#34;32&amp;#34;,
&amp;#34;about&amp;#34;:&amp;#34;I like to collect rock albums&amp;#34;,
&amp;#34;interests&amp;#34;:[&amp;#34;music&amp;#34;]
}
# 没有指定ID用POST,创建的时候会自动生成ID
POST /lib/user/
{
&amp;#34;first_name&amp;#34;:&amp;#34;anthony&amp;#34;,
&amp;#34;last_name&amp;#34;:&amp;#34;Smith&amp;#34;,
&amp;#34;age&amp;#34;:&amp;#34;32&amp;#34;,
&amp;#34;about&amp;#34;:&amp;#34;I like to collect rock albums&amp;#34;,
&amp;#34;interests&amp;#34;:[&amp;#34;music&amp;#34;]
}
&lt;/code>&lt;/pre>&lt;h1 id="查询文档">查询文档&lt;/h1>
&lt;pre tabindex="0">&lt;code># 指定ID
GET /lib/user/1
# 查看文档中的指定字段
GET /lib/user/1?_source=age,about
# 查询索引下的所有文档
GET /tt/ttt/_search
&lt;/code>&lt;/pre>&lt;h1 id="更新文档">更新文档&lt;/h1>
&lt;pre tabindex="0">&lt;code># 以覆盖的方式,如果有这个id,就覆盖更新,如果没有id,就创建
PUT /lib/user/1
{
&amp;#34;first_name&amp;#34;:&amp;#34;Jame&amp;#34;,
&amp;#34;last_name&amp;#34;:&amp;#34;Smith&amp;#34;,
&amp;#34;age&amp;#34;:&amp;#34;36&amp;#34;,
&amp;#34;about&amp;#34;:&amp;#34;I like to collect rock albums&amp;#34;,
&amp;#34;interests&amp;#34;:[&amp;#34;music&amp;#34;]
}
# 只是更新文档
POST /lib/user/1/_update
{
&amp;#34;doc&amp;#34;:{
&amp;#34;age&amp;#34;:&amp;#34;37&amp;#34;
}
}
&lt;/code>&lt;/pre>&lt;h1 id="删除文档和索引">删除文档和索引&lt;/h1>
&lt;pre tabindex="0">&lt;code># 删除文档
DELETE /lib/user/1
# 删除索引
DELETE /lib
&lt;/code>&lt;/pre>&lt;h1 id="muliget">MuliGet&lt;/h1>
&lt;p>MuliGet 需要ID,才能实现&lt;/p>
&lt;pre tabindex="0">&lt;code># 批量查询,这是查出全部数据
GET /_mget
{
&amp;#34;docs&amp;#34;:[
{
&amp;#34;_index&amp;#34;:&amp;#34;lib&amp;#34;,
&amp;#34;_type&amp;#34;:&amp;#34;user&amp;#34;,
&amp;#34;_id&amp;#34;:1
},
{
&amp;#34;_index&amp;#34;:&amp;#34;lib&amp;#34;,
&amp;#34;_type&amp;#34;:&amp;#34;user&amp;#34;,
&amp;#34;_id&amp;#34;:2
},
{
&amp;#34;_index&amp;#34;:&amp;#34;lib&amp;#34;,
&amp;#34;_type&amp;#34;:&amp;#34;user&amp;#34;,
&amp;#34;_id&amp;#34;:3
}
]
}
# 批量查询,筛选字段
GET /_mget
{
&amp;#34;docs&amp;#34;:[
{
&amp;#34;_index&amp;#34;:&amp;#34;lib&amp;#34;,
&amp;#34;_type&amp;#34;:&amp;#34;user&amp;#34;,
&amp;#34;_id&amp;#34;:1,
&amp;#34;_source&amp;#34;:&amp;#34;interests&amp;#34;
},
{
&amp;#34;_index&amp;#34;:&amp;#34;lib&amp;#34;,
&amp;#34;_type&amp;#34;:&amp;#34;user&amp;#34;,
&amp;#34;_id&amp;#34;:2,
&amp;#34;_source&amp;#34;:[&amp;#34;interests&amp;#34;,&amp;#34;age&amp;#34;]
}]
}
# MuliGet批量查询的是同一个文档时候,可以简写方式
GET /lib/user/_mget
{
&amp;#34;docs&amp;#34;: [
{
&amp;#34;_id&amp;#34;: 1
},
{
&amp;#34;_type&amp;#34;: &amp;#34;user&amp;#34;,
&amp;#34;_id&amp;#34;: 2
}
]
}
# 更简单的方式
GET /lib/user/_mget
{
&amp;#34;ids&amp;#34;: [&amp;#34;1&amp;#34;,&amp;#34;2&amp;#34;]
}
&lt;/code>&lt;/pre>&lt;h1 id="bulk批量插入">Bulk批量插入&lt;/h1>
&lt;p>bulk的格式：&lt;/p>
&lt;pre tabindex="0">&lt;code>{action:{metadata}}
{requstbody}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>action:&lt;/li>
&lt;li>create：文档不存在时创建&lt;/li>
&lt;li>update:更新文档&lt;/li>
&lt;li>index:创建新文档或替换已有文档&lt;/li>
&lt;li>delete:删除一个文档&lt;/li>
&lt;li>metadata:&lt;/li>
&lt;li>index&lt;/li>
&lt;li>_type&lt;/li>
&lt;li>_id&lt;/li>
&lt;/ul>
&lt;p>create 和index的区别:如果数据存在，使用create操作失败，会提示文档已经存在，使用index则可以成功执行。&lt;/p>
&lt;p>bulk一次最大处理多少数据量:&lt;/p>
&lt;p>bulk会把将要处理的数据载入内存中，所以数据量是有限制的，最佳的数据量不是一个确定的数值，它取决于你的硬件，你的文档大小以及复杂性，你的索引以及搜索的负载。一般建议是1000-5000个文档，大小建议是5-15MB，默认不能超过100M，可以在es的配置文件（即$ES_HOME下的config下的elasticsearch.yml）中。&lt;/p>
&lt;pre tabindex="0">&lt;code># 批量删除,delete不需要请求体
{&amp;#34;delete&amp;#34;:{&amp;#34;_index&amp;#34;:&amp;#34;lib&amp;#34;,&amp;#34;_type&amp;#34;:&amp;#34;user&amp;#34;,&amp;#34;_id&amp;#34;:&amp;#34;1&amp;#34;}}
# 批量添加
POST /lib2/books/_bulk
{&amp;#34;index&amp;#34;:{&amp;#34;_id&amp;#34;:1}}
{&amp;#34;title&amp;#34;:&amp;#34;java&amp;#34;,&amp;#34;price&amp;#34;:55}
{&amp;#34;index&amp;#34;:{&amp;#34;_id&amp;#34;:2}}
{&amp;#34;title&amp;#34;:&amp;#34;html5&amp;#34;,&amp;#34;price&amp;#34;:55}
{&amp;#34;index&amp;#34;:{&amp;#34;_id&amp;#34;:3}}
{&amp;#34;title&amp;#34;:&amp;#34;php&amp;#34;,&amp;#34;price&amp;#34;:35}
{&amp;#34;index&amp;#34;:{&amp;#34;_id&amp;#34;:4}}
{&amp;#34;title&amp;#34;:&amp;#34;python&amp;#34;,&amp;#34;price&amp;#34;:50}
# 批量获取
GET /lib2/books/_mget
{
&amp;#34;ids&amp;#34;: [&amp;#34;1&amp;#34;,&amp;#34;2&amp;#34;,&amp;#34;3&amp;#34;,&amp;#34;4&amp;#34;]
}
# 批量操作
POST /lib2/books/_bulk
{&amp;#34;delete&amp;#34;:{&amp;#34;_index&amp;#34;:&amp;#34;lib2&amp;#34;,&amp;#34;_type&amp;#34;:&amp;#34;books&amp;#34;,&amp;#34;_id&amp;#34;:4}}
{&amp;#34;create&amp;#34;:{&amp;#34;_index&amp;#34;:&amp;#34;tt&amp;#34;,&amp;#34;_type&amp;#34;:&amp;#34;ttt&amp;#34;,&amp;#34;_id&amp;#34;:&amp;#34;100&amp;#34;}}
{&amp;#34;name&amp;#34;:&amp;#34;lisi&amp;#34;}
{&amp;#34;index&amp;#34;:{&amp;#34;_index&amp;#34;:&amp;#34;tt&amp;#34;,&amp;#34;_type&amp;#34;:&amp;#34;ttt&amp;#34;}}
{&amp;#34;name&amp;#34;:&amp;#34;zhaosi&amp;#34;}
{&amp;#34;update&amp;#34;:{&amp;#34;_index&amp;#34;:&amp;#34;lib2&amp;#34;,&amp;#34;_type&amp;#34;:&amp;#34;books&amp;#34;,&amp;#34;_id&amp;#34;:&amp;#34;4&amp;#34;}}
{&amp;#34;doc&amp;#34;:{&amp;#34;price&amp;#34;:58}}
&lt;/code>&lt;/pre>&lt;h1 id="基本查询query查询">基本查询(Query查询)&lt;/h1>
&lt;h3 id="term和terms查询">term和terms查询&lt;/h3>
&lt;ul>
&lt;li>term 查询会去倒排索引中寻找确切的tem,它并不知道分词器的存在,这种查询使用keyword,numeric,date,在没有使用分词器的时候使用&lt;/li>
&lt;li>term 查询某个字段里含有某个关键词的文档&lt;/li>
&lt;li>terms:查询某个字段里含有多个关键词的文档&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code># term，name含有“zhaoming”
GET /lib3/user/_search/
{
&amp;#34;query&amp;#34;:{
&amp;#34;term&amp;#34;: {&amp;#34;name&amp;#34;: &amp;#34;zhaoming&amp;#34;}
}
}
# terms，name含有“zhou”或者还有&amp;#34;yang&amp;#34;的查出来
GET /lib3/user/_search/
{
&amp;#34;query&amp;#34;:{
&amp;#34;terms&amp;#34;: {
&amp;#34;name&amp;#34;: [&amp;#34;zhou&amp;#34;,&amp;#34;yang&amp;#34;]
}
}
}
&lt;/code>&lt;/pre>&lt;h3 id="form和size分页">form和size分页&lt;/h3>
&lt;p>form是从0开始的,size是取多少个&lt;/p>
&lt;pre tabindex="0">&lt;code>GET /lib3/user/_search/
{
&amp;#34;version&amp;#34;: true, # 查询的时候如果需要返回version的话
&amp;#34;from&amp;#34;: 0,
&amp;#34;size&amp;#34;: 1,
&amp;#34;query&amp;#34;:{
&amp;#34;terms&amp;#34;: {
&amp;#34;name&amp;#34;: [&amp;#34;zhou&amp;#34;,&amp;#34;lisi&amp;#34;]
}
}
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>GET article/_count
{
&amp;#34;query&amp;#34;: {
&amp;#34;match&amp;#34;: {
&amp;#34;title&amp;#34;: &amp;#34;金融&amp;#34;
}
}
}
&lt;/code>&lt;/pre>&lt;h3 id="match查询">match查询&lt;/h3>
&lt;p>match query知道分词器的存在，会对filed进行分词操作，然后再查询&lt;/p>
&lt;ul>
&lt;li>match_all:查询所有文档&lt;/li>
&lt;li>match:查询一个字段&lt;/li>
&lt;li>multi_match:查询多个字段&lt;/li>
&lt;li>match_phrase:包含得含有一样的,而且顺序还一样的,可以不用完整&lt;/li>
&lt;li>match_phrase_prefix: 前缀匹配&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code># match是知道分词器的存在的,所以会去查询name是lisi的,或者name是zhaoming的(or的关系)
GET /lib3/user/_search
{
&amp;#34;query&amp;#34;:{
&amp;#34;match&amp;#34;: {
&amp;#34;name&amp;#34;: &amp;#34;lisi zhaoming&amp;#34;
}
}
}
# 可以指定多个字段
GET /lib3/user/_search
{
&amp;#34;query&amp;#34;:{
&amp;#34;multi_match&amp;#34;: {
&amp;#34;query&amp;#34;: &amp;#34;lvyou&amp;#34;,
&amp;#34;fields&amp;#34;: [&amp;#34;interests&amp;#34;,&amp;#34;name&amp;#34;]
}
}
}
# 短语匹配(要完全匹配),包含的关系
GET /lib3/user/_search
{
&amp;#34;query&amp;#34;:{
&amp;#34;match_phrase&amp;#34;: {
&amp;#34;interests&amp;#34;: &amp;#34;lvyou, duanlian &amp;#34;
}
}
}
# 前缀匹配
GET /lib3/user/_search
{
&amp;#34;query&amp;#34;:{
&amp;#34;match_phrase_prefix&amp;#34;: {
&amp;#34;name&amp;#34;: &amp;#34;zhao&amp;#34;
}
}
}
&lt;/code>&lt;/pre>&lt;h3 id="_source控制返回字段">_source控制返回字段&lt;/h3>
&lt;pre tabindex="0">&lt;code># 指定返回的字段
GET /lib3/user/_search
{
&amp;#34;_source&amp;#34;: [&amp;#34;address&amp;#34;,&amp;#34;name&amp;#34;],
&amp;#34;query&amp;#34;: {
&amp;#34;match&amp;#34;: {
&amp;#34;interests&amp;#34;: &amp;#34;changge&amp;#34;
}
}
}
# 包含和排除返回字段
GET /lib3/user/_search
{
&amp;#34;query&amp;#34;: {
&amp;#34;match_all&amp;#34;: {}
},
&amp;#34;_source&amp;#34;: {
&amp;#34;includes&amp;#34;: [&amp;#34;name&amp;#34;,&amp;#34;address&amp;#34;], # 包含这些字段
&amp;#34;excludes&amp;#34;: [&amp;#34;age&amp;#34;,&amp;#34;birthday&amp;#34;] # 排除这些字段
}
}
# 使用通配符*
GET /lib3/user/_search
{
&amp;#34;_source&amp;#34;: {
&amp;#34;includes&amp;#34;: &amp;#34;addr*&amp;#34;,
&amp;#34;excludes&amp;#34;: [&amp;#34;name&amp;#34;,&amp;#34;bir*&amp;#34;]
},
&amp;#34;query&amp;#34;: {
&amp;#34;match_all&amp;#34;: {}
}
}
&lt;/code>&lt;/pre>&lt;h3 id="sort排序">sort排序&lt;/h3>
&lt;pre tabindex="0">&lt;code># 指定排序字段
GET /lib3/user/_search
{
&amp;#34;query&amp;#34;:{
&amp;#34;match_all&amp;#34;: {}
},
&amp;#34;sort&amp;#34;: [
{
&amp;#34;age&amp;#34;: {
&amp;#34;order&amp;#34;: &amp;#34;desc&amp;#34;
}
}
]
}
# 控制范围
GET /lib3/user/_search
{
&amp;#34;query&amp;#34;:{
&amp;#34;range&amp;#34;: {
&amp;#34;age&amp;#34;: {
&amp;#34;gte&amp;#34;: 20,
&amp;#34;lte&amp;#34;: 38,
&amp;#34;include_lower&amp;#34;:true, # true包含,false不包含,下限
&amp;#34;include_upper&amp;#34;:true # true包含,false不包含,上限
}
}
},
&amp;#34;sort&amp;#34;: [
{
&amp;#34;age&amp;#34;: {
&amp;#34;order&amp;#34;: &amp;#34;asc&amp;#34;
}
}
]
}
&lt;/code>&lt;/pre>&lt;h3 id="wildcard通配符查询">wildcard通配符查询&lt;/h3>
&lt;p>允许使用通配符* 和 ?来进行查询&lt;/p>
&lt;ul>
&lt;li>代表0个或多个字符&lt;/li>
&lt;/ul>
&lt;p>？代表任意一个字符&lt;/p>
&lt;pre tabindex="0">&lt;code>GET /lib3/user/_search
{
&amp;#34;query&amp;#34;: {
&amp;#34;wildcard&amp;#34;: {
&amp;#34;name&amp;#34;: &amp;#34;zhao*&amp;#34;
}
}
}
GET /lib3/user/_search
{
&amp;#34;query&amp;#34;: {
&amp;#34;wildcard&amp;#34;: {
&amp;#34;name&amp;#34;: {
&amp;#34;value&amp;#34;: &amp;#34;li?i&amp;#34;
}
}
}
}
&lt;/code>&lt;/pre>&lt;h3 id="fuzzy模糊查询">fuzzy模糊查询&lt;/h3>
&lt;ul>
&lt;li>value：查询的关键字&lt;/li>
&lt;li>boost：查询的权值，默认值是1.0&lt;/li>
&lt;li>min_similarity:设置匹配的最小相似度，默认值为0.5，对于字符串，取值为0-1(包括0和1);对于数值，取值可能大于1;对于日期型取值为1d,1m等，1d就代表1天&lt;/li>
&lt;li>prefix_length:指明区分词项的共同前缀长度，默认是0&lt;/li>
&lt;li>max_expansions:查询中的词项可以扩展的数目，默认可以无限大&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>GET /lib3/user/_search
{
&amp;#34;query&amp;#34;: {
&amp;#34;fuzzy&amp;#34;: {
&amp;#34;name&amp;#34;: {
&amp;#34;value&amp;#34;: &amp;#34;zhaoimng&amp;#34; # zhaoming写反了,也可以查出来
}
}
}
}
&lt;/code>&lt;/pre>&lt;h3 id="高亮搜索">高亮搜索&lt;/h3>
&lt;pre tabindex="0">&lt;code>GET /lib3/user/_search
{
&amp;#34;query&amp;#34;: {
&amp;#34;fuzzy&amp;#34;: {
&amp;#34;name&amp;#34;: {
&amp;#34;value&amp;#34;: &amp;#34;zhaoimng&amp;#34;
}
}
},
&amp;#34;highlight&amp;#34;: {
&amp;#34;fields&amp;#34;: {
&amp;#34;name&amp;#34;:{}
}
}
}
&lt;/code>&lt;/pre>&lt;h3 id="filter查询">Filter查询&lt;/h3>
&lt;p>是不计算相关性的,同时可以缓存,因此,filter速度要快于query&lt;/p>
&lt;pre tabindex="0">&lt;code># 过滤价格是40的
GET /lib4/items/_search
{
&amp;#34;query&amp;#34;: {
&amp;#34;bool&amp;#34;: {
&amp;#34;filter&amp;#34;: {
&amp;#34;term&amp;#34;:{&amp;#34;price&amp;#34;: &amp;#34;40&amp;#34;}
}
}
}
}
# 过滤价格是25的和40的
GET /lib4/items/_search
{
&amp;#34;query&amp;#34;: {
&amp;#34;bool&amp;#34;: {
&amp;#34;filter&amp;#34;: {
&amp;#34;terms&amp;#34;:{&amp;#34;price&amp;#34;: [25,40]}
}
}
}
}
&lt;/code>&lt;/pre>&lt;h3 id="bool过滤查询">bool过滤查询&lt;/h3>
&lt;p>可以实现组合过滤查询&lt;/p>
&lt;p>格式：&lt;/p>
&lt;pre tabindex="0">&lt;code>{
&amp;#34;bool&amp;#34;: {
&amp;#34;must&amp;#34;: [],
&amp;#34;should&amp;#34;: [],
&amp;#34;must_not&amp;#34;: []
}
}
&lt;/code>&lt;/pre>&lt;p>must:必须满足的条件&amp;mdash;and&lt;/p>
&lt;p>should：可以满足也可以不满足的条件&amp;ndash;or&lt;/p>
&lt;p>must_not:不需要满足的条件&amp;ndash;not&lt;/p>
&lt;pre tabindex="0">&lt;code># 翻译过来:要是是价格是250,或者是itemID是:id100123,并且price不能是30
GET /lib4/items/_search
{
&amp;#34;query&amp;#34;: {
&amp;#34;bool&amp;#34;: {
&amp;#34;should&amp;#34;: [
{&amp;#34;term&amp;#34;:{&amp;#34;price&amp;#34;:250}},
{&amp;#34;term&amp;#34;:{&amp;#34;itemID&amp;#34;:&amp;#34;id100123&amp;#34;}}
],
&amp;#34;must_not&amp;#34;: [
{&amp;#34;term&amp;#34;:{&amp;#34;price&amp;#34;:30}}
]
}
}
}
&lt;/code>&lt;/pre>&lt;p>过滤,要想明白跟普通查询的过滤有什么不一样&lt;/p>
&lt;pre tabindex="0">&lt;code>GET /lib4/items/_search
{
&amp;#34;query&amp;#34;: {
&amp;#34;bool&amp;#34;: {
&amp;#34;filter&amp;#34;: {
&amp;#34;range&amp;#34;: {
&amp;#34;price&amp;#34;: {
&amp;#34;gte&amp;#34;: 40,
&amp;#34;lte&amp;#34;: 250
}
}
}
}
}
}
&lt;/code>&lt;/pre>&lt;p>获取非空的文档&lt;/p>
&lt;pre tabindex="0">&lt;code>GET /lib4/items/_search
{
&amp;#34;query&amp;#34;: {
&amp;#34;bool&amp;#34;: {
&amp;#34;filter&amp;#34;: {
&amp;#34;exists&amp;#34;: {
&amp;#34;field&amp;#34;: &amp;#34;price&amp;#34;
}
}
}
}
}
&lt;/code>&lt;/pre>&lt;h3 id="聚合查询">聚合查询&lt;/h3>
&lt;pre tabindex="0">&lt;code>GET /lib4/items/_search
{
&amp;#34;size&amp;#34;:0, # 只显示总和
&amp;#34;aggs&amp;#34;:{
&amp;#34;price_of_sum&amp;#34;:{
&amp;#34;sum&amp;#34;:{
&amp;#34;field&amp;#34;:&amp;#34;price&amp;#34;
}
}
}
}
# 最大值
GET /lib4/items/_search
{
&amp;#34;aggs&amp;#34;:{
&amp;#34;price_of_sum&amp;#34;:{
&amp;#34;max&amp;#34;:{
&amp;#34;field&amp;#34;:&amp;#34;price&amp;#34;
}
}
}
}
# 最小值
GET /lib4/items/_search
{
&amp;#34;aggs&amp;#34;:{
&amp;#34;price_of_sum&amp;#34;:{ # price_of_sum这个名字随便起的
&amp;#34;min&amp;#34;:{
&amp;#34;field&amp;#34;:&amp;#34;price&amp;#34;
}
}
}
}
# 求平均数
GET /lib4/items/_search
{
&amp;#34;aggs&amp;#34;:{
&amp;#34;price_of_sum&amp;#34;:{
&amp;#34;avg&amp;#34;:{
&amp;#34;field&amp;#34;:&amp;#34;price&amp;#34;
}
}
}
}
# 价格有不相同的数
GET /lib4/items/_search
{
&amp;#34;aggs&amp;#34;:{
&amp;#34;price_of_sum&amp;#34;:{
&amp;#34;cardinality&amp;#34;:{
&amp;#34;field&amp;#34;:&amp;#34;price&amp;#34;
}
}
}
}
# 分组
GET /lib4/items/_search
{
&amp;#34;size&amp;#34;: 0,
&amp;#34;aggs&amp;#34;:{
&amp;#34;price_of_sum&amp;#34;:{
&amp;#34;terms&amp;#34;:{
&amp;#34;field&amp;#34;:&amp;#34;price&amp;#34;
}
}
}
}
&lt;/code>&lt;/pre>&lt;h1 id="api高级">API高级&lt;/h1>
&lt;h3 id="版本控制">版本控制&lt;/h3>
&lt;p>ElasticSearch采用了乐观锁来保证数据的一致性，也就是说，当用户对document进行操作时，并不需要对该document作加锁和解锁的操作，只需要指定要操作的版本即可。当版本号一致时，ElasticSearch会允许该操作顺利执行，而当版本号存在冲突时，ElasticSearch会提示冲突并抛出异常（VersionConflictEngineException异常）。&lt;/p>
&lt;p>ElasticSearch的版本号的取值范围为1到2^63-1。&lt;/p>
&lt;p>内部版本控制：使用的是_version&lt;/p>
&lt;p>外部版本控制：elasticsearch在处理外部版本号时会与对内部版本号的处理有些不同。它不再是检查&lt;em>version是否与请求中指定的数值&lt;/em>相同*,而是检查当前的*version是否比指定的数值小。如果请求成功，那么外部的版本号就会被存储到文档中的_version中。&lt;/p>
&lt;p>为了保持_version与外部版本控制的数据一致使用version_type=external&lt;/p>
&lt;h3 id="数据类型">数据类型&lt;/h3>
&lt;p>核心数据类型（Core datatypes）&lt;/p>
&lt;pre tabindex="0">&lt;code>字符型：string，string类型包括
text 和 keyword
text类型被用来索引长文本，在建立索引前会将这些文本进行分词，转化为词的组合，建立索引。允许es来检索这些词语。text类型不能用来排序和聚合。
Keyword类型不需要进行分词，可以被用来检索过滤、排序和聚合。keyword 类型字段只能用本身来进行检索
数字型：long, integer, short, byte, double, float
日期型：date
布尔型：boolean
二进制型：binary
&lt;/code>&lt;/pre>&lt;p>复杂数据类型（Complex datatypes）&lt;/p>
&lt;pre tabindex="0">&lt;code>数组类型（Array datatype）：数组类型不需要专门指定数组元素的type，例如：
字符型数组: [ &amp;#34;one&amp;#34;, &amp;#34;two&amp;#34; ]
整型数组：[ 1, 2 ]
数组型数组：[ 1, [ 2, 3 ]] 等价于[ 1, 2, 3 ]
对象数组：[ { &amp;#34;name&amp;#34;: &amp;#34;Mary&amp;#34;, &amp;#34;age&amp;#34;: 12 }, { &amp;#34;name&amp;#34;: &amp;#34;John&amp;#34;, &amp;#34;age&amp;#34;: 10 }]
对象类型（Object datatype）：_ object _ 用于单个JSON对象；
嵌套类型（Nested datatype）：_ nested _ 用于JSON数组；
&lt;/code>&lt;/pre>&lt;p>地理位置类型（Geo datatypes）&lt;/p>
&lt;pre tabindex="0">&lt;code>地理坐标类型（Geo-point datatype）：_ geo_point _ 用于经纬度坐标；
地理形状类型（Geo-Shape datatype）：_ geo_shape _ 用于类似于多边形的复杂形状；
&lt;/code>&lt;/pre>&lt;p>特定类型（Specialised datatypes）&lt;/p>
&lt;pre tabindex="0">&lt;code>IPv4 类型（IPv4 datatype）：_ ip _ 用于IPv4 地址；
Completion 类型（Completion datatype）：_ completion _提供自动补全建议；
Token count 类型（Token count datatype）：_ token_count _ 用于统计做了标记的字段的index数目，该值会一直增加，不会因为过滤条件而减少。
mapper-murmur3
类型：通过插件，可以通过 _ murmur3 _ 来计算 index 的 hash 值；
附加类型（Attachment datatype）：采用 mapper-attachments
插件，可支持_ attachments _ 索引，例如 Microsoft Office 格式，Open Document 格式，ePub, HTML 等。
&lt;/code>&lt;/pre>&lt;p>支持的属性：&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;#34;store&amp;#34;:false//是否单独设置此字段的是否存储而从_source字段中分离，默认是false，只能搜索，不能获取值
&amp;#34;index&amp;#34;: true//分词，不分词是：false，设置成false，字段将不会被索引
&amp;#34;analyzer&amp;#34;:&amp;#34;ik&amp;#34;//指定分词器,默认分词器为standard analyzer
&amp;#34;boost&amp;#34;:1.23//字段级别的分数加权，默认值是1.0
&amp;#34;doc_values&amp;#34;:false//对not_analyzed字段，默认都是开启，分词字段不能使用，对排序和聚合能提升较大性能，节约内存
&amp;#34;fielddata&amp;#34;:{&amp;#34;format&amp;#34;:&amp;#34;disabled&amp;#34;}//针对分词字段，参与排序或聚合时能提高性能，不分词字段统一建议使用doc_value
&amp;#34;fields&amp;#34;:{&amp;#34;raw&amp;#34;:{&amp;#34;type&amp;#34;:&amp;#34;string&amp;#34;,&amp;#34;index&amp;#34;:&amp;#34;not_analyzed&amp;#34;}} //可以对一个字段提供多种索引模式，同一个字段的值，一个分词，一个不分词
&amp;#34;ignore_above&amp;#34;:100 //超过100个字符的文本，将会被忽略，不被索引
&amp;#34;include_in_all&amp;#34;:ture//设置是否此字段包含在_all字段中，默认是true，除非index设置成no选项
&amp;#34;index_options&amp;#34;:&amp;#34;docs&amp;#34;//4个可选参数docs（索引文档号） ,freqs（文档号+词频），positions（文档号+词频+位置，通常用来距离查询），offsets（文档号+词频+位置+偏移量，通常被使用在高亮字段）分词字段默认是position，其他的默认是docs
&amp;#34;norms&amp;#34;:{&amp;#34;enable&amp;#34;:true,&amp;#34;loading&amp;#34;:&amp;#34;lazy&amp;#34;}//分词字段默认配置，不分词字段：默认{&amp;#34;enable&amp;#34;:false}，存储长度因子和索引时boost，建议对需要参与评分字段使用 ，会额外增加内存消耗量
&amp;#34;null_value&amp;#34;:&amp;#34;NULL&amp;#34;//设置一些缺失字段的初始化值，只有string可以使用，分词字段的null值也会被分词
&amp;#34;position_increament_gap&amp;#34;:0//影响距离查询或近似查询，可以设置在多值字段的数据上火分词字段上，查询时可指定slop间隔，默认值是100
&amp;#34;search_analyzer&amp;#34;:&amp;#34;ik&amp;#34;//设置搜索时的分词器，默认跟ananlyzer是一致的，比如index时用standard+ngram，搜索时用standard用来完成自动提示功能
&amp;#34;similarity&amp;#34;:&amp;#34;BM25&amp;#34;//默认是TF/IDF算法，指定一个字段评分策略，仅仅对字符串型和分词类型有效
&amp;#34;term_vector&amp;#34;:&amp;#34;no&amp;#34;//默认不存储向量信息，支持参数yes（term存储），with_positions（term+位置）,with_offsets（term+偏移量），with_positions_offsets(term+位置+偏移量) 对快速高亮fast vector highlighter能提升性能，但开启又会加大索引体积，不适合大数据量用
&lt;/code>&lt;/pre>&lt;h1 id="elasticsearch原理">ElasticSearch原理&lt;/h1>
&lt;h3 id="解析es的分布式架构">解析es的分布式架构&lt;/h3>
&lt;p>分片的副本：&lt;/p>
&lt;p>集群发现机制(cluster discovery)：比如当前我们启动了一个es进程，当启动了第二个es进程时，这个进程作为一个node自动就发现了集群，并且加入了进去&lt;/p>
&lt;p>shard负载均衡：比如现在有10shard，集群中有3个节点，es会进行均衡的进行分配，以保持每个节点均衡的负载请求&lt;/p>
&lt;p>请求路由&lt;/p>
&lt;h3 id="扩容机制">扩容机制&lt;/h3>
&lt;p>垂直扩容：购置新的机器，替换已有的机器&lt;/p>
&lt;p>例子:一台有6台机器,每台1T,一共6T,现在替换掉其中的两台,1T升级到2T,这样一共就有8T&lt;/p>
&lt;p>水平扩容：直接增加机器&lt;/p>
&lt;h3 id="rebalance">rebalance&lt;/h3>
&lt;p>增加或减少节点时会自动均衡&lt;/p>
&lt;h3 id="master节点">master节点&lt;/h3>
&lt;p>主节点的主要职责是和集群操作相关的内容，如创建或删除索引，跟踪哪些节点是群集的一部分，并决定哪些分片分配给相关的节点。稳定的主节点对集群的健康是非常重要的。一个集群,至少有一个master.并不是所有的请求都请求master&lt;/p>
&lt;h3 id="节点对等">节点对等&lt;/h3>
&lt;p>每个节点都能接收请求每个节点接收到请求后都能把该请求路由到有相关数据的其它节点上接收原始请求的节点负责采集数据并返回给客户端&lt;/p>
&lt;h3 id="分片和副本机制">分片和副本机制&lt;/h3>
&lt;ol>
&lt;li>index包含多个shard&lt;/li>
&lt;li>每个shard都是一个最小工作单元，承载部分数据；每个shard都是一个lucene实例，有完整的建立索引和处理请求的能力&lt;/li>
&lt;li>增减节点时，shard会自动在nodes中负载均衡&lt;/li>
&lt;li>primary shard和replica shard，每个document肯定只存在于某一个primary shard以及其对应的replica shard中，不可能存在于多个primary shard&lt;/li>
&lt;li>replica shard是primary shard的副本，负责容错，以及承担读请求负载&lt;/li>
&lt;li>primary shard的数量在创建索引的时候就固定了，replica shard的数量可以随时修改&lt;/li>
&lt;li>primary shard的默认数量是5，replica默认是1，默认有10个shard，5个primary shard，5个replica shard&lt;/li>
&lt;li>primary shard不能和自己的replica shard放在同一个节点上（否则节点宕机，primary shard和副本都丢失，起不到容错的作用），但是可以和其他primary shard的replica shard放在同一个节点上&lt;/li>
&lt;/ol>
&lt;h3 id="单节点环境下创建索引分析">单节点环境下创建索引分析&lt;/h3>
&lt;pre tabindex="0">&lt;code>PUT /myindex
{
&amp;#34;settings&amp;#34; : {
&amp;#34;number_of_shards&amp;#34; : 3, # 3个朱分片
&amp;#34;number_of_replicas&amp;#34; : 1 # 1个负分片
}
}
&lt;/code>&lt;/pre>&lt;p>这个时候，只会将3个primary shard分配到仅有的一个node上去，另外3个replica shard是无法分配的（一个shard的副本replica，他们两个是不能在同一个节点的）。集群可以正常工作，但是一旦出现节点宕机，数据全部丢失，而且集群不可用，无法接收任何请求。&lt;/p>
&lt;h3 id="两个节点环境下创建索引分析">两个节点环境下创建索引分析&lt;/h3>
&lt;p>将3个primary shard分配到一个node上去，另外3个replica shard分配到另一个节点上&lt;/p>
&lt;p>primary shard 和replica shard 保持同步&lt;/p>
&lt;p>primary shard 和replica shard 都可以处理客户端的读请求&lt;/p>
&lt;h3 id="水平扩容的过程">水平扩容的过程&lt;/h3>
&lt;ol>
&lt;li>扩容后primary shard和replica shard会自动的负载均衡&lt;/li>
&lt;li>扩容后每个节点上的shard会减少，那么分配给每个shard的CPU，内存，IO资源会更多，性能提高&lt;/li>
&lt;li>扩容的极限，如果有6个shard，扩容的极限就是6个节点，每个节点上一个shard，如果想超出扩容的极限，比如说扩容到9个节点，那么可以增加replica shard的个数&lt;/li>
&lt;li>6个shard，3个节点，最多能承受几个节点所在的服务器宕机？(容错性)任何一台服务器宕机都会丢失部分数据&lt;/li>
&lt;/ol>
&lt;p>为了提高容错性，增加shard的个数：9个shard，(3个primary shard，6个replicashard)，这样就能容忍最多两台服务器宕机了&lt;/p>
&lt;p>总结：扩容是为了提高系统的吞吐量，同时也要考虑容错性，也就是让尽可能多的服务器宕机还能保证数据不丢失&lt;/p>
&lt;h3 id="elasticsearch的容错机制">ElasticSearch的容错机制&lt;/h3>
&lt;p>以9个shard，3个节点为例：&lt;/p>
&lt;p>1.如果master node 宕机，此时不是所有的primary shard都是Active status，所以此时的集群状态是red。&lt;/p>
&lt;p>容错处理的第一步:是选举一台服务器作为master容错处理的第二步:新选举出的master会把挂掉的primary shard的某个replica shard 提升为primary shard,此时集群的状态为yellow，因为少了一个replica shard，并不是所有的replica shard都是active status&lt;/p>
&lt;p>容错处理的第三步：重启故障机，新master会把所有的副本都复制一份到该节点上，（同步一下宕机后发生的修改），此时集群的状态为green，因为所有的primary shard和replica shard都是Active status&lt;/p>
&lt;h3 id="文档的核心元数据">文档的核心元数据&lt;/h3>
&lt;ol>
&lt;li>&lt;code>_index&lt;/code>:&lt;/li>
&lt;/ol>
&lt;p>说明了一个文档存储在哪个索引中&lt;/p>
&lt;p>同一个索引下存放的是相似的文档(文档的field多数是相同的)&lt;/p>
&lt;p>索引名必须是小写的，不能以下划线开头，不能包括逗号&lt;/p>
&lt;ol>
&lt;li>&lt;code>_type&lt;/code>:&lt;/li>
&lt;/ol>
&lt;p>表示文档属于索引中的哪个类型&lt;/p>
&lt;p>一个索引下只能有一个type&lt;/p>
&lt;p>类型名可以是大写也可以是小写的，不能以下划线开头，不能包括逗号&lt;/p>
&lt;ol>
&lt;li>&lt;code>_id&lt;/code>:&lt;/li>
&lt;/ol>
&lt;p>文档的唯一标识，和索引，类型组合在一起唯一标识了一个文档&lt;/p>
&lt;p>可以手动指定值，也可以由es来生成这个值&lt;/p>
&lt;h3 id="文档id生成方式">文档id生成方式&lt;/h3>
&lt;p>1.手动指定&lt;/p>
&lt;pre tabindex="0">&lt;code>put /index/type/66
&lt;/code>&lt;/pre>&lt;p>通常是把其它系统的已有数据导入到es时&lt;/p>
&lt;p>2.由es生成id值&lt;/p>
&lt;pre tabindex="0">&lt;code>post /index/type
&lt;/code>&lt;/pre>&lt;p>es生成的id长度为20个字符，使用的是base64编码，URL安全，使用的是GUID算法，分布式下并发生成id值时不会冲突&lt;/p>
&lt;h3 id="_source元数据分析">_source元数据分析&lt;/h3>
&lt;p>其实就是我们在添加文档时request body中的内容&lt;/p>
&lt;p>指定返回的结果中含有哪些字段：&lt;/p>
&lt;p>get /index/type/1?_source=name&lt;/p>
&lt;h3 id="改变文档内容原理解析">改变文档内容原理解析&lt;/h3>
&lt;p>替换方式(全部替换)：&lt;/p>
&lt;pre tabindex="0">&lt;code>PUT /lib/user/4
{
&amp;#34;first_name&amp;#34; : &amp;#34;Jane&amp;#34;,
&amp;#34;last_name&amp;#34; : &amp;#34;Lucy&amp;#34;,
&amp;#34;age&amp;#34; : 24,
&amp;#34;about&amp;#34; : &amp;#34;I like to collect rock albums&amp;#34;,
&amp;#34;interests&amp;#34;: [ &amp;#34;music&amp;#34; ]
}
&lt;/code>&lt;/pre>&lt;p>修改方式(部分修改)：&lt;/p>
&lt;pre tabindex="0">&lt;code>POST /lib/user/2/_update
{
&amp;#34;doc&amp;#34;:{
&amp;#34;age&amp;#34;:26
}
}
&lt;/code>&lt;/pre>&lt;p>删除文档:&lt;/p>
&lt;pre tabindex="0">&lt;code>delete /lib
&lt;/code>&lt;/pre>&lt;p>以上3个操作文档的方式,都是把已有的document标记为deleted，随着数据量的增加，es会选择合适的时间删除掉&lt;/p>
&lt;h3 id="基于groovy脚本执行partial-update">基于groovy脚本执行partial update&lt;/h3>
&lt;p>es有内置的脚本支持，可以基于groovy脚本实现复杂的操作&lt;/p>
&lt;pre tabindex="0">&lt;code>1.修改年龄
POST /lib/user/4/_update
{
&amp;#34;script&amp;#34;: &amp;#34;ctx._source.age+=1&amp;#34;
}
2.修改名字
POST /lib/user/4/_update
{
&amp;#34;script&amp;#34;: &amp;#34;ctx._source.last_name+=&amp;#39;hehe&amp;#39;&amp;#34;
}
3.添加爱好
POST /lib/user/4/_update
{
&amp;#34;script&amp;#34;: {
&amp;#34;source&amp;#34;: &amp;#34;ctx._source.interests.add(params.tag)&amp;#34;,
&amp;#34;params&amp;#34;: {
&amp;#34;tag&amp;#34;:&amp;#34;picture&amp;#34;
}
}
}
4.删除爱好
POST /lib/user/4/_update
{
&amp;#34;script&amp;#34;: {
&amp;#34;source&amp;#34;: &amp;#34;ctx._source.interests.remove(ctx._source.interests.indexOf(params.tag))&amp;#34;,
&amp;#34;params&amp;#34;: {
&amp;#34;tag&amp;#34;:&amp;#34;picture&amp;#34;
}
}
}
5.删除文档
POST /lib/user/4/_update
{
&amp;#34;script&amp;#34;: {
&amp;#34;source&amp;#34;: &amp;#34;ctx.op=ctx._source.age==params.count?&amp;#39;delete&amp;#39;:&amp;#39;none&amp;#39;&amp;#34;,
&amp;#34;params&amp;#34;: {
&amp;#34;count&amp;#34;:29
}
}
}
6.upsert
POST /lib/user/4/_update
{
&amp;#34;script&amp;#34;: &amp;#34;ctx._source.age += 1&amp;#34;,
&amp;#34;upsert&amp;#34;: {
&amp;#34;first_name&amp;#34; : &amp;#34;Jane&amp;#34;,
&amp;#34;last_name&amp;#34; : &amp;#34;Lucy&amp;#34;,
&amp;#34;age&amp;#34; : 20,
&amp;#34;about&amp;#34; : &amp;#34;I like to collect rock albums&amp;#34;,
&amp;#34;interests&amp;#34;: [ &amp;#34;music&amp;#34; ]
}
}
&lt;/code>&lt;/pre>&lt;h3 id="partial-update-处理并发冲突">partial update 处理并发冲突&lt;/h3>
&lt;p>使用的是乐观锁:_version&lt;/p>
&lt;p>retry_on_conflict:&lt;/p>
&lt;pre tabindex="0">&lt;code>POST /lib/user/4/_update?retry_on_conflict=3
&lt;/code>&lt;/pre>&lt;p>重新获取文档数据和版本信息进行更新，不断的操作，最多操作的次数就是retry_on_conflict的值&lt;/p>
&lt;h3 id="文档数据路由原理解析">文档数据路由原理解析&lt;/h3>
&lt;p>1.文档路由到分片上：&lt;/p>
&lt;p>一个索引由多个分片构成，当添加(删除，修改)一个文档时，es就需要决定这个文档存储在哪个分片上，这个过程就称为数据路由(routing)&lt;/p>
&lt;p>2.路由算法：&lt;/p>
&lt;pre tabindex="0">&lt;code> shard=hash(routing) % number_of_pirmary_shards
&lt;/code>&lt;/pre>&lt;p>示例：一个索引，3个primary shard&lt;/p>
&lt;p>(1)每次增删改查时，都有一个routing值，默认是文档的_id的值&lt;/p>
&lt;p>(2)对这个routing值使用哈希函数进行计算&lt;/p>
&lt;p>(3)计算出的值再和主分片个数取余数&lt;/p>
&lt;p>余数肯定在0&amp;mdash;（number_of_pirmary_shards-1）之间，文档就在对应的shard上&lt;/p>
&lt;p>routing值默认是文档的_id的值，也可以手动指定一个值，手动指定对于负载均衡以及提高批量读取的性能都有帮助&lt;/p>
&lt;p>3.primary shard个数一旦确定就不能修改了&lt;/p>
&lt;h3 id="文档增删改内部原理">文档增删改内部原理&lt;/h3>
&lt;p>1:发送增删改请求时，可以选择任意一个节点，该节点就成了协调节点(coordinating node)&lt;/p>
&lt;p>2.协调节点使用路由算法进行路由，然后将请求转到primary shard所在节点，该节点处理请求，并把数据同步到它的replica shard&lt;/p>
&lt;p>3.协调节点对客户端做出响应&lt;/p>
&lt;h3 id="写一致性原理和quorum机制">写一致性原理和quorum机制&lt;/h3>
&lt;ol>
&lt;li>任何一个增删改操作都可以跟上一个参数:``consistency`&lt;/li>
&lt;/ol>
&lt;p>可以给该参数指定的值：&lt;/p>
&lt;pre tabindex="0">&lt;code>one: (primary shard)只要有一个primary shard是活跃的就可以执行
all: (all shard)所有的primary shard和replica shard都是活跃的才能执行
quorum: (default) 默认值，大部分shard是活跃的才能执行 （例如共有6个shard，至少有3个shard是活跃的才能执行写操作）
&lt;/code>&lt;/pre>&lt;ol>
&lt;li>quorum机制：多数shard都是可用的，&lt;/li>
&lt;/ol>
&lt;p>int((primary+number_of_replica)/2)+1&lt;/p>
&lt;p>例如：3个primary shard，1个replica&lt;/p>
&lt;p>int((3+1)/2)+1=3&lt;/p>
&lt;p>至少3个shard是活跃的&lt;/p>
&lt;p>注意：可能出现shard不能分配齐全的情况&lt;/p>
&lt;p>比如：1个primary shard,1个replicaint((1+1)/2)+1=2但是如果只有一个节点，因为primary shard和replica shard不能在同一个节点上，所以仍然不能执行写操作&lt;/p>
&lt;p>再举例：1个primary shard,3个replica,2个节点&lt;/p>
&lt;p>int((1+3)/2)+1=3&lt;/p>
&lt;p>最后:当活跃的shard的个数没有达到要求时，es默认会等待一分钟，如果在等待的期间活跃的shard的个数没有增加，则显示timeout&lt;/p>
&lt;p>put /index/type/id?timeout=60s&lt;/p>
&lt;h3 id="文档查询内部原理">文档查询内部原理&lt;/h3>
&lt;p>第一步：查询请求发给任意一个节点，该节点就成了coordinating node，该节点使用路由算法算出文档所在的primary shard&lt;/p>
&lt;p>第二步：协调节点把请求转发给primary shard也可以转发给replica shard(使用轮询调度算法(Round-Robin Scheduling，把请求平均分配至primary shard 和replica shard)&lt;/p>
&lt;p>第三步：处理请求的节点把结果返回给协调节点，协调节点再返回给应用程序&lt;/p>
&lt;p>特殊情况：请求的文档还在建立索引的过程中，primary shard上存在，但replica shar上不存在，但是请求被转发到了replica shard上，这时就会提示找不到文档&lt;/p>
&lt;h3 id="bulk批量操作的json格式解析">bulk批量操作的json格式解析&lt;/h3>
&lt;p>bulk的格式：&lt;/p>
&lt;pre tabindex="0">&lt;code>{action:{metadata}}\n
{requstbody}\n
&lt;/code>&lt;/pre>&lt;p>为什么不使用如下格式：&lt;/p>
&lt;pre tabindex="0">&lt;code>[{
&amp;#34;action&amp;#34;: {
},
&amp;#34;data&amp;#34;: {
}
}]
&lt;/code>&lt;/pre>&lt;p>这种方式可读性好，但是内部处理就麻烦了：&lt;/p>
&lt;p>1.将json数组解析为JSONArray对象，在内存中就需要有一份json文本的拷贝，另外还有一个JSONArray对象。&lt;/p>
&lt;p>2.解析json数组里的每个json，对每个请求中的document进行路由&lt;/p>
&lt;p>3.为路由到同一个shard上的多个请求，创建一个请求数组&lt;/p>
&lt;p>4.将这个请求数组序列化&lt;/p>
&lt;p>5.将序列化后的请求数组发送到对应的节点上去&lt;/p>
&lt;p>耗费更多内存，增加java虚拟机开销&lt;/p>
&lt;p>1.不用将其转换为json对象，直接按照换行符切割json，内存中不需要json文本的拷贝&lt;/p>
&lt;p>2.对每两个一组的json，读取meta，进行document路由&lt;/p>
&lt;p>3.直接将对应的json发送到node上去&lt;/p>
&lt;h3 id="查询结果分析">查询结果分析&lt;/h3>
&lt;pre tabindex="0">&lt;code>{
# 查询耗费的时间，单位是毫秒
&amp;#34;took&amp;#34;: 419,
# 超时时间
&amp;#34;timed_out&amp;#34;: false,
# 共请求了多少个shard
&amp;#34;_shards&amp;#34;: {
# 查询出的文档总个数
&amp;#34;total&amp;#34;: 3,
&amp;#34;successful&amp;#34;: 3,
&amp;#34;skipped&amp;#34;: 0,
&amp;#34;failed&amp;#34;: 0
},
&amp;#34;hits&amp;#34;: {
&amp;#34;total&amp;#34;: 3,
# 本次查询中，相关度分数的最大值，文档和此次查询的匹配度越高，_score的值越大，排位越靠前
&amp;#34;max_score&amp;#34;: 0.6931472,
# 默认查询前10个文档
&amp;#34;hits&amp;#34;: [
{
&amp;#34;_index&amp;#34;: &amp;#34;lib3&amp;#34;,
&amp;#34;_type&amp;#34;: &amp;#34;user&amp;#34;,
&amp;#34;_id&amp;#34;: &amp;#34;3&amp;#34;,
&amp;#34;_score&amp;#34;: 0.6931472,
&amp;#34;_source&amp;#34;: {
&amp;#34;address&amp;#34;: &amp;#34;bei jing hai dian qu qing he zhen&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;lisi&amp;#34;
}
},
{
&amp;#34;_index&amp;#34;: &amp;#34;lib3&amp;#34;,
&amp;#34;_type&amp;#34;: &amp;#34;user&amp;#34;,
&amp;#34;_id&amp;#34;: &amp;#34;2&amp;#34;,
&amp;#34;_score&amp;#34;: 0.47000363,
&amp;#34;_source&amp;#34;: {
&amp;#34;address&amp;#34;: &amp;#34;bei jing hai dian qu qing he zhen&amp;#34;,
&amp;#34;name&amp;#34;: &amp;#34;zhaoming&amp;#34;
}
}
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code># 设置超时时间
GET /lib3/user/_search?timeout=10ms
{
&amp;#34;_source&amp;#34;: [&amp;#34;address&amp;#34;,&amp;#34;name&amp;#34;],
&amp;#34;query&amp;#34;: {
&amp;#34;match&amp;#34;: {
&amp;#34;interests&amp;#34;: &amp;#34;changge&amp;#34;
}
}
}
&lt;/code>&lt;/pre>&lt;h3 id="分页查询中的deep-paging问题">分页查询中的deep paging问题&lt;/h3>
&lt;pre tabindex="0">&lt;code>GET /lib3/user/_search
{
&amp;#34;from&amp;#34;:0,
&amp;#34;size&amp;#34;:2,
&amp;#34;query&amp;#34;:{
&amp;#34;terms&amp;#34;:{
&amp;#34;interests&amp;#34;: [&amp;#34;hejiu&amp;#34;,&amp;#34;changge&amp;#34;]
}
}
}
GET /_search?from=0&amp;amp;size=3
&lt;/code>&lt;/pre>&lt;p>deep paging:查询的很深，比如一个索引有三个primary shard，分别存储了6000条数据，我们要得到第100页的数据(每页10条)，类似这种情况就叫deep paging&lt;/p>
&lt;p>如何得到第100页的10条数据？&lt;/p>
&lt;p>在每个shard中搜索990到999这10条数据，然后用这30条数据排序，排序之后取10条数据就是要搜索的数据，这种做法是错的，因为3个shard中的数据的&lt;em>score分数不一样，可能这某一个shard中第一条数据的&lt;/em>score分数比另一个shard中第1000条都要高，所以在每个shard中搜索990到999这10条数据然后排序的做法是不正确的。&lt;/p>
&lt;p>正确的做法是每个shard把0到999条数据全部搜索出来（按排序顺序），然后全部返回给coordinate node，由coordinate node按_score分数排序后，取出第100页的10条数据，然后返回给客户端。&lt;/p>
&lt;p>deep paging性能问题&lt;/p>
&lt;p>1.耗费网络带宽，因为搜索过深的话，各shard要把数据传送给coordinate node，这个过程是有大量数据传递的，消耗网络，&lt;/p>
&lt;p>2.消耗内存，各shard要把数据传送给coordinate node，这个传递回来的数据，是被coordinate node保存在内存中的，这样会大量消耗内存。&lt;/p>
&lt;p>3.消耗cpu coordinate node要把传回来的数据进行排序，这个排序过程很消耗cpu.&lt;/p>
&lt;p>鉴于deep paging的性能问题，所以应尽量减少使用。&lt;/p>
&lt;h3 id="query-string查询及copy_to解析">query string查询及copy_to解析&lt;/h3>
&lt;p>GET /lib3/user/_search?q=interests:changge&lt;/p>
&lt;p>GET /lib3/user/_search?q=+interests:changge&lt;/p>
&lt;p>GET /lib3/user/_search?q=-interests:changge&lt;/p>
&lt;p>copy_to字段是把其它字段中的值，以空格为分隔符组成一个大字符串，然后被分析和索引，但是不存储，也就是说它能被查询，但不能被取回显示。&lt;/p>
&lt;p>注意:copy_to指向的字段字段类型要为：text&lt;/p>
&lt;p>当没有指定field时，就会从copy_to字段中查询GET /lib3/user/_search?q=changge&lt;/p>
&lt;h3 id="字符串排序问题">字符串排序问题&lt;/h3>
&lt;p>对一个字符串类型的字段进行排序通常不准确，因为已经被分词成多个词条了&lt;/p>
&lt;p>解决方式：对字段索引两次，一次索引分词（用于搜索），一次索引不分词(用于排序)&lt;/p>
&lt;pre tabindex="0">&lt;code># 设置mapping
PUT /lib3
{
&amp;#34;settings&amp;#34;:{
&amp;#34;number_of_shards&amp;#34; : 3,
&amp;#34;number_of_replicas&amp;#34; : 0
},
&amp;#34;mappings&amp;#34;:{
&amp;#34;user&amp;#34;:{
&amp;#34;properties&amp;#34;:{
&amp;#34;name&amp;#34;: {&amp;#34;type&amp;#34;:&amp;#34;text&amp;#34;},
&amp;#34;address&amp;#34;: {&amp;#34;type&amp;#34;:&amp;#34;text&amp;#34;},
&amp;#34;age&amp;#34;: {&amp;#34;type&amp;#34;:&amp;#34;integer&amp;#34;},
&amp;#34;birthday&amp;#34;: {&amp;#34;type&amp;#34;:&amp;#34;date&amp;#34;},
&amp;#34;interests&amp;#34;: {
&amp;#34;type&amp;#34;:&amp;#34;text&amp;#34;,
# 重点是在这下面
&amp;#34;fields&amp;#34;: {
&amp;#34;raw&amp;#34;:{
&amp;#34;type&amp;#34;: &amp;#34;keyword&amp;#34;
}
},
&amp;#34;fielddata&amp;#34;: true
}
}
}
}
}
GET /lib3/user/_search
{
&amp;#34;query&amp;#34;: {
&amp;#34;match_all&amp;#34;: {}
},
&amp;#34;sort&amp;#34;: [
{
&amp;#34;interests&amp;#34;: {
&amp;#34;order&amp;#34;: &amp;#34;desc&amp;#34;
}
}
]
}
GET /lib3/user/_search
{
&amp;#34;query&amp;#34;: {
&amp;#34;match_all&amp;#34;: {}
},
&amp;#34;sort&amp;#34;: [
{
&amp;#34;interests.raw&amp;#34;: {
&amp;#34;order&amp;#34;: &amp;#34;asc&amp;#34;
}
}
]
}
&lt;/code>&lt;/pre>&lt;h3 id="如何计算相关度分数">如何计算相关度分数&lt;/h3>
&lt;p>使用的是TF/IDF算法(Term Frequency&amp;amp;Inverse Document Frequency)&lt;/p>
&lt;p>1.Term Frequency:我们查询的文本中的词条在document本中出现了多少次，出现次数越多，相关度越高&lt;/p>
&lt;p>搜索内容： hello world&lt;/p>
&lt;p>Hello，I love china.&lt;/p>
&lt;p>Hello world,how are you!&lt;/p>
&lt;p>2.Inverse Document Frequency：我们查询的文本中的词条在索引的所有文档中出现了多少次，出现的次数越多，相关度越低&lt;/p>
&lt;p>搜索内容：hello world&lt;/p>
&lt;p>hello，what are you doing?&lt;/p>
&lt;p>I like the world.&lt;/p>
&lt;p>hello 在索引的所有文档中出现了500次，world出现了100次&lt;/p>
&lt;p>3.Field-length(字段长度归约) norm:field越长，相关度越低&lt;/p>
&lt;p>搜索内容：hello world&lt;/p>
&lt;p>{&amp;ldquo;title&amp;rdquo;:&amp;ldquo;hello,what&amp;rsquo;s your name?&amp;rdquo;,&amp;ldquo;content&amp;rdquo;:{&amp;ldquo;owieurowieuolsdjflk&amp;rdquo;}}&lt;/p>
&lt;p>{&amp;ldquo;title&amp;rdquo;:&amp;ldquo;hi,good morning&amp;rdquo;,&amp;ldquo;content&amp;rdquo;:{&amp;ldquo;lkjkljkj&amp;hellip;&amp;hellip;.world&amp;rdquo;}}&lt;/p>
&lt;p>查看分数是如何计算的：&lt;/p>
&lt;p>GET /lib3/user/_search?explain=true{&amp;ldquo;query&amp;rdquo;:{&amp;ldquo;match&amp;rdquo;:{&amp;ldquo;interests&amp;rdquo;: &amp;ldquo;duanlian,changge&amp;rdquo;}}}&lt;/p>
&lt;p>查看一个文档能否匹配上某个查询：&lt;/p>
&lt;p>GET /lib3/user/2/_explain{&amp;ldquo;query&amp;rdquo;:{&amp;ldquo;match&amp;rdquo;:{&amp;ldquo;interests&amp;rdquo;: &amp;ldquo;duanlian,changge&amp;rdquo;}}}&lt;/p>
&lt;h3 id="doc-values-解析">Doc Values 解析&lt;/h3>
&lt;p>DocValues其实是Lucene在构建倒排索引时，会额外建立一个有序的正排索引(基于document =&amp;gt; field value的映射列表),字符串不会创建正排索引&lt;/p>
&lt;pre tabindex="0">&lt;code>{&amp;#34;birthday&amp;#34;:&amp;#34;1985-11-11&amp;#34;,age:23}
{&amp;#34;birthday&amp;#34;:&amp;#34;1989-11-11&amp;#34;,age:29}
document age birthday
doc1 23 1985-11-11
doc2 29 1989-11-11
&lt;/code>&lt;/pre>&lt;p>存储在磁盘上，节省内存&lt;/p>
&lt;p>对排序，分组和一些聚合操作能够大大提升性能&lt;/p>
&lt;p>注意：默认对不分词的字段是开启的，对分词字段无效（需要把fielddata设置为true）&lt;/p>
&lt;pre tabindex="0">&lt;code>PUT /lib3
{
&amp;#34;settings&amp;#34;:{
&amp;#34;number_of_shards&amp;#34; : 3,
&amp;#34;number_of_replicas&amp;#34; : 0
},
&amp;#34;mappings&amp;#34;:{
&amp;#34;user&amp;#34;:{
&amp;#34;properties&amp;#34;:{
&amp;#34;name&amp;#34;: {&amp;#34;type&amp;#34;:&amp;#34;text&amp;#34;},
&amp;#34;address&amp;#34;: {&amp;#34;type&amp;#34;:&amp;#34;text&amp;#34;},
&amp;#34;age&amp;#34;: {
&amp;#34;type&amp;#34;:&amp;#34;integer&amp;#34;,
&amp;#34;doc_values&amp;#34;:false
},
&amp;#34;interests&amp;#34;: {&amp;#34;type&amp;#34;:&amp;#34;text&amp;#34;},
&amp;#34;birthday&amp;#34;: {&amp;#34;type&amp;#34;:&amp;#34;date&amp;#34;}
}
}
}
}
&lt;/code>&lt;/pre>&lt;h3 id="基于scroll技术滚动搜索大量数据">基于scroll技术滚动搜索大量数据&lt;/h3>
&lt;p>如果一次性要查出来比如10万条数据，那么性能会很差，此时一般会采取用scoll滚动查询，一批一批的查，直到所有数据都查询完为止。&lt;/p>
&lt;p>1.scoll搜索会在第一次搜索的时候，保存一个当时的视图快照，之后只会基于该旧的视图快照提供数据搜索，如果这个期间数据变更，是不会让用户看到的&lt;/p>
&lt;p>2.采用基于&lt;em>doc(不使用&lt;/em>score)进行排序的方式，性能较高&lt;/p>
&lt;p>3.每次发送scroll请求，我们还需要指定一个scoll参数，指定一个时间窗口，每次搜索请求只要在这个时间窗口内能完成就可以了&lt;/p>
&lt;pre tabindex="0">&lt;code>GET /lib3/user/_search?scroll=1m
{
&amp;#34;query&amp;#34;: {
&amp;#34;match_all&amp;#34;: {}
},
&amp;#34;sort&amp;#34;:[&amp;#34;_doc&amp;#34;],
# 一批查多少个
&amp;#34;size&amp;#34;:3
}
GET /_search/scroll
{
&amp;#34;scroll&amp;#34;: &amp;#34;1m&amp;#34;,
# 这个是上面那个查询里获取到的
&amp;#34;scroll_id&amp;#34;: &amp;#34;DnF1ZXJ5VGhlbkZldGNoAwAAAAAAAAAdFkEwRENOVTdnUUJPWVZUd1p2WE5hV2cAAAAAAAAAHhZBMERDTlU3Z1FCT1lWVHdadlhOYVdnAAAAAAAAAB8WQTBEQ05VN2dRQk9ZVlR3WnZYTmFXZw==&amp;#34;
}
&lt;/code>&lt;/pre>&lt;h3 id="dynamic-mapping策略">dynamic mapping策略&lt;/h3>
&lt;p>&lt;strong>dynamic&lt;/strong>:&lt;/p>
&lt;p>1.true:遇到陌生字段就 dynamic mapping&lt;/p>
&lt;p>2.false:遇到陌生字段就忽略&lt;/p>
&lt;p>3.strict:约到陌生字段就报错&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">PUT&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">/lib&lt;/span>&lt;span style="color:#ae81ff">8&lt;/span>{&lt;span style="color:#f92672">&amp;#34;settings&amp;#34;&lt;/span>:{&lt;span style="color:#f92672">&amp;#34;number_of_shards&amp;#34;&lt;/span> : &lt;span style="color:#ae81ff">3&lt;/span>,&lt;span style="color:#f92672">&amp;#34;number_of_replicas&amp;#34;&lt;/span> : &lt;span style="color:#ae81ff">0&lt;/span>},&lt;span style="color:#f92672">&amp;#34;mappings&amp;#34;&lt;/span>:{&lt;span style="color:#f92672">&amp;#34;user&amp;#34;&lt;/span>:{&lt;span style="color:#f92672">&amp;#34;dynamic&amp;#34;&lt;/span>:&lt;span style="color:#960050;background-color:#1e0010">strict&lt;/span>,&lt;span style="color:#f92672">&amp;#34;properties&amp;#34;&lt;/span>:{&lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>: {&lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;text&amp;#34;&lt;/span>},&lt;span style="color:#f92672">&amp;#34;address&amp;#34;&lt;/span>:{&lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;object&amp;#34;&lt;/span>,&lt;span style="color:#f92672">&amp;#34;dynamic&amp;#34;&lt;/span>:&lt;span style="color:#66d9ef">true&lt;/span>},}}}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>会报错&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">PUT&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">/lib&lt;/span>&lt;span style="color:#ae81ff">8&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">/user/&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>{&lt;span style="color:#f92672">&amp;#34;name&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;lisi&amp;#34;&lt;/span>,&lt;span style="color:#f92672">&amp;#34;age&amp;#34;&lt;/span>:&lt;span style="color:#ae81ff">20&lt;/span>,&lt;span style="color:#f92672">&amp;#34;address&amp;#34;&lt;/span>:{&lt;span style="color:#f92672">&amp;#34;province&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;beijing&amp;#34;&lt;/span>,&lt;span style="color:#f92672">&amp;#34;city&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;beijing&amp;#34;&lt;/span>}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>date_detection&lt;/strong>:默认会按照一定格式识别date，比如yyyy-MM-dd&lt;/p>
&lt;p>可以手动关闭某个type的date_detection&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">PUT&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">/lib&lt;/span>&lt;span style="color:#ae81ff">8&lt;/span>{&lt;span style="color:#f92672">&amp;#34;settings&amp;#34;&lt;/span>:{&lt;span style="color:#f92672">&amp;#34;number_of_shards&amp;#34;&lt;/span> : &lt;span style="color:#ae81ff">3&lt;/span>,&lt;span style="color:#f92672">&amp;#34;number_of_replicas&amp;#34;&lt;/span> : &lt;span style="color:#ae81ff">0&lt;/span>},&lt;span style="color:#f92672">&amp;#34;mappings&amp;#34;&lt;/span>:{&lt;span style="color:#f92672">&amp;#34;user&amp;#34;&lt;/span>:{&lt;span style="color:#f92672">&amp;#34;date_detection&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>,}}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>定制 dynamic mapping template(type)&lt;/strong>&lt;/p>
&lt;p>PUT /my_index{&amp;ldquo;mappings&amp;rdquo;: {&amp;ldquo;my_type&amp;rdquo;: {&amp;ldquo;dynamic_templates&amp;rdquo;: [{&amp;ldquo;en&amp;rdquo;: {&amp;ldquo;match&amp;rdquo;: &amp;ldquo;*_en&amp;rdquo;,&amp;ldquo;match_mapping_type&amp;rdquo;: &amp;ldquo;string&amp;rdquo;,&amp;ldquo;mapping&amp;rdquo;: {&amp;ldquo;type&amp;rdquo;: &amp;ldquo;text&amp;rdquo;,&amp;ldquo;analyzer&amp;rdquo;: &amp;ldquo;english&amp;rdquo;}}}]}}}#使用了模板&lt;/p>
&lt;p>PUT /my_index/my_type/3{&amp;ldquo;title_en&amp;rdquo;: &amp;ldquo;this is my dog&amp;rdquo;&lt;/p>
&lt;p>}#没有使用模板&lt;/p>
&lt;p>PUT /my_index/my_type/5{&amp;ldquo;title&amp;rdquo;: &amp;ldquo;this is my cat&amp;rdquo;}&lt;/p>
&lt;p>GET my_index/my_type/_search{&amp;ldquo;query&amp;rdquo;: {&amp;ldquo;match&amp;rdquo;: {&amp;ldquo;title&amp;rdquo;: &amp;ldquo;is&amp;rdquo;}}}&lt;/p>
&lt;h3 id="重建索引">重建索引&lt;/h3>
&lt;p>一个field的设置是不能修改的，如果要修改一个field，那么应该重新按照新的mapping，建立一个index，然后将数据批量查询出来，重新用bulk api写入到index中。&lt;/p>
&lt;p>批量查询的时候，建议采用scroll api，并且采用多线程并发的方式来reindex数据，每次scroll就查询指定日期的一段数据，交给一个线程即可。&lt;/p>
&lt;pre tabindex="0">&lt;code># 原始的数据
PUT /index1/type1/4
{
&amp;#34;content&amp;#34;:&amp;#34;1990-12-12&amp;#34;
}
#报错
PUT /index1/type1/4
{
&amp;#34;content&amp;#34;:&amp;#34;I am very happy.&amp;#34;
}
#修改content的类型为string类型,报错，不允许修改
PUT /index1/_mapping/type1
{
&amp;#34;properties&amp;#34;: {
&amp;#34;content&amp;#34;:{
&amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;
}
}
}
&lt;/code>&lt;/pre>&lt;p>创建一个新的索引，把index1索引中的数据查询出来导入到新的索引中,但是应用程序使用的是之前的索引，为了不用重启应用程序，给index1这个索引起个&lt;/p>
&lt;pre tabindex="0">&lt;code># 起别名
PUT /index1/_alias/index2
# 创建新的索引，把content的类型改为字符串
PUT /newindex
{
&amp;#34;mappings&amp;#34;: {
&amp;#34;type1&amp;#34;:{
&amp;#34;properties&amp;#34;: {
&amp;#34;content&amp;#34;:{
&amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;
}
}
}
}
}
# 使用scroll批量查询
GET /index1/type1/_search?scroll=1m
{
&amp;#34;query&amp;#34;: {
&amp;#34;match_all&amp;#34;: {}
},
&amp;#34;sort&amp;#34;: [&amp;#34;_doc&amp;#34;],
&amp;#34;size&amp;#34;: 2
}
#使用bulk批量写入新的索引
POST /_bulk
{&amp;#34;index&amp;#34;:{&amp;#34;_index&amp;#34;:&amp;#34;newindex&amp;#34;,&amp;#34;_type&amp;#34;:&amp;#34;type1&amp;#34;,&amp;#34;_id&amp;#34;:1}}
{&amp;#34;content&amp;#34;:&amp;#34;1982-12-12&amp;#34;}
#将别名index2和新的索引关联，应用程序不用重启
POST /_aliases
{
&amp;#34;actions&amp;#34;: [
{&amp;#34;remove&amp;#34;: {&amp;#34;index&amp;#34;:&amp;#34;index1&amp;#34;,&amp;#34;alias&amp;#34;:&amp;#34;index2&amp;#34;}},
{&amp;#34;add&amp;#34;: {&amp;#34;index&amp;#34;: &amp;#34;newindex&amp;#34;,&amp;#34;alias&amp;#34;: &amp;#34;index2&amp;#34;}}
]
}
GET index2/type1/_search
&lt;/code>&lt;/pre>&lt;h3 id="索引不可变的原因">索引不可变的原因&lt;/h3>
&lt;p>倒排索引包括：&lt;/p>
&lt;p>文档的列表，文档的数量，词条在每个文档中出现的次数，出现的位置，每个文档的长度，所有文档的平均长度&lt;/p>
&lt;p>索引不变的原因：&lt;/p>
&lt;p>不需要锁，提升了并发性能&lt;/p>
&lt;p>可以一直保存在缓存中（filter）&lt;/p>
&lt;p>节省cpu和io开销&lt;/p>
&lt;h1 id="先记着">先记着&lt;/h1>
&lt;p>用logstash去同步mysql的的增量,,需要两个字段,第一个是 id,主键,第二个是update_date, 用第二个字段去查询,默认用id去去重&lt;/p>
&lt;p>group by 的时候报错了&lt;/p>
&lt;p>es进行聚合操作时提示Fielddata is disabled on text fields by default&lt;/p>
&lt;p>&lt;a href="https://blog.csdn.net/u011403655/article/details/71107415/">https://blog.csdn.net/u011403655/article/details/71107415/&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code># 充值笔数
GET /shouye/rukuan/_search
{
&amp;#34;aggs&amp;#34;: {
&amp;#34;my_cre&amp;#34;: {
&amp;#34;terms&amp;#34;: {
&amp;#34;field&amp;#34;: &amp;#34;orderId&amp;#34;
}
}
}
}
GET /shouye/rukuan/_count
GET /shouye/_mapping
PUT shouye/_mapping/rukuan/
{
&amp;#34;properties&amp;#34;: {
&amp;#34;orderId&amp;#34;: {
&amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
&amp;#34;fielddata&amp;#34;: true
}
}
}
&lt;/code>&lt;/pre>&lt;h1 id="springboot整合elasticsearch">springboot整合Elasticsearch&lt;/h1>
&lt;pre tabindex="0">&lt;code>&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;
&amp;lt;project xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;
xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&amp;gt;
&amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;
&amp;lt;parent&amp;gt;
&amp;lt;groupId&amp;gt;com.lzkj&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;item2&amp;lt;/artifactId&amp;gt;
&amp;lt;version&amp;gt;0.0.1-SNAPSHOT&amp;lt;/version&amp;gt;
&amp;lt;/parent&amp;gt;
&amp;lt;groupId&amp;gt;com.es&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;es-server&amp;lt;/artifactId&amp;gt;
&amp;lt;version&amp;gt;0.0.1-SNAPSHOT&amp;lt;/version&amp;gt;
&amp;lt;name&amp;gt;es-server&amp;lt;/name&amp;gt;
&amp;lt;description&amp;gt;Demo project for Spring Boot&amp;lt;/description&amp;gt;
&amp;lt;properties&amp;gt;
&amp;lt;java.version&amp;gt;1.8&amp;lt;/java.version&amp;gt;
&amp;lt;/properties&amp;gt;
&amp;lt;dependencies&amp;gt;
&amp;lt;dependency&amp;gt;
&amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;spring-boot-starter-data-elasticsearch&amp;lt;/artifactId&amp;gt;
&amp;lt;/dependency&amp;gt;
&amp;lt;dependency&amp;gt;
&amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt;
&amp;lt;/dependency&amp;gt;
&amp;lt;/dependencies&amp;gt;
&amp;lt;build&amp;gt;
&amp;lt;plugins&amp;gt;
&amp;lt;plugin&amp;gt;
&amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;spring-boot-maven-plugin&amp;lt;/artifactId&amp;gt;
&amp;lt;/plugin&amp;gt;
&amp;lt;/plugins&amp;gt;
&amp;lt;/build&amp;gt;
&amp;lt;/project&amp;gt;
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>spring.elasticsearch.rest.uris=http://192.168.111.132:9200
&lt;/code>&lt;/pre></content></item><item><title>Excel</title><link>https://connorzhangyu.com/posts/excel/</link><pubDate>Sat, 19 Nov 2022 18:25:00 +0000</pubDate><guid>https://connorzhangyu.com/posts/excel/</guid><description>&lt;h1 id="行和列">行和列&lt;/h1>
&lt;h2 id="隐藏或显示行和列">隐藏或显示行和列&lt;/h2>
&lt;p>在电子表格中隐藏或取消隐藏列，以仅显示需要查看或打印的数据&lt;/p>
&lt;blockquote>
&lt;p>📌 不影响计算&lt;/p>&lt;/blockquote>
&lt;h3 id="隐藏列">隐藏列&lt;/h3>
&lt;ol>
&lt;li>选择一个或多个列，然后按 Ctrl 选择不相邻的其他列。&lt;/li>
&lt;li>右键单击选定的列，然后选择&lt;code>隐藏&lt;/code>。
📌 两列之间的双线表示隐藏了一个列。&lt;/li>
&lt;/ol>
&lt;p>✅ 参考:&lt;a href="https://support.microsoft.com/zh-cn/office/%E9%9A%90%E8%97%8F%E6%88%96%E6%98%BE%E7%A4%BA%E8%A1%8C%E6%88%96%E5%88%97-659c2cad-802e-44ee-a614-dde8443579f8">微软官方文档&lt;/a>&lt;/p>
&lt;h3 id="取消隐藏列">取消隐藏列&lt;/h3>
&lt;ol>
&lt;li>选择隐藏列的&lt;code>相邻左列和相邻右列&lt;/code>。&lt;/li>
&lt;li>右键单击选定的列，然后选择“&lt;strong>取消隐藏&lt;/strong>”。&lt;/li>
&lt;/ol>
&lt;p>或双击隐藏列所存在的两列之间的双线。&lt;/p>
&lt;h2 id="自定义列的格式">自定义列的格式&lt;/h2>
&lt;p>比如这里要设置列的格式是 年月日星期几&lt;/p>
&lt;p>默认的日期和时间是没有符合要求的
&lt;img src="https://image.runtimes.cc/202404051416398.png" alt="">&lt;/p>
&lt;p>自定义设置
&lt;img src="https://image.runtimes.cc/202404051416110.png" alt="">&lt;/p>
&lt;p>📌 这样设置之后,比如在单元格里值设置的是 2021-01-02
实际上显现的会是 2021年1月2日 星期几&lt;/p>
&lt;p>✅ 参考:&lt;a href="https://support.microsoft.com/zh-cn/office/%E6%8C%89%E6%83%B3%E8%A6%81%E7%9A%84%E6%96%B9%E5%BC%8F%E8%AE%BE%E7%BD%AE%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F-8e10019e-d5d8-47a1-ba95-db95123d273e">微软官方文档&lt;/a>&lt;/p></description><content>&lt;h1 id="行和列">行和列&lt;/h1>
&lt;h2 id="隐藏或显示行和列">隐藏或显示行和列&lt;/h2>
&lt;p>在电子表格中隐藏或取消隐藏列，以仅显示需要查看或打印的数据&lt;/p>
&lt;blockquote>
&lt;p>📌 不影响计算&lt;/p>&lt;/blockquote>
&lt;h3 id="隐藏列">隐藏列&lt;/h3>
&lt;ol>
&lt;li>选择一个或多个列，然后按 Ctrl 选择不相邻的其他列。&lt;/li>
&lt;li>右键单击选定的列，然后选择&lt;code>隐藏&lt;/code>。
📌 两列之间的双线表示隐藏了一个列。&lt;/li>
&lt;/ol>
&lt;p>✅ 参考:&lt;a href="https://support.microsoft.com/zh-cn/office/%E9%9A%90%E8%97%8F%E6%88%96%E6%98%BE%E7%A4%BA%E8%A1%8C%E6%88%96%E5%88%97-659c2cad-802e-44ee-a614-dde8443579f8">微软官方文档&lt;/a>&lt;/p>
&lt;h3 id="取消隐藏列">取消隐藏列&lt;/h3>
&lt;ol>
&lt;li>选择隐藏列的&lt;code>相邻左列和相邻右列&lt;/code>。&lt;/li>
&lt;li>右键单击选定的列，然后选择“&lt;strong>取消隐藏&lt;/strong>”。&lt;/li>
&lt;/ol>
&lt;p>或双击隐藏列所存在的两列之间的双线。&lt;/p>
&lt;h2 id="自定义列的格式">自定义列的格式&lt;/h2>
&lt;p>比如这里要设置列的格式是 年月日星期几&lt;/p>
&lt;p>默认的日期和时间是没有符合要求的
&lt;img src="https://image.runtimes.cc/202404051416398.png" alt="">&lt;/p>
&lt;p>自定义设置
&lt;img src="https://image.runtimes.cc/202404051416110.png" alt="">&lt;/p>
&lt;p>📌 这样设置之后,比如在单元格里值设置的是 2021-01-02
实际上显现的会是 2021年1月2日 星期几&lt;/p>
&lt;p>✅ 参考:&lt;a href="https://support.microsoft.com/zh-cn/office/%E6%8C%89%E6%83%B3%E8%A6%81%E7%9A%84%E6%96%B9%E5%BC%8F%E8%AE%BE%E7%BD%AE%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F-8e10019e-d5d8-47a1-ba95-db95123d273e">微软官方文档&lt;/a>&lt;/p></content></item><item><title>IDEA</title><link>https://connorzhangyu.com/posts/idea/</link><pubDate>Sat, 19 Nov 2022 18:25:00 +0000</pubDate><guid>https://connorzhangyu.com/posts/idea/</guid><description>&lt;h1 id="教程">教程&lt;/h1>
&lt;h2 id="idea查看方法被调用">IDEA查看方法被调用&lt;/h2>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051423853.png" alt="">&lt;/p>
&lt;h2 id="修改光标所在行背景颜色">修改光标所在行背景颜色&lt;/h2>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051423630.png" alt="">&lt;/p>
&lt;h2 id="断点判断条件">断点判断条件&lt;/h2>
&lt;p>在断点上点右键,正常的写判断代码就行&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051423731.png" alt="image-20230803174451532">&lt;/p>
&lt;h2 id="插件">插件&lt;/h2>
&lt;h3 id="rabinbow-brackets">Rabinbow Brackets&lt;/h3>
&lt;p>作者:Zhihao Zhang&lt;/p>
&lt;p>使用方法&lt;/p>
&lt;p>&lt;code>Command&lt;/code>+右键,高亮选中部分&lt;/p>
&lt;p>&lt;code>Alt&lt;/code>+右键,高亮选中部分,其余的代码变暗&lt;/p>
&lt;h3 id="commitmessage">CommitMessage&lt;/h3>
&lt;p>作者:郭翰林&lt;/p>
&lt;p>使用方法,提交的时候,点击✈️的图标&lt;/p>
&lt;h3 id="codeium">Codeium&lt;/h3>
&lt;p>作者:Codeium&lt;/p>
&lt;p>写代码的时候会有自动提示,按tab确定使用AI生成的代码&lt;/p>
&lt;h3 id="key-promoter-x">Key Promoter X&lt;/h3>
&lt;h3 id="translation">Translation&lt;/h3>
&lt;p>作者:Yii.Guxing&lt;/p>
&lt;p>选中要翻译的内容,右键选择翻译&lt;/p></description><content>&lt;h1 id="教程">教程&lt;/h1>
&lt;h2 id="idea查看方法被调用">IDEA查看方法被调用&lt;/h2>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051423853.png" alt="">&lt;/p>
&lt;h2 id="修改光标所在行背景颜色">修改光标所在行背景颜色&lt;/h2>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051423630.png" alt="">&lt;/p>
&lt;h2 id="断点判断条件">断点判断条件&lt;/h2>
&lt;p>在断点上点右键,正常的写判断代码就行&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051423731.png" alt="image-20230803174451532">&lt;/p>
&lt;h2 id="插件">插件&lt;/h2>
&lt;h3 id="rabinbow-brackets">Rabinbow Brackets&lt;/h3>
&lt;p>作者:Zhihao Zhang&lt;/p>
&lt;p>使用方法&lt;/p>
&lt;p>&lt;code>Command&lt;/code>+右键,高亮选中部分&lt;/p>
&lt;p>&lt;code>Alt&lt;/code>+右键,高亮选中部分,其余的代码变暗&lt;/p>
&lt;h3 id="commitmessage">CommitMessage&lt;/h3>
&lt;p>作者:郭翰林&lt;/p>
&lt;p>使用方法,提交的时候,点击✈️的图标&lt;/p>
&lt;h3 id="codeium">Codeium&lt;/h3>
&lt;p>作者:Codeium&lt;/p>
&lt;p>写代码的时候会有自动提示,按tab确定使用AI生成的代码&lt;/p>
&lt;h3 id="key-promoter-x">Key Promoter X&lt;/h3>
&lt;h3 id="translation">Translation&lt;/h3>
&lt;p>作者:Yii.Guxing&lt;/p>
&lt;p>选中要翻译的内容,右键选择翻译&lt;/p></content></item><item><title>Jenkins</title><link>https://connorzhangyu.com/posts/jenkins/</link><pubDate>Sat, 19 Nov 2022 18:25:00 +0000</pubDate><guid>https://connorzhangyu.com/posts/jenkins/</guid><description>&lt;h1 id="root用户权限启动jenkins">Root用户权限启动Jenkins&lt;/h1>
&lt;p>适用于Ubuntu环境下通过&lt;code>apt-get install -y jenkins&lt;/code>命令在线安装的Jenkins&lt;/p>
&lt;p>1.修改配置文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>vim /etc/default/jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 将下面两个参数修改为root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 修改前&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JENKINS_USER&lt;span style="color:#f92672">=&lt;/span>$NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JENKINS_GROUP&lt;span style="color:#f92672">=&lt;/span>$NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 修改后&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JENKINS_USER&lt;span style="color:#f92672">=&lt;/span>root
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JENKINS_GROUP&lt;span style="color:#f92672">=&lt;/span>root
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>2.更改目录权限&lt;/p>
&lt;p>不知道这步有没有起作用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd /var/lib/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chown -R root:root ./jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 重启&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl restart jenkins.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="jenkins使用教程">Jenkins使用教程&lt;/h1>
&lt;h2 id="配置jdk">配置JDK&lt;/h2>
&lt;p>Manage Jenkins &amp;ndash;&amp;gt; Global Tool Configuration&lt;/p>
&lt;ol>
&lt;li>自动安装&lt;/li>
&lt;li>手动安装要注意,J&lt;code>AVA_HOME&lt;/code>的输入框下面，不要有警告或者错误信息，否则就是路径不正确,取消勾选自动安装&lt;/li>
&lt;/ol>
&lt;h2 id="配置maven">配置Maven&lt;/h2>
&lt;ol>
&lt;li>安装Maven Integration 插件&lt;/li>
&lt;li>通常自动安装maven就行了,如果手动安装,&lt;code>MAVEN_HOME&lt;/code> 输入框下面，不要有警告或者错误信息，否则就是路径不正确&lt;/li>
&lt;/ol>
&lt;h2 id="获取当前项目名称">获取当前项目名称&lt;/h2>
&lt;p>在脚本中输入 &lt;code>$JOB_NAME&lt;/code>就能获取到了&lt;/p>
&lt;h2 id="卸载jenkins">卸载jenkins&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>//服务
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get remove jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>//安装包，注意这里如果不是ubuntu那就yum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get remove --auto-remove jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>//配置和数据
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get purge jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get purge --auto-remove jenkins
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="升级jenkins">升级jenkins&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 适用于ubuntu安装的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get upgrade jenkins
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="同时构建任务的个数">同时构建任务的个数&lt;/h2>
&lt;p>系统管理&amp;ndash;&amp;gt;系统设置&amp;ndash;&amp;gt;执行者数量&lt;/p></description><content>&lt;h1 id="root用户权限启动jenkins">Root用户权限启动Jenkins&lt;/h1>
&lt;p>适用于Ubuntu环境下通过&lt;code>apt-get install -y jenkins&lt;/code>命令在线安装的Jenkins&lt;/p>
&lt;p>1.修改配置文件&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>vim /etc/default/jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 将下面两个参数修改为root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 修改前&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JENKINS_USER&lt;span style="color:#f92672">=&lt;/span>$NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JENKINS_GROUP&lt;span style="color:#f92672">=&lt;/span>$NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 修改后&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JENKINS_USER&lt;span style="color:#f92672">=&lt;/span>root
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>JENKINS_GROUP&lt;span style="color:#f92672">=&lt;/span>root
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>2.更改目录权限&lt;/p>
&lt;p>不知道这步有没有起作用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd /var/lib/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chown -R root:root ./jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 重启&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl restart jenkins.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="jenkins使用教程">Jenkins使用教程&lt;/h1>
&lt;h2 id="配置jdk">配置JDK&lt;/h2>
&lt;p>Manage Jenkins &amp;ndash;&amp;gt; Global Tool Configuration&lt;/p>
&lt;ol>
&lt;li>自动安装&lt;/li>
&lt;li>手动安装要注意,J&lt;code>AVA_HOME&lt;/code>的输入框下面，不要有警告或者错误信息，否则就是路径不正确,取消勾选自动安装&lt;/li>
&lt;/ol>
&lt;h2 id="配置maven">配置Maven&lt;/h2>
&lt;ol>
&lt;li>安装Maven Integration 插件&lt;/li>
&lt;li>通常自动安装maven就行了,如果手动安装,&lt;code>MAVEN_HOME&lt;/code> 输入框下面，不要有警告或者错误信息，否则就是路径不正确&lt;/li>
&lt;/ol>
&lt;h2 id="获取当前项目名称">获取当前项目名称&lt;/h2>
&lt;p>在脚本中输入 &lt;code>$JOB_NAME&lt;/code>就能获取到了&lt;/p>
&lt;h2 id="卸载jenkins">卸载jenkins&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>//服务
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get remove jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>//安装包，注意这里如果不是ubuntu那就yum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get remove --auto-remove jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>//配置和数据
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get purge jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get purge --auto-remove jenkins
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="升级jenkins">升级jenkins&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 适用于ubuntu安装的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get upgrade jenkins
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="同时构建任务的个数">同时构建任务的个数&lt;/h2>
&lt;p>系统管理&amp;ndash;&amp;gt;系统设置&amp;ndash;&amp;gt;执行者数量&lt;/p>
&lt;h2 id="构建成功才继续发包">构建成功才继续发包&lt;/h2>
&lt;p>只是个不大不小的功能,很容易忽略了,在 任务的配置&amp;ndash;&amp;gt;Post Steps &amp;ndash;&amp;gt; Run only if build succeeds&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202405280938281.png" alt="image-20240528093819570">&lt;/p>
&lt;h2 id="修改时区">修改时区&lt;/h2>
&lt;p>&lt;img src="https://image.runtimes.cc/202408091744504.png" alt="image-20240809174451156">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202408091746778.png" alt="image-20240809174606994">&lt;/p>
&lt;h2 id="webhook">WebHook&lt;/h2>
&lt;p>使用的场景,Github Push代码之后,自动构建&lt;/p>
&lt;p>第一步.jenkins的配置&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202408091740783.png" alt="image-20240809174000506">&lt;/p>
&lt;p>第二步.Github的配置&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202408091741395.png" alt="image-20240809174111087">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202408091742218.png" alt="image-20240809174235801">&lt;/p>
&lt;p>第三步.返回jenkins设置&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202408091743820.png" alt="image-20240809174324197">&lt;/p>
&lt;p>第四步.push代码,查看有没有正常构建&lt;/p>
&lt;h1 id="jenkinsdocker部署maven聚合工程">Jenkins+Docker部署Maven聚合工程&lt;/h1>
&lt;p>安装Jenkins&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>docker run &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -v /var/run/docker.sock:/var/run/docker.sock &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -v &lt;span style="color:#66d9ef">$(&lt;/span>which docker&lt;span style="color:#66d9ef">)&lt;/span>:/usr/bin/docker &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -v /root/jenkins:/var/jenkins_home &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --name jenkins &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --user&lt;span style="color:#f92672">=&lt;/span>root &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -p 8080:8080 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -p 50000:50000 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -d &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -u &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> jenkins/jenkins:jdk11
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>第2行是将宿主机的/var/run/docker.sock映射到容器中，这样在容器中运行的docker命令，就会在宿主机上来执行。&lt;/li>
&lt;li>第3行是将宿主机的docker程序映射进容器中，这样本身没有安装docker的jenkins容器就可以执行docker命令了（事实上容器里是没有运行docker的服务的，我们只是用这个映射进容器的docker来作为客户端发送docker的指令到/var/run/docker.sock而已，而/var/run/docker.sock已经被链接到宿主机了)&lt;/li>
&lt;/ul>
&lt;p>Dockerfile&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">FROM&lt;/span>&lt;span style="color:#e6db74"> openjdk:8-jdk-alpine&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">VOLUME&lt;/span>&lt;span style="color:#e6db74"> /tmp&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">ADD&lt;/span> admin-server-0.0.1-SNAPSHOT.jar app.jar&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">ENTRYPOINT&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;java&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;-Djava.security.egd=file:/dev/./urandom&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;-jar&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;/app.jar&amp;#34;&lt;/span>]&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Maven的pom.xml配置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;groupId&amp;gt;&lt;/span>com.spotify&lt;span style="color:#f92672">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;artifactId&amp;gt;&lt;/span>docker-maven-plugin&lt;span style="color:#f92672">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;version&amp;gt;&lt;/span>0.4.13&lt;span style="color:#f92672">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;imageName&amp;gt;&lt;/span>springboot/${project.artifactId}&lt;span style="color:#f92672">&amp;lt;/imageName&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;dockerDirectory&amp;gt;&lt;/span>src/main/docker&lt;span style="color:#f92672">&amp;lt;/dockerDirectory&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;resources&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;resource&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;targetPath&amp;gt;&lt;/span>/&lt;span style="color:#f92672">&amp;lt;/targetPath&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;directory&amp;gt;&lt;/span>${project.build.directory}&lt;span style="color:#f92672">&amp;lt;/directory&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;include&amp;gt;&lt;/span>${project.build.finalName}.jar&lt;span style="color:#f92672">&amp;lt;/include&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/resource&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/resources&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;/configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;/plugin&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>imageName&lt;/code>打的镜像名称,这里的镜像名称是:springboot/admin-server&lt;/li>
&lt;li>&lt;code>dockerDirectory&lt;/code>指定docker文件夹的位置&lt;/li>
&lt;/ul>
&lt;p>Job配置&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051423837.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051424832.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051424206.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051424089.png" alt="">&lt;/p>
&lt;p>• &lt;code>-e “SPRING_PROFILES_ACTIVE=prerelease”&lt;/code> ,可以看成是启动jar的时候的,java -jar admin-server.jar –spring.profiles.active=prerelease ,指定运行环境&lt;/p>
&lt;h1 id="脚本">脚本&lt;/h1>
&lt;h2 id="检测容器的运行">检测容器的运行&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># &amp;#34;=&amp;#34; 两边不能有空格&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>count&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>docker ps -a | grep sabong-admin-controlfront |awk &lt;span style="color:#e6db74">&amp;#39;{print $1}&amp;#39;&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> -n &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$count&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> docker stop $count
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> docker rm $count
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;停止并删除容器&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker run &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -itd &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -p 9011:9011 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -e “SPRING_PROFILES_ACTIVE&lt;span style="color:#f92672">=&lt;/span>prerelease” &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --name admin-server &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> springboot/admin-server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="推送镜像到harbor">推送镜像到harbor&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 打标签&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># sabong/sabong-controller-manager:latest 已经build成功了的镜像名字&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 10.0.0.7/library/sabong/sabong-controller-manager:latest 新的镜像名字&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker tag sabong/sabong-controller-manager:latest 10.0.0.7/library/sabong/sabong-controller-manager:latest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 登录私有仓库&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker login -u admin -p &lt;span style="color:#ae81ff">123456&lt;/span> 10.0.0.7
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 推送镜像&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker push 10.0.0.7/library/sabong/sabong-controller-manager:latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="vue打包成镜像">Vue打包成镜像&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm install
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm run build:prod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># build&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># sabong/sabong-admin-controlfront 随便起的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker build -t sabong/sabong-admin-controlfront --no-cache .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 打标签&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker tag sabong/sabong-admin-controlfront:latest 10.0.0.7/library/sabong/sabong-admin-controlfront:latest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 登录私有仓库&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker login -u admin -p &lt;span style="color:#ae81ff">123456&lt;/span> 10.0.0.7
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 推送镜像&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker push 10.0.0.7/library/sabong/sabong-admin-controlfront:latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Dockerfile&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-docker" data-lang="docker">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">From&lt;/span>&lt;span style="color:#e6db74"> nginx&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#66d9ef">COPY&lt;/span> dist/ /usr/share/nginx/html/&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>⛔ 这里用的是nginx容器里默认的nginx配置文件,所以这里没有使用自定义的nginx配置&lt;/p>
&lt;h2 id="springboot项目脚本">SpringBoot项目脚本&lt;/h2>
&lt;p>适用于ssh传输文件,启动脚本&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 具体不知道是干啥的,加上这个,这个看情况加&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># BUILD_ID=DONTKILLME&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>APP_NAME&lt;span style="color:#f92672">=&lt;/span>xxx.jar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 杀进程&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pid&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">`&lt;/span>ps -ef|grep $APP_NAME|grep -v grep|awk &lt;span style="color:#e6db74">&amp;#39;{print $2}&amp;#39;&lt;/span> &lt;span style="color:#e6db74">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[&lt;/span> -n &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>pid&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kill -9 $pid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#39;准备启动jar包&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nohup java -jar /root/$APP_NAME --spring.profiles.active&lt;span style="color:#f92672">=&lt;/span>prod &amp;amp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sleep &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#39;启动成功&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="maven多模块打包">Maven多模块打包&lt;/h1>
&lt;p>指定打包项目名&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>clean package -pl 模块名 -am
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>配置SSH server&lt;/p>
&lt;p>在系统管理&amp;ndash;&amp;gt;System&amp;mdash;&amp;gt;SSH Server配置&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051424215.png" alt="image-20240319175903145">&lt;/p>
&lt;p>配置SSH Over FTP publish&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051424247.png" alt="image-20240319184601103">&lt;/p>
&lt;p>这里&lt;code>Verbose output in console&lt;/code>的作用是把远程的步骤,和远程的shell执行的结果也打印出来&lt;/p>
&lt;p>这里&lt;code>Exec in pty&lt;/code> 要勾选,不然项目启动完成了,也不会停止SSH链接&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051424187.png" alt="image-20240319175519104">&lt;/p>
&lt;h1 id="前端打包">前端打包&lt;/h1>
&lt;p>选择已经配置的node版本&lt;/p>
&lt;p>&lt;strong>构建环境&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051424037.png" alt="image-20240319183930032">&lt;/p>
&lt;p>&lt;strong>Build Steps&lt;/strong>&lt;/p>
&lt;p>选择执行shell&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>npm install
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm run build:prod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pwd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 删除上一次构建打的包,然后dist文件夹打包成dist.zip文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm -f dist.zip &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> zip -r dist.zip dist
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://image.runtimes.cc/202404051424098.png" alt="image-20240319184412134">&lt;/p>
&lt;h1 id="各种问题报错">各种问题报错&lt;/h1>
&lt;p>1.HTTP ERROR 403 No valid crumb was included in the request&lt;/p>
&lt;p>解决办法:网上都是要去关闭CSRF，很明确的是我这里的全局安全配置里面根本就没有选项，我的版本是&lt;code>jenkins 2.293&lt;/code>。所以百度出来的都是一堆垃圾，无奈自己解决，尝试一番之后，找到了方法，如&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051425841.png" alt="image-20231201155420918">&lt;/p>
&lt;p>下图所示：还是在全局安全配置里面，勾选上这个参数即可。&lt;/p>
&lt;hr>
&lt;p>2.Jenkins配置中安装插件时提示&lt;code>No such plugin: cloudbees-folder&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo systemctl start jenkins
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>2.Jenkins和Github personal access token&lt;/p>
&lt;ul>
&lt;li>登录到您的 Jenkins 服务器。&lt;/li>
&lt;li>选择“Jenkins”&amp;gt;“Manage Jenkins”&amp;gt;“Configure System”。&lt;/li>
&lt;li>滚动到“GitHub”部分。&lt;/li>
&lt;li>点击“Add GitHub Server”按钮。&lt;/li>
&lt;li>在“API URL”字段中输入您的 Github API URL（例如 &lt;a href="https://link.juejin.cn/?target=https%3A%2F%2Fapi.github.com%EF%BC%89%E3%80%82">api.github.com）。&lt;/a>&lt;/li>
&lt;li>在“Credentials”字段中选择“Add”。&lt;/li>
&lt;li>选择“Kind”为“Username with password”。&lt;/li>
&lt;li>在“Username”字段中输入您的 Github 用户名。&lt;/li>
&lt;li>在“Password”字段中输入您的 Github 个人访问令牌。&lt;/li>
&lt;li>点击“Verify credentials”按钮以验证凭据是否有效。&lt;/li>
&lt;li>如果验证成功，请点击“Save”按钮保存更改。&lt;/li>
&lt;/ul>
&lt;p>3.jenkins映射docker&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 如果docker run jenkins 没有指定&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 这里就不能打包,就是因为在jenkins里的容器中,没有安装对象,使用了-v &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 就是把jenkins里所需要的docker映射到宿主docker中&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-v /var/run/docker.sock:/var/run/docker.sock &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-v &lt;span style="color:#66d9ef">$(&lt;/span>which docker&lt;span style="color:#66d9ef">)&lt;/span>:/usr/bin/docker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>4.安装插件没有成功&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051425983.png" alt="">
需要到插件中心,在可更新和可选插件里,一个一个手动去搜索安装,如果还有问题,就需要更新jenkins&lt;/p>
&lt;p>5.&lt;code>npm install&lt;/code>需要权限&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>Unable to save binary /var/lib/jenkins/workspace/mymanager-/node_modules/node-sass/vendor/linux-x64-83 : Error: EACCES: permission denied, mkdir &lt;span style="color:#e6db74">&amp;#39;/var/lib/jenkins/workspace/lottery-web-24kai-ausk3/node_modules/node-sass/vendor&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="修改端口">修改端口&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 第一步&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo vim /etc/init.d/jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 8088改成想要的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>check_tcp_port &lt;span style="color:#e6db74">&amp;#34;http&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$HTTP_PORT&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;8088&amp;#34;&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 第二步&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo vim /etc/default/jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 8088改成想要的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>HTTP_PORT&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">8088&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 第三步&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim /lib/systemd/system/jenkins.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Environment&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;JENKINS_PORT=80&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 执行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl start jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl status jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 这个时候就启动报错,然后接着修改&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vim /lib/systemd/system/jenkins.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 本来是jenkins的,改成root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User&lt;span style="color:#f92672">=&lt;/span>root
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Group&lt;span style="color:#f92672">=&lt;/span>root
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 执行,就可以了,不知道为啥&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl daemon-reload
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl start jenkins
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl status jenkins
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="jenkins使用root账号登录">jenkins使用root账号登录&lt;/h1>
&lt;p>&lt;a href="https://www.baimeidashu.com/13094.html">设置1&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://www.cnblogs.com/fieldtianye/p/17852160.html">设置2&lt;/a>&lt;/p>
&lt;h1 id="权限管理">权限管理&lt;/h1>
&lt;p>1.安装插件,&lt;code>Role-based Authorization Strategy&lt;/code>&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202408081650831.png" alt="image-20240808165032732">&lt;/p>
&lt;p>2.点击 管理系统&amp;ndash;&amp;gt;安全段落下的&amp;ndash;&amp;gt;全局安全配置,选中&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202408081652851.png" alt="image-20240808165220186">&lt;/p>
&lt;p>3.管理系统&amp;ndash;&amp;gt;安全段落下的 就会多一个功能&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202408081653465.png" alt="image-20240808165321957">&lt;/p></content></item><item><title>Mac</title><link>https://connorzhangyu.com/posts/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/mac/</link><pubDate>Sat, 19 Nov 2022 18:25:00 +0000</pubDate><guid>https://connorzhangyu.com/posts/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/mac/</guid><description>&lt;h1 id="快捷键">快捷键&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>描述&lt;/th>
&lt;th>命令&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>一个应用多个窗口 切换&lt;/td>
&lt;td>command+`&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>录屏幕&lt;/td>
&lt;td>shift+command+5&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>截图&lt;/td>
&lt;td>shift+command+4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>重装系统&lt;/td>
&lt;td>先一直按住不要松手:Common+R,&lt;br />再按开机键;非苹果键盘,按住微软键+R&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>上一级目录&lt;/td>
&lt;td>command+↑&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="网站链接">网站链接&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://www.iplaysoft.com/fix-chrome-slow.html">一招解决 Chrome / Edge 浏览器卡顿变慢视频掉帧问题 - 让浏览器重回丝般流畅&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://alt-tab-macos.netlify.app/">AltTab&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="iphone强制重启">iphone强制重启&lt;/h1>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051349933.webp" alt="">&lt;/p>
&lt;h1 id="浏览器返回手势">浏览器返回手势&lt;/h1>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051350113.png" alt="">&lt;/p>
&lt;h1 id="放歌有噪音">放歌有噪音&lt;/h1>
&lt;p>通过【活动监视器】程序终止【coreaudiod】进程：&lt;/p>
&lt;ol>
&lt;li>聚焦搜索】中输入【activity monitor】&lt;/li>
&lt;li>在窗口右上角的搜索栏里输入【coreaudiod】&lt;/li>
&lt;li>选择【coreaudiod】进程后，点击窗口上方工具栏中的【停止按钮】（按钮图标为X）&lt;/li>
&lt;/ol>
&lt;h1 id="只有mac不能访问github">只有mac不能访问github&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>打开&lt;code>https://github.com.ipaddress.com/&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>打开&lt;code>https://fastly.net.ipaddress.com/github.global.ssl.fastly.net#ipinfo&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>sudo vim /etc/hosts&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Shell" data-lang="Shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 这个ip从第一步获取到的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>140.82.112.4 github.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 这个ip从第二步获取到的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>199.232.69.194 github.global.ssl.fastly.net
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>刷新:&lt;code>sudo killall -HUP mDNSResponder;say DNS cache has been flushed&lt;/code>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h1 id="启动台有问号的图标点击没反应">启动台有问号的图标,点击没反应&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 执行了之后,自己新建的文件夹会重置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>defaults write com.apple.dock ResetLaunchPad -bool TRUE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>killall Dock
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="mac-os-x-访问-windows共享文件夹">Mac OS X 访问 Windows共享文件夹&lt;/h1>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051351999.png" alt="">&lt;/p></description><content>&lt;h1 id="快捷键">快捷键&lt;/h1>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>描述&lt;/th>
&lt;th>命令&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>一个应用多个窗口 切换&lt;/td>
&lt;td>command+`&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>录屏幕&lt;/td>
&lt;td>shift+command+5&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>截图&lt;/td>
&lt;td>shift+command+4&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>重装系统&lt;/td>
&lt;td>先一直按住不要松手:Common+R,&lt;br />再按开机键;非苹果键盘,按住微软键+R&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>上一级目录&lt;/td>
&lt;td>command+↑&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h1 id="网站链接">网站链接&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://www.iplaysoft.com/fix-chrome-slow.html">一招解决 Chrome / Edge 浏览器卡顿变慢视频掉帧问题 - 让浏览器重回丝般流畅&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://alt-tab-macos.netlify.app/">AltTab&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="iphone强制重启">iphone强制重启&lt;/h1>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051349933.webp" alt="">&lt;/p>
&lt;h1 id="浏览器返回手势">浏览器返回手势&lt;/h1>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051350113.png" alt="">&lt;/p>
&lt;h1 id="放歌有噪音">放歌有噪音&lt;/h1>
&lt;p>通过【活动监视器】程序终止【coreaudiod】进程：&lt;/p>
&lt;ol>
&lt;li>聚焦搜索】中输入【activity monitor】&lt;/li>
&lt;li>在窗口右上角的搜索栏里输入【coreaudiod】&lt;/li>
&lt;li>选择【coreaudiod】进程后，点击窗口上方工具栏中的【停止按钮】（按钮图标为X）&lt;/li>
&lt;/ol>
&lt;h1 id="只有mac不能访问github">只有mac不能访问github&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>打开&lt;code>https://github.com.ipaddress.com/&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>打开&lt;code>https://fastly.net.ipaddress.com/github.global.ssl.fastly.net#ipinfo&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>sudo vim /etc/hosts&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Shell" data-lang="Shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 这个ip从第一步获取到的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>140.82.112.4 github.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 这个ip从第二步获取到的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>199.232.69.194 github.global.ssl.fastly.net
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>刷新:&lt;code>sudo killall -HUP mDNSResponder;say DNS cache has been flushed&lt;/code>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h1 id="启动台有问号的图标点击没反应">启动台有问号的图标,点击没反应&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 执行了之后,自己新建的文件夹会重置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>defaults write com.apple.dock ResetLaunchPad -bool TRUE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>killall Dock
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="mac-os-x-访问-windows共享文件夹">Mac OS X 访问 Windows共享文件夹&lt;/h1>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051351999.png" alt="">&lt;/p>
&lt;p>在Mac中，点击 Finder菜单的“前往” &amp;gt; “前往服务器”。在弹出的连接服务器对话框中输入「smb://Windows主机的IP地址」，点击“连接”。&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051352087.png" alt="">&lt;/p>
&lt;p>一般需要输入Windows对应用户的名称和密码，然后弹出如下窗口，选择对应的文件夹，点击“好”即可进行远程访问&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051352069.png" alt="">&lt;/p>
&lt;h1 id="只使用搜狗输入法">只使用搜狗输入法&lt;/h1>
&lt;p>系统偏好设置 &amp;raquo; 键盘 &amp;raquo; 快捷键 &amp;raquo; 反选切换输入法的快捷键&lt;/p>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051353563.png" alt="示例图片">&lt;/p>
&lt;h1 id="网络踪迹">网络踪迹&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>traceroute ap-southeast-1.signin.aws.amazon.com
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="安装mysql客户端">安装mysql客户端&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>brew install mysql-client
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 安装目录在&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/opt/homebrew/Cellar/mysql-client/8.0.33_1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># mysqldump的目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/opt/homebrew/opt/mysql-client/bin/mysqldump
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="iterm2">Iterm2&lt;/h1>
&lt;h2 id="iterm2多窗口同时输入命令">Iterm2多窗口同时输入命令&lt;/h2>
&lt;p>&lt;code>只需要输入快捷键 ⌘(command) + ⇧(shift) + i&lt;/code>&lt;/p>
&lt;h2 id="调出复制过的文本历史">调出复制过的文本历史&lt;/h2>
&lt;p>快捷键：“shift+cmd+h”&lt;/p>
&lt;h2 id="按键回放">按键回放&lt;/h2>
&lt;p>回放一段时间内的你敲过的所有字符。
快捷键：“cmd+alt+b”，如图会弹出一个进度条，按左右键就可以实现按键回放了。&lt;/p>
&lt;h1 id="cheatsheet">CheatSheet&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>brew install cheatsheet
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 使用&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>随便在一个软件中 长按&lt;span style="color:#e6db74">`&lt;/span>command&lt;span style="color:#e6db74">`&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="navicat破解">Navicat破解&lt;/h1>
&lt;p>&lt;a href="https://gitee.com/ProgHub/unlimited_trial_navicat_premium">gitee脚本&lt;/a>&lt;/p>
&lt;h1 id="mac安装-protobuf">mac安装 protobuf&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>brew install protobuf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>protoc --version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/opt/homebrew/share/emacs/site-lisp/protobuf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="视频格式转换">视频格式转换&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>brew install ffmpeg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 使用这个命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffmpeg -i input.mov -c copy output.mp4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 不要用这个命令,网上说是速度很慢&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ffmpeg -i input.mov output.mp4
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>Nginx</title><link>https://connorzhangyu.com/posts/nginx/</link><pubDate>Sat, 19 Nov 2022 18:25:00 +0000</pubDate><guid>https://connorzhangyu.com/posts/nginx/</guid><description>&lt;h2 id="docker安装-nginx">Docker安装 Nginx&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 简单的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker run --name nginx-test &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -p 8080:80 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -d &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 正式的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker run -d &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -p 443:443 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -p 80:80 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --name nginx &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -v /home/nginx/www:/usr/share/nginx/html &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -v /home/nginx/conf/nginx.conf:/etc/nginx/nginx.conf &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -v /home/nginx/logs:/var/log/nginx &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> nginx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ubuntu安装nginx">Ubuntu安装Nginx&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Ubuntu安装依赖&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install libpcre3 libpcre3-dev openssl libssl-dev zlib1g-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Ubuntu 如果还缺少依赖&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get install build-essential
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Centos安装依赖&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>yum install -y gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 进入到解压的文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd ./nginx-1.16
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./configure --prefix&lt;span style="color:#f92672">=&lt;/span>/url/local/nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#或者&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./configure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 如果需要指定模块&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./configure --add-module&lt;span style="color:#f92672">=&lt;/span>../nginx-rtmp-module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#然后目录下就多了一个nginx文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> make install
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#启动&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd ../nginx/sbin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 配置文件目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>所有的配置文件都在/etc/nginx下，并且每个虚拟主机已经安排在了/etc/nginx/sites-available下
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>程序文件在/usr/sbin/nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>日志放在了/var/log/nginx中
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>并已经在/etc/init.d/下创建了启动脚本nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>默认的虚拟主机的目录设置在了/var/www/nginx-default &lt;span style="color:#f92672">(&lt;/span>有的版本 默认的虚拟主机的目录设置在了/var/www, 请参考/etc/nginx/sites-available里的配置&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="nginx-常用命令">Nginx 常用命令&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 启动nginx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>start nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 或者&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 修改配置后重新加载生效&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nginx -s reload
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 重新打开日志文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nginx -s reopen
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 测试nginx配置文件是否正确&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nginx -t -c /path/to/nginx.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 快速停止nginx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nginx -s stop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 完整有序的停止nginx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nginx -s quit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 指定配置文件启动&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nginx -c /home/anthony/nginx.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="nginx-配置模板">Nginx 配置模板&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#user nobody;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 设置 &amp;lt;= cpu核数,一般设置成cpu*核数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">worker_processes 1;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 指定错误日志文件存放路径，错误日志级别可选项为【debug|info|notice|warn|error|crit】&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">error_log logs/warn.log warn;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 指定pid存放路径 nginx启动后的进程ID&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">pid logs/nginx.pid;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 工作模式及连接数上限&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#user nobody;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 设置 &amp;lt;= cpu核数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">worker_processes 1;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 指定错误日志文件存放路径，错误日志级别可选项为【debug|info|notice|warn|error|crit】&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># error_log logs/error.log error;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 指定pid存放路径 nginx启动后的进程ID&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># pid logs/nginx.pid;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 工作模式及连接数上限&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">events {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 使用网络I/O模型，Linux系统推荐使用epoll模型，FreeBSD系统推荐使用kqueue;window下不指定&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># user epoll;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 允许的最大连接数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">worker_connections 1024;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 设定http服务器，利用他的反向代理功能提供负载均衡支持&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">http {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 设定mime类型&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">include mime.types;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">default_type application/octet-stream;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 设定日志格式&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">log_format main &amp;#39;$remote_addr - $remote_user [$time_local] &amp;#34;$request&amp;#34; &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;$status $body_bytes_sent &amp;#34;$http_referer&amp;#34; &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;&amp;#34;$http_user_agent&amp;#34; &amp;#34;$http_x_forwarded_for&amp;#34;&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">client_header_buffer_size 1k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">large_client_header_buffers 4 4k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># access_log logs/info.log main;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># # 设定access log&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">send_timeout 3m;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">sendfile on;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">tcp_nopush on;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">tcp_nodelay on;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 这个参数表示http连接超时时间，默认是65s。要是上传文件比较大，在规定时间内没有上传完成，就会自动断开连接！所以适当调大这个时间。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">keepalive_timeout 0;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">keepalive_timeout 5000;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 开启gzip模块&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">gzip on;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">gzip_min_length 1100;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">gzip_buffers 4 8k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php application/javascript application/json;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">output_buffers 1 32k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">postpone_output 1460;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">server_names_hash_bucket_size 128;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">client_header_timeout 3m; &lt;/span> &lt;span style="color:#75715e">#调大点&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">client_body_timeout 3m; &lt;/span> &lt;span style="color:#75715e">#调大点&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">client_max_body_size 200m; &lt;/span> &lt;span style="color:#75715e">#主要是这个参数，限制了上传文件大大小&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#client_body_buffer_size 1024;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">fastcgi_connect_timeout 300;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">fastcgi_send_timeout 300;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">fastcgi_read_timeout 300;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">fastcgi_buffer_size 64k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">fastcgi_buffers 4 64k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">fastcgi_busy_buffers_size 128k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">fastcgi_temp_file_write_size 128k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">gzip_http_version 1.1;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">gzip_comp_level 2;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">gzip_vary on;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#设定虚拟主机&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">server {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">listen 80;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">server_name ap.mmzcg.com;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 设置url编码格式，解决参数中文乱码问题&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">charset UTF-8;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 设定本虚拟主机的访问日志&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># access_log logs/host.access.log main;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 对 &amp;#34;/&amp;#34; 启用负载均衡&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">location / {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 设定代理访问地址&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_pass http://127.0.0.1:30000/;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 配置SSL证书&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ssl_certificate /etc/nginx/conf.d/ssl/STAR.huihuang200.com.crt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ssl_certificate_key /etc/nginx/conf.d/ssl/STAR.huihuang200.com.key;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ssl_session_timeout 5m;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ssl_session_cache shared:SSL:10m;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ssl_protocols TLSv1 TLSv1.1 TLSv1.2 SSLv2 SSLv3;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ssl_prefer_server_ciphers on;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ssl_verify_client off;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 解决ajax跨域问题&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">add_header &amp;#39;Access-Control-Allow-Origin&amp;#39; &amp;#39;*&amp;#39;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">add_header &amp;#39;Access-Control-Allow-Credentials&amp;#39; &amp;#39;true&amp;#39;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">add_header &amp;#39;Access-Control-Allow-Methods&amp;#39; &amp;#39;GET, POST, OPTIONS&amp;#39;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">add_header &amp;#39;Access-Control-Allow-Headers&amp;#39; &amp;#39;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&amp;#39;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 保留用户真实信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_set_header Host $host:$server_port;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_set_header X-Real-IP $remote_addr;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 允许客户端请求的最大单个文件字节数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">client_max_body_size 100m;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 缓冲区代理缓冲用户端请求的最大字节数，可以理解为先保存到本地再传给用户&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">client_body_buffer_size 1280k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># nginx跟后端服务器连接超时时间，发起握手等候响应超时时间(代理连接超时)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_connect_timeout 5;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 连接成功后 等待后端服务器响应时间 其实已进入后端的排队之中等候处理&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_read_timeout 60;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 代理请求缓存区 这个缓存区间会保存用户的头信息一共Nginx进行规则处理 一般只要能保存下头信息即可&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_send_timeout 30;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 同上 告诉Nginx保存单个用的几个Buffer最大用多大空间&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_buffer_size 256k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_buffers 4 256k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 如果系统很忙的时候可以申请国内各大的proxy_buffers 官方推荐 *2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_busy_buffers_size 256k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># proxy 缓存临时文件的大小&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_temp_file_write_size 256k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_next_upstream error timeout invalid_header http_500 http_503 http_404;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_max_temp_file_size 128m;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="nginx日志管理">Nginx日志管理&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#access_log logs/access.log main;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># nginx的默认配置,如果在安装的nginx里没有看到这个,也没有关系
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#log_format main &amp;#39;$remote_addr - $remote_user [$time_local] &amp;#34;$request&amp;#34; &amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># &amp;#39;$status $body_bytes_sent &amp;#34;$http_referer&amp;#34; &amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># &amp;#39;&amp;#34;$http_user_agent&amp;#34; &amp;#34;$http_x_forwarded_for&amp;#34;&amp;#39;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">server&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen&lt;/span> &lt;span style="color:#ae81ff">80&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">location&lt;/span> &lt;span style="color:#e6db74">/&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">root&lt;/span> &lt;span style="color:#e6db74">my&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">index&lt;/span> &lt;span style="color:#e6db74">index.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#配置日志, main 就是log_format 后面的名字
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e"># 该server的访问日志的文件是logs/access.log,使用的是main格式
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#e6db74">access_log&lt;/span> &lt;span style="color:#e6db74">logs/access.log&lt;/span> &lt;span style="color:#e6db74">main&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>推荐的配置&lt;/p></description><content>&lt;h2 id="docker安装-nginx">Docker安装 Nginx&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 简单的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker run --name nginx-test &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -p 8080:80 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -d &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 正式的&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker run -d &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -p 443:443 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -p 80:80 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --name nginx &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -v /home/nginx/www:/usr/share/nginx/html &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -v /home/nginx/conf/nginx.conf:/etc/nginx/nginx.conf &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> -v /home/nginx/logs:/var/log/nginx &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> nginx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ubuntu安装nginx">Ubuntu安装Nginx&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Ubuntu安装依赖&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install libpcre3 libpcre3-dev openssl libssl-dev zlib1g-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Ubuntu 如果还缺少依赖&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt-get install build-essential
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Centos安装依赖&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>yum install -y gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 进入到解压的文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd ./nginx-1.16
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./configure --prefix&lt;span style="color:#f92672">=&lt;/span>/url/local/nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#或者&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./configure
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 如果需要指定模块&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./configure --add-module&lt;span style="color:#f92672">=&lt;/span>../nginx-rtmp-module
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#然后目录下就多了一个nginx文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> make install
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#启动&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd ../nginx/sbin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>./nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 配置文件目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>所有的配置文件都在/etc/nginx下，并且每个虚拟主机已经安排在了/etc/nginx/sites-available下
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>程序文件在/usr/sbin/nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>日志放在了/var/log/nginx中
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>并已经在/etc/init.d/下创建了启动脚本nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>默认的虚拟主机的目录设置在了/var/www/nginx-default &lt;span style="color:#f92672">(&lt;/span>有的版本 默认的虚拟主机的目录设置在了/var/www, 请参考/etc/nginx/sites-available里的配置&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="nginx-常用命令">Nginx 常用命令&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 启动nginx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>start nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 或者&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 修改配置后重新加载生效&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nginx -s reload
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 重新打开日志文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nginx -s reopen
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 测试nginx配置文件是否正确&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nginx -t -c /path/to/nginx.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 快速停止nginx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nginx -s stop
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 完整有序的停止nginx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nginx -s quit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 指定配置文件启动&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nginx -c /home/anthony/nginx.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="nginx-配置模板">Nginx 配置模板&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#user nobody;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 设置 &amp;lt;= cpu核数,一般设置成cpu*核数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">worker_processes 1;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 指定错误日志文件存放路径，错误日志级别可选项为【debug|info|notice|warn|error|crit】&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">error_log logs/warn.log warn;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 指定pid存放路径 nginx启动后的进程ID&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">pid logs/nginx.pid;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 工作模式及连接数上限&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#user nobody;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 设置 &amp;lt;= cpu核数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">worker_processes 1;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 指定错误日志文件存放路径，错误日志级别可选项为【debug|info|notice|warn|error|crit】&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># error_log logs/error.log error;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 指定pid存放路径 nginx启动后的进程ID&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># pid logs/nginx.pid;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 工作模式及连接数上限&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">events {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 使用网络I/O模型，Linux系统推荐使用epoll模型，FreeBSD系统推荐使用kqueue;window下不指定&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># user epoll;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 允许的最大连接数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">worker_connections 1024;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 设定http服务器，利用他的反向代理功能提供负载均衡支持&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">http {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 设定mime类型&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">include mime.types;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">default_type application/octet-stream;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 设定日志格式&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">log_format main &amp;#39;$remote_addr - $remote_user [$time_local] &amp;#34;$request&amp;#34; &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;$status $body_bytes_sent &amp;#34;$http_referer&amp;#34; &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;&amp;#34;$http_user_agent&amp;#34; &amp;#34;$http_x_forwarded_for&amp;#34;&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">client_header_buffer_size 1k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">large_client_header_buffers 4 4k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># access_log logs/info.log main;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># # 设定access log&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">send_timeout 3m;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">sendfile on;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">tcp_nopush on;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">tcp_nodelay on;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 这个参数表示http连接超时时间，默认是65s。要是上传文件比较大，在规定时间内没有上传完成，就会自动断开连接！所以适当调大这个时间。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">keepalive_timeout 0;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">keepalive_timeout 5000;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 开启gzip模块&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">gzip on;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">gzip_min_length 1100;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">gzip_buffers 4 8k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php application/javascript application/json;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">output_buffers 1 32k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">postpone_output 1460;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">server_names_hash_bucket_size 128;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">client_header_timeout 3m; &lt;/span> &lt;span style="color:#75715e">#调大点&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">client_body_timeout 3m; &lt;/span> &lt;span style="color:#75715e">#调大点&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">client_max_body_size 200m; &lt;/span> &lt;span style="color:#75715e">#主要是这个参数，限制了上传文件大大小&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#client_body_buffer_size 1024;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">fastcgi_connect_timeout 300;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">fastcgi_send_timeout 300;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">fastcgi_read_timeout 300;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">fastcgi_buffer_size 64k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">fastcgi_buffers 4 64k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">fastcgi_busy_buffers_size 128k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">fastcgi_temp_file_write_size 128k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">gzip_http_version 1.1;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">gzip_comp_level 2;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">gzip_vary on;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#设定虚拟主机&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">server {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">listen 80;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">server_name ap.mmzcg.com;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 设置url编码格式，解决参数中文乱码问题&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">charset UTF-8;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 设定本虚拟主机的访问日志&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># access_log logs/host.access.log main;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 对 &amp;#34;/&amp;#34; 启用负载均衡&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">location / {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 设定代理访问地址&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_pass http://127.0.0.1:30000/;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 配置SSL证书&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ssl_certificate /etc/nginx/conf.d/ssl/STAR.huihuang200.com.crt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ssl_certificate_key /etc/nginx/conf.d/ssl/STAR.huihuang200.com.key;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ssl_session_timeout 5m;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ssl_session_cache shared:SSL:10m;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ssl_protocols TLSv1 TLSv1.1 TLSv1.2 SSLv2 SSLv3;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ssl_prefer_server_ciphers on;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ssl_verify_client off;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 解决ajax跨域问题&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">add_header &amp;#39;Access-Control-Allow-Origin&amp;#39; &amp;#39;*&amp;#39;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">add_header &amp;#39;Access-Control-Allow-Credentials&amp;#39; &amp;#39;true&amp;#39;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">add_header &amp;#39;Access-Control-Allow-Methods&amp;#39; &amp;#39;GET, POST, OPTIONS&amp;#39;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">add_header &amp;#39;Access-Control-Allow-Headers&amp;#39; &amp;#39;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&amp;#39;;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 保留用户真实信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_set_header Host $host:$server_port;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_set_header X-Real-IP $remote_addr;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 允许客户端请求的最大单个文件字节数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">client_max_body_size 100m;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 缓冲区代理缓冲用户端请求的最大字节数，可以理解为先保存到本地再传给用户&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">client_body_buffer_size 1280k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># nginx跟后端服务器连接超时时间，发起握手等候响应超时时间(代理连接超时)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_connect_timeout 5;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 连接成功后 等待后端服务器响应时间 其实已进入后端的排队之中等候处理&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_read_timeout 60;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 代理请求缓存区 这个缓存区间会保存用户的头信息一共Nginx进行规则处理 一般只要能保存下头信息即可&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_send_timeout 30;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 同上 告诉Nginx保存单个用的几个Buffer最大用多大空间&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_buffer_size 256k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_buffers 4 256k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 如果系统很忙的时候可以申请国内各大的proxy_buffers 官方推荐 *2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_busy_buffers_size 256k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># proxy 缓存临时文件的大小&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_temp_file_write_size 256k;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_next_upstream error timeout invalid_header http_500 http_503 http_404;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">proxy_max_temp_file_size 128m;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="nginx日志管理">Nginx日志管理&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#access_log logs/access.log main;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># nginx的默认配置,如果在安装的nginx里没有看到这个,也没有关系
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#log_format main &amp;#39;$remote_addr - $remote_user [$time_local] &amp;#34;$request&amp;#34; &amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># &amp;#39;$status $body_bytes_sent &amp;#34;$http_referer&amp;#34; &amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># &amp;#39;&amp;#34;$http_user_agent&amp;#34; &amp;#34;$http_x_forwarded_for&amp;#34;&amp;#39;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">server&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen&lt;/span> &lt;span style="color:#ae81ff">80&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">location&lt;/span> &lt;span style="color:#e6db74">/&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">root&lt;/span> &lt;span style="color:#e6db74">my&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">index&lt;/span> &lt;span style="color:#e6db74">index.html&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#配置日志, main 就是log_format 后面的名字
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e"># 该server的访问日志的文件是logs/access.log,使用的是main格式
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#e6db74">access_log&lt;/span> &lt;span style="color:#e6db74">logs/access.log&lt;/span> &lt;span style="color:#e6db74">main&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>推荐的配置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">log_format&lt;/span> &lt;span style="color:#e6db74">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;&lt;/span>$remote_addr &lt;span style="color:#e6db74">-&lt;/span> $remote_user &lt;span style="color:#e6db74">[&lt;/span>$time_local] &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$request&amp;#34; $http_host &lt;span style="color:#e6db74">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;&lt;/span>$status $request_length $body_bytes_sent &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$http_referer&amp;#34; &lt;span style="color:#e6db74">&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;&amp;#34;&lt;/span>$http_user_agent&amp;#34; $request_time&amp;#39;;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>remote_addr : 客户端地址&lt;/li>
&lt;li>remote_user : 客户端用户名&lt;/li>
&lt;li>time_local : 服务器时间&lt;/li>
&lt;li>request : 请求内容，包括方法名，地址，和http协议&lt;/li>
&lt;li>http_host : 用户请求是使用的http地址&lt;/li>
&lt;li>status : 返回的http 状态码&lt;/li>
&lt;li>request_length : 请求大小&lt;/li>
&lt;li>body_bytes_sent : 返回的大小&lt;/li>
&lt;li>http_referer : 来源页&lt;/li>
&lt;li>http_user_agent : 客户端名称&lt;/li>
&lt;li>request_time : 整体请求延时&lt;/li>
&lt;/ol>
&lt;p>日志书写规则&lt;/p>
&lt;p>一行要用单引号包起来,一行一个,换行也不需要什么连接的符号&lt;/p>
&lt;h2 id="location匹配">location匹配&lt;/h2>
&lt;p>= 精准匹配
不写 一般匹配
~ 正则匹配
location proxy_pass 后面的url 加与不加/的区别&lt;/p>
&lt;h2 id="server_name匹配">server_name匹配&lt;/h2>
&lt;h3 id="通配符匹配">通配符匹配&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nix" data-lang="nix">&lt;span style="display:flex;">&lt;span>server {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> listen &lt;span style="color:#ae81ff">80&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server_name &lt;span style="color:#f92672">*.&lt;/span>example&lt;span style="color:#f92672">.&lt;/span>org;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>server {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> listen &lt;span style="color:#ae81ff">80&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server_name mail&lt;span style="color:#f92672">.*&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>通配符格式中的&lt;code>*&lt;/code>号只能在域名的开头或结尾，并且&lt;code>*&lt;/code>号两侧只能是&lt;code>.&lt;/code>这些无效:&lt;/p>
&lt;ul>
&lt;li>&lt;code>www.*.example.org&lt;/code>&lt;/li>
&lt;li>&lt;code>w*.example.org&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>*&lt;/code>号可以匹配多个域名部分，&lt;code>*.example.org&lt;/code>可以匹配到:&lt;/p>
&lt;ul>
&lt;li>&lt;code>www.example.org&lt;/code>&lt;/li>
&lt;li>&lt;code>www.sub.example.org&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>.example.org&lt;/code>是比较特殊的通配符格式, 可以同时匹配&lt;/p>
&lt;ul>
&lt;li>&lt;code>example.org&lt;/code>&lt;/li>
&lt;li>&lt;code>*.example.org&lt;/code>。&lt;/li>
&lt;/ul>
&lt;h3 id="正则匹配">正则匹配&lt;/h3>
&lt;p>⁉️ 不适用我自己&lt;/p>
&lt;h3 id="精确匹配">精确匹配&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-visual-basic" data-lang="visual-basic">server {
listen 80;
server_name example.org www.example.org;
...
}
&lt;/code>&lt;/pre>&lt;h3 id="特殊匹配格式">特殊匹配格式&lt;/h3>
&lt;ol>
&lt;li>&lt;code>server_name &amp;quot;&amp;quot;&lt;/code>; 匹配Host请求头不存在的情况。&lt;/li>
&lt;li>&lt;code>server_name &amp;quot;-&amp;quot;&lt;/code>; 无任何意义。&lt;/li>
&lt;li>&lt;code>server_name &amp;quot;*&amp;quot;;&lt;/code> 它被错误地解释为万能的名称。 它从不用作通用或通配符服务器名称。相反，它提供了server_name_in_redirect指令现在提供的功能。 &lt;code>现在不建议使用特殊名称“ *”，而应使用server_name_in_redirect指令。&lt;/code>&lt;/li>
&lt;/ol>
&lt;h4 id="匹配顺序">匹配顺序&lt;/h4>
&lt;ol>
&lt;li>精确的名字&lt;/li>
&lt;li>以*号开头的最长通配符名称，例如 *.example.org&lt;/li>
&lt;li>以&lt;em>号结尾的最长通配符名称，例如 mail.&lt;/em>&lt;/li>
&lt;li>第一个匹配的正则表达式（在配置文件中出现的顺序）&lt;/li>
&lt;/ol>
&lt;h3 id="优化">优化&lt;/h3>
&lt;ol>
&lt;li>尽量使用精确匹配;&lt;/li>
&lt;li>当定义大量server_name时或特别长的server_name时，需要在http级别调整server_names_hash_max_size和server_names_hash_bucket_size，否则nginx将无法启动。&lt;/li>
&lt;/ol>
&lt;h1 id="nginx报错">Nginx报错&lt;/h1>
&lt;h3 id="1服务器重启之后执行-nginx--t-是ok的然而在执行-nginx--s-reload-的时候报错">1.服务器重启之后，执行 nginx -t 是OK的，然而在执行 nginx -s reload 的时候报错&lt;/h3>
&lt;p>&lt;code>nginx: [error] invalid PID number &amp;quot;&amp;quot; in &amp;quot;/run/nginx.pid&amp;quot;&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code># 解决办法:
nginx -c /etc/nginx/nginx.conf
nginx.conf文件的路径可以从nginx -t的返回中找到。
nginx -s reload
&lt;/code>&lt;/pre>&lt;h3 id="2a-duplicate-default-server-for-000080">2.&lt;code>a duplicate default server for 0.0.0.0:80&lt;/code>&lt;/h3>
&lt;p>nginx: [emerg] a duplicate default server for 0.0.0.0:80 in /etc/nginx/sites-enabled/gitlab:10&lt;/p>
&lt;pre tabindex="0">&lt;code>删除/etc/nginx/sites-available/default文件，重新启动服务即可
nginx -t :检查配置文件是否出错
&lt;/code>&lt;/pre>&lt;h3 id="3403">3.403&lt;/h3>
&lt;pre tabindex="0">&lt;code>打开nginx.conf
例子：vim /etc/nginx/nginx.conf
把 user 用户名 改为 user root 或 其它有高权限的用户名称即可
&lt;/code>&lt;/pre>&lt;h1 id="nginx应用">Nginx应用&lt;/h1>
&lt;h2 id="acmesh的使用">Acme.sh的使用&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 下载软件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>curl https://get.acme.sh | sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 设置别名 alias:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alias acme.sh&lt;span style="color:#f92672">=&lt;/span>~/.acme.sh/acme.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 切换 Let&amp;#39;s Encrypt,默认使用 ZeroSSL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>acme.sh --set-default-ca --server letsencrypt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 执行,会打印配置域名的TXT&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>acme.sh --issue -d baidu.me --dns --yes-I-know-dns-manual-mode-enough-go-ahead-please
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 配置好执行,再执行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>acme.sh --issue -d baidu.me --dns --yes-I-know-dns-manual-mode-enough-go-ahead-please --renew
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># --nginx 就是指定域名的配置文件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Your cert is in: /root/.acme.sh/baidu.me_ecc/baidu.me.cer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Your cert key is in: /root/.acme.sh/baidu.me_ecc/baidu.me.key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The intermediate CA cert is in: /root/.acme.sh/baidu.me_ecc/ca.cer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>And the full chain certs is there: /root/.acme.sh/baidu.me_ecc/fullchain.cer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 查看申请的证书&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root@jenkins-jumpserver-nginx:~/.acme.sh# acme.sh --list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Main_Domain KeyLength SAN_Domains CA Created Renew
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>baidu &lt;span style="color:#e6db74">&amp;#34;ec-256&amp;#34;&lt;/span> no LetsEncrypt.org 2023-09-17T11:52:22Z 2023-11-15T11:52:22Z
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 续期证书&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 证书默认是90天，如需强制更新证书，则执行以下命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>acme.sh --renew -d abc.xyz --force
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># acme.sh会自动为你创建 cronjob, 每天 0:00 点自动检测所有的证书, &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 如果快过期了, 需要更新, 则会自动更新证书，使用以下命令可查看定时任务&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>crontab -l
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 升级 acme.sh 到最新&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>acme.sh --upgrade
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># CF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export CF_Key&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;xxxxxxx&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export CF_Email&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;CF账号的邮箱&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>acme.sh --issue -d &lt;span style="color:#e6db74">&amp;#34;baidu.com&amp;#34;&lt;/span> --dns dns_cf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="建立软连接">建立软连接&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo ln -s /etc/nginx/sites-available/domain-one.com /etc/nginx/sites-enabled/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="快速部署静态应用">快速部署静态应用&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 首尾配置暂时忽略
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">server&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen&lt;/span> &lt;span style="color:#ae81ff">8080&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">server_name&lt;/span> &lt;span style="color:#e6db74">localhost&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">location&lt;/span> &lt;span style="color:#e6db74">/&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 设置为个人项目的根目录路径
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">root&lt;/span> &lt;span style="color:#e6db74">/usr/local/var/www/my-project&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">index&lt;/span> &lt;span style="color:#e6db74">index.html&lt;/span> &lt;span style="color:#e6db74">index.htm&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># vue项目404让前端路由处理
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">try_files&lt;/span> $uri $uri/ &lt;span style="color:#e6db74">/index.html&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 首尾配置暂时忽略
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="跨域">跨域&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 首尾配置暂时忽略
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">server&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen&lt;/span> &lt;span style="color:#ae81ff">8080&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">server_name&lt;/span> &lt;span style="color:#e6db74">localhost&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">location&lt;/span> &lt;span style="color:#e6db74">/&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 跨域代理设置
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">proxy_pass&lt;/span> &lt;span style="color:#e6db74">http://www.proxy.com&lt;/span>; &lt;span style="color:#75715e"># 要实现跨域的域名
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">add_header&lt;/span> &lt;span style="color:#e6db74">Access-Control-Allow-Origin&lt;/span> &lt;span style="color:#e6db74">*&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">add_header&lt;/span> &lt;span style="color:#e6db74">Access-Control-Allow-Methods&lt;/span> &lt;span style="color:#e6db74">&amp;#39;GET,&lt;/span> &lt;span style="color:#e6db74">POST,&lt;/span> &lt;span style="color:#e6db74">OPTIONS&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">add_header&lt;/span> &lt;span style="color:#e6db74">Access-Control-Allow-Headers&lt;/span> &lt;span style="color:#e6db74">&amp;#39;DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 首尾配置暂时忽略
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 第二种
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">server&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen&lt;/span> &lt;span style="color:#ae81ff">80&lt;/span> &lt;span style="color:#e6db74">default_server&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">server_name&lt;/span> &lt;span style="color:#e6db74">_&lt;/span> &lt;span style="color:#e6db74">www.*&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">location&lt;/span> &lt;span style="color:#e6db74">/&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">index&lt;/span> &lt;span style="color:#e6db74">index.html&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">root&lt;/span> &lt;span style="color:#e6db74">/home/ubuntu/sabong-server-front&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">try_files&lt;/span> $uri $uri/ &lt;span style="color:#e6db74">/index.html&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">location&lt;/span> &lt;span style="color:#e6db74">/api/&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">if&lt;/span> &lt;span style="color:#e6db74">(&lt;/span>$request_method = &lt;span style="color:#e6db74">&amp;#39;OPTIONS&amp;#39;)&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">add_header&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Access-Control-Allow-Origin&amp;#39;&lt;/span> &lt;span style="color:#e6db74">*&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">add_header&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Access-Control-Allow-Methods&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;GET,&lt;/span> &lt;span style="color:#e6db74">POST,&lt;/span> &lt;span style="color:#e6db74">PUT,&lt;/span> &lt;span style="color:#e6db74">DELETE,&lt;/span> &lt;span style="color:#e6db74">OPTIONS&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">add_header&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Access-Control-Allow-Headers&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,language,If-Modified-Since,Cache-Control,Content-Type&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">add_header&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Access-Control-Allow-Credentials&amp;#39;&lt;/span> &lt;span style="color:#e6db74">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">add_header&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Access-Control-Max-Age&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">86400&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">return&lt;/span> &lt;span style="color:#ae81ff">200&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">add_header&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Access-Control-Allow-Origin&amp;#39;&lt;/span> &lt;span style="color:#e6db74">*&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">add_header&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Access-Control-Allow-Methods&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;GET,&lt;/span> &lt;span style="color:#e6db74">POST,&lt;/span> &lt;span style="color:#e6db74">PUT,&lt;/span> &lt;span style="color:#e6db74">DELETE,&lt;/span> &lt;span style="color:#e6db74">OPTIONS&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">add_header&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Access-Control-Allow-Headers&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,language,If-Modified-Since,Cache-Control,Content-Type&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">add_header&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Access-Control-Allow-Credentials&amp;#39;&lt;/span> &lt;span style="color:#e6db74">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">add_header&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Access-Control-Max-Age&amp;#39;&lt;/span> &lt;span style="color:#ae81ff">86400&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Real-IP&lt;/span> $remote_addr;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Forward-For&lt;/span> $proxy_add_x_forwarded_for;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">Host&lt;/span> $http_host;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Nginx-Proxy&lt;/span> &lt;span style="color:#e6db74">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_pass&lt;/span> &lt;span style="color:#e6db74">http://172.31.41.206:9001/&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">location&lt;/span> &lt;span style="color:#e6db74">/ws&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_pass&lt;/span> &lt;span style="color:#e6db74">http://172.31.41.206:9006/ws&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_http_version&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#e6db74">.1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_read_timeout&lt;/span> &lt;span style="color:#e6db74">360s&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_redirect&lt;/span> &lt;span style="color:#66d9ef">off&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">Upgrade&lt;/span> $http_upgrade;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">Connection&lt;/span> &lt;span style="color:#e6db74">&amp;#34;upgrade&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">Host&lt;/span> $host:$server_port;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Real-IP&lt;/span> $remote_addr;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">REMOTE-HOST&lt;/span> $remote_addr;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Forwarded-For&lt;/span> $proxy_add_x_forwarded_for;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="gzip压缩">Gzip压缩&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">http&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 配置gzip压缩
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">gzip&lt;/span> &lt;span style="color:#66d9ef">on&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">gzip_min_length&lt;/span> &lt;span style="color:#ae81ff">1000&lt;/span>; &lt;span style="color:#75715e"># 设定压缩的临界点
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">gzip_comp_level&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>; &lt;span style="color:#75715e"># 压缩级别
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">gzip_types&lt;/span> &lt;span style="color:#e6db74">text/plain&lt;/span> &lt;span style="color:#e6db74">application/xml&lt;/span>; &lt;span style="color:#75715e"># 要压缩的文件类别
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="转发vue项目">转发Vue项目&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">server&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen&lt;/span> &lt;span style="color:#ae81ff">80&lt;/span> &lt;span style="color:#e6db74">default_server&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">server_name&lt;/span> &lt;span style="color:#e6db74">_&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">location&lt;/span> &lt;span style="color:#e6db74">/&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">index&lt;/span> &lt;span style="color:#e6db74">index.html&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">root&lt;/span> &lt;span style="color:#e6db74">/home/ubuntu/sabong-server-front&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># nginx 转发给前端判断是不是404
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">try_files&lt;/span> $uri $uri/ &lt;span style="color:#e6db74">/index.html&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">location&lt;/span> &lt;span style="color:#e6db74">/api/&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Real-IP&lt;/span> $remote_addr;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Forwarded-For&lt;/span> $proxy_add_x_forwarded_for;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">Host&lt;/span> $http_host;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Nginx-Proxy&lt;/span> &lt;span style="color:#e6db74">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_pass&lt;/span> &lt;span style="color:#e6db74">http://172.31.41.206:9001/&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="转发websocket">转发Websocket&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">location&lt;/span> &lt;span style="color:#e6db74">/ws&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_pass&lt;/span> &lt;span style="color:#e6db74">http://172.31.41.206:9006/ws&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_http_version&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#e6db74">.1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_read_timeout&lt;/span> &lt;span style="color:#e6db74">360s&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_redirect&lt;/span> &lt;span style="color:#66d9ef">off&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">Upgrade&lt;/span> $http_upgrade;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">Connection&lt;/span> &lt;span style="color:#e6db74">&amp;#34;upgrade&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">Host&lt;/span> $host:$server_port;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Real-IP&lt;/span> $remote_addr;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">REMOTE-HOST&lt;/span> $remote_addr;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Forwarded-For&lt;/span> $proxy_add_x_forwarded_for;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="转发redis">转发Redis&lt;/h2>
&lt;p>只知道这么配置,不知道怎么给redis配置上域名&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">user&lt;/span> &lt;span style="color:#e6db74">www-data&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">worker_processes&lt;/span> &lt;span style="color:#e6db74">auto&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">pid&lt;/span> &lt;span style="color:#e6db74">/run/nginx.pid&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">include&lt;/span> /etc/nginx/modules-enabled/*.conf;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">events&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">worker_connections&lt;/span> &lt;span style="color:#ae81ff">768&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># multi_accept on;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">http{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># ...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 要跟http统计,旧的版本没有steram模块,需要编译的时候加
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 下载最新的版本肯定是有stream模块的
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#e6db74">stream&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">upstream&lt;/span> &lt;span style="color:#e6db74">redis&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># myredis.godjfp.com 要被转发的Redis地址
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e"># 6379:redis自己设置的端口是多少,就是多少
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">server&lt;/span> myredis.godjfp.com:&lt;span style="color:#ae81ff">6379&lt;/span> &lt;span style="color:#e6db74">max_fails=3&lt;/span> &lt;span style="color:#e6db74">fail_timeout=30s&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">server&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 公网访问的端口
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">listen&lt;/span> &lt;span style="color:#ae81ff">6379&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_connect_timeout&lt;/span> &lt;span style="color:#e6db74">1s&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_timeout&lt;/span> &lt;span style="color:#e6db74">3s&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_pass&lt;/span> &lt;span style="color:#e6db74">redis&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://image.runtimes.cc/202404051446413.png" alt="">&lt;/p>
&lt;h2 id="图片上传">图片上传&lt;/h2>
&lt;p>post上传文件，出现413错误码 解决方案&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">#&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">允许客户端请求的最大单文件字节数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>client_max_body_size &lt;span style="color:#ae81ff">10&lt;/span>m;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">#&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">缓冲区代理缓冲用户端请求的最大字节数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>client_body_buffer_size &lt;span style="color:#ae81ff">128&lt;/span>k;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="https跳转">HTTPS跳转&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">server&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen&lt;/span> &lt;span style="color:#ae81ff">80&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen&lt;/span> &lt;span style="color:#ae81ff">443&lt;/span> &lt;span style="color:#e6db74">ssl&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 配置SSL证书
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">server_name&lt;/span> &lt;span style="color:#e6db74">abc.xyz&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 如果是http,就跳转https,注意nginx配置文件的不同,可能会出现重定向次数过多
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">if&lt;/span> &lt;span style="color:#e6db74">(&lt;/span>$scheme = &lt;span style="color:#e6db74">http)&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">return&lt;/span> &lt;span style="color:#ae81ff">301&lt;/span> &lt;span style="color:#e6db74">https://&lt;/span>$host$request_uri;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">location&lt;/span> &lt;span style="color:#e6db74">/&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_pass&lt;/span> &lt;span style="color:#e6db74">http://192.168.0.2:8084/&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 比如配置强制跳转https,导致重定向次数过多
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">server&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen&lt;/span> &lt;span style="color:#ae81ff">80&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen&lt;/span> &lt;span style="color:#ae81ff">443&lt;/span> &lt;span style="color:#e6db74">ssl&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 配置SSL证书
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">server_name&lt;/span> &lt;span style="color:#e6db74">abc.xyz&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 如果是http,就跳转https,注意nginx配置文件的不同,可能会出现重定向次数过多
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e"># 比如这个配置 return 301 https://$server_name$request_uri;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e"># 比如这个配置 rewrite ^(.*)$ https://$host$1 permanent;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">location&lt;/span> &lt;span style="color:#e6db74">/&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_pass&lt;/span> &lt;span style="color:#e6db74">http://192.168.0.2:8084/&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 上面两种导致重定向的次数过多,需要修改配置文件,比如下面的配置文件就可以
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">server&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen&lt;/span> &lt;span style="color:#ae81ff">80&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">server_name&lt;/span> &lt;span style="color:#e6db74">your_domain.com&lt;/span> &lt;span style="color:#e6db74">www.your_domain.com&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">return&lt;/span> &lt;span style="color:#ae81ff">301&lt;/span> &lt;span style="color:#e6db74">https://&lt;/span>$host$request_uri;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">server&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen&lt;/span> &lt;span style="color:#ae81ff">443&lt;/span> &lt;span style="color:#e6db74">ssl&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">server_name&lt;/span> &lt;span style="color:#e6db74">your_domain.com&lt;/span> &lt;span style="color:#e6db74">www.your_domain.com&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ssl_certificate&lt;/span> &lt;span style="color:#e6db74">/path/to/your/certificate.crt&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ssl_certificate_key&lt;/span> &lt;span style="color:#e6db74">/path/to/your/private_key.key&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="代理jumpserver">代理JumpServer&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">server&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen&lt;/span> &lt;span style="color:#ae81ff">80&lt;/span> &lt;span style="color:#e6db74">default_server&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen&lt;/span> &lt;span style="color:#e6db74">[::]:80&lt;/span> &lt;span style="color:#e6db74">default_server&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">root&lt;/span> &lt;span style="color:#e6db74">/var/www/html&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">index&lt;/span> &lt;span style="color:#e6db74">index.html&lt;/span> &lt;span style="color:#e6db74">index.htm&lt;/span> &lt;span style="color:#e6db74">index.nginx-debian.html&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">server_name&lt;/span> &lt;span style="color:#e6db74">_&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">location&lt;/span> &lt;span style="color:#e6db74">/&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 比如服务器里的JumpServer的端口已经设置成了8083
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">proxy_pass&lt;/span> &lt;span style="color:#e6db74">http://127.0.0.1:8083/&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 按照官方的配置,需要使用WebSocket,如果不配置的话,访问JumpServer网页会提示WebSocket报错
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">proxy_http_version&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#e6db74">.1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_buffering&lt;/span> &lt;span style="color:#66d9ef">off&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_request_buffering&lt;/span> &lt;span style="color:#66d9ef">off&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">Upgrade&lt;/span> $http_upgrade;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">Connection&lt;/span> &lt;span style="color:#e6db74">&amp;#34;upgrade&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">Host&lt;/span> $host;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Forwarded-For&lt;/span> $remote_addr;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://docs.jumpserver.org/zh/v3/installation/proxy/?h=nginx#2-nginx">官方文档:使用Nginx代理JumpServer&lt;/a>&lt;/p>
&lt;h2 id="代理jenkins">代理Jenkins&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">server&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen&lt;/span> &lt;span style="color:#ae81ff">80&lt;/span> &lt;span style="color:#e6db74">default_server&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen&lt;/span> &lt;span style="color:#e6db74">[::]:80&lt;/span> &lt;span style="color:#e6db74">default_server&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">server_name&lt;/span> &lt;span style="color:#e6db74">_&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">location&lt;/span> &lt;span style="color:#e6db74">/&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_pass&lt;/span> &lt;span style="color:#e6db74">http://127.0.0.1:8083/&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 如果使用这样的配置,会有问题,比如配置的域名是baidu.com
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 当访问baidu.com会正常访问,当登录之后,网页地址就变成http://127.0.0.1:8083/
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 需要改成一下配置
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">server&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen&lt;/span> &lt;span style="color:#ae81ff">80&lt;/span> &lt;span style="color:#e6db74">default_server&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen&lt;/span> &lt;span style="color:#e6db74">[::]:80&lt;/span> &lt;span style="color:#e6db74">default_server&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">server_name&lt;/span> &lt;span style="color:#e6db74">_&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">location&lt;/span> &lt;span style="color:#e6db74">/&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_pass&lt;/span> &lt;span style="color:#e6db74">http://127.0.0.1:8080/&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 下面这几个配置,访问Github会403
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">proxy_http_version&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#e6db74">.1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">http2_push_preload&lt;/span> &lt;span style="color:#66d9ef">on&lt;/span>; &lt;span style="color:#75715e"># Enable http2 push
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Forwarded-Proto&lt;/span> $scheme;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Forwarded-For&lt;/span> $remote_addr;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Real-IP&lt;/span> $remote_addr;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 这个配置又是正常的,要看看这个请求头是干嘛的了
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Rea&lt;/span> $remote_addr;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Forwarded-For&lt;/span> $proxy_add_x_forwarded_for;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">Host&lt;/span> $http_host;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Nginx-Proxy&lt;/span> &lt;span style="color:#e6db74">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">server&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">listen&lt;/span> &lt;span style="color:#ae81ff">80&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">server_name&lt;/span> &lt;span style="color:#e6db74">_&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">location&lt;/span> &lt;span style="color:#e6db74">/api/&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">client_max_body_size&lt;/span> &lt;span style="color:#ae81ff">100m&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">client_body_buffer_size&lt;/span> &lt;span style="color:#ae81ff">50m&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_redirect&lt;/span> &lt;span style="color:#66d9ef">off&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">Host&lt;/span> $host;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Real-IP&lt;/span> $remote_addr;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Forwarded-For&lt;/span> $proxy_add_x_forwarded_for;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_pass&lt;/span> &lt;span style="color:#e6db74">http://172.31.2.105:8083/&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 代理swagger稳定 openapi3的版本,springboot3的版本
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">location&lt;/span> &lt;span style="color:#e6db74">/v3/api-docs&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">client_max_body_size&lt;/span> &lt;span style="color:#ae81ff">100m&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">client_body_buffer_size&lt;/span> &lt;span style="color:#ae81ff">50m&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_redirect&lt;/span> &lt;span style="color:#66d9ef">off&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">Host&lt;/span> $host;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Real-IP&lt;/span> $remote_addr;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Forwarded-For&lt;/span> $proxy_add_x_forwarded_for;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">proxy_pass&lt;/span> &lt;span style="color:#e6db74">http://172.31.2.105:8083/v3/api-docs&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">location&lt;/span> &lt;span style="color:#e6db74">/&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">try_files&lt;/span> $uri $uri/ &lt;span style="color:#e6db74">/index.html&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">root&lt;/span> &lt;span style="color:#e6db74">/usr/share/nginx/html/manager/dist/&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">index&lt;/span> &lt;span style="color:#e6db74">index.html&lt;/span> &lt;span style="color:#e6db74">index.htm&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="srs">SRS&lt;/h1>
&lt;h2 id="docker方式运行">Docker方式运行&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-docker" data-lang="docker">&lt;span style="display:flex;">&lt;span>docker run -p 1935:1935 -p 1985:1985 -p 8080:8080 ossrs/srs:latest&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75715e"># 测试&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>&lt;span style="color:#75715e"># 访问:[http://192.168.254.180:8080/](http://192.168.254.180:8080/)&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="srs安装参考">SRS安装参考&lt;/h2>
&lt;p>&lt;a href="https://cloud.tencent.com/developer/article/1693951">https://cloud.tencent.com/developer/article/1693951&lt;/a>&lt;/p>
&lt;h2 id="mac改成只播放系统声音">Mac改成只播放系统声音&lt;/h2>
&lt;p>&lt;a href="http://www.obsproject.com.cn/obs/78.html">Mac obs推流直播无声音解决方法_OBS教程_OBS Open Broadcaster Software&lt;/a>&lt;/p>
&lt;h2 id="obs权限监听浏览器">OBS权限监听浏览器&lt;/h2>
&lt;p>&lt;img src="https://image.runtimes.cc/202404051442055.png" alt="">&lt;/p></content></item></channel></rss>