<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on Hello World</title><link>https://connorzhangyu.com/tags/git/</link><description>Recent content in Git on Hello World</description><generator>Hugo</generator><language>zh</language><lastBuildDate>Sat, 19 Nov 2022 18:25:00 +0000</lastBuildDate><atom:link href="https://connorzhangyu.com/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Git</title><link>https://connorzhangyu.com/posts/git/</link><pubDate>Sat, 19 Nov 2022 18:25:00 +0000</pubDate><guid>https://connorzhangyu.com/posts/git/</guid><description>&lt;h1 id="分支管理">分支管理&lt;/h1>
&lt;h2 id="切一个新的本地分支">切一个新的本地分支&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 先切换到需要复制的分支,比如想从prod分支,切一个新的分支&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git checkout prod &lt;span style="color:#75715e"># 先到prod分支&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git checkout -b prod-fix &lt;span style="color:#75715e"># 从prod分支拷贝一个新的分支叫prod-fix&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2>&lt;/h2>
&lt;h1 id="用命令pull-request代码">用命令pull request代码&lt;/h1>
&lt;pre tabindex="0">&lt;code># 把本地的代码切换到master
git checkout -b theme-next-master master
# https://github.com/theme-next/hexo-theme-next.git 是要合并的代码
git pull https://github.com/theme-next/hexo-theme-next.git master
&lt;/code>&lt;/pre>&lt;h1 id="git-key">Git Key&lt;/h1>
&lt;pre tabindex="0">&lt;code>cd ~/.ssh
ssh-keygen
cat ~/.ssh/id_rsa.pub
&lt;/code>&lt;/pre>&lt;h1 id="git-bash启动慢">Git Bash启动慢&lt;/h1>
&lt;pre tabindex="0">&lt;code>git config --global core.preloadindex true
git config --global core.fscache true
git config --global gc.auto 256
&lt;/code>&lt;/pre>&lt;h1 id="推送到远程">推送到远程&lt;/h1>
&lt;pre tabindex="0">&lt;code>git init
git add README.md
git commit -m &amp;#34;first commit&amp;#34;
git remote add origin git@github.com:YangAnLin/bbs.git
git push -u origin master
&lt;/code>&lt;/pre>&lt;h1 id="创建新的分支推送到远程">创建新的分支推送到远程&lt;/h1>
&lt;ol>
&lt;li>先创建本地分支&lt;code>git checkout -b &amp;lt;branch-name&amp;gt;&lt;/code>&lt;/li>
&lt;li>本地分支推送到远程服务器时，远程分支自动创建，推送本地分支到远程&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>git push --set-upstream &amp;lt;remote-name&amp;gt; &amp;lt;local-branch-name&amp;gt;:&amp;lt;remote-branch-name&amp;gt;

&amp;lt;remote-name&amp;gt;：远程git服务器名称，一般设为origin
&amp;lt;local-branch-name&amp;gt;：本地分支名称
&amp;lt;remote-branch-name&amp;gt;：远程分支名称

最后的结果是: git push --set-upstream origin prerelease:prerelease
prerelease是分支的名字

也可以这样操作:本地有个master_anthony,服务器中没有这个分支,
git push -u origin master_anthony
这个命令,就是把master_anthony分支的代码,提交到远程,还要在远程创建这个分支
&lt;/code>&lt;/pre>&lt;h1 id="删除远程仓库文件">删除远程仓库文件&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 加上 -n 这个参数，执行命令时，是不会删除任何文件，而是展示此命令要删除的文件列表预览。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git rm -r -n --cached 文件/文件夹名称
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git rm -r --cached 文件/文件夹名称
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git commit -m &lt;span style="color:#e6db74">&amp;#34;提交说明&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="撤销修改">撤销修改&lt;/h1>
&lt;pre tabindex="0">&lt;code># 工作区修改过了,恢复工作区
git checkout -- file

# 已经commit了,但是还没有push
git reset --soft HEAD^

# 现在就已经把暂存区恢复到工作了
&lt;/code>&lt;/pre>&lt;h1 id="版本回退reset">版本回退reset&lt;/h1>
&lt;p>reset用于回退版本，可以遗弃不再使用的提交&lt;/p></description></item></channel></rss>