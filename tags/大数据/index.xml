<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>大数据 on Hello World</title><link>https://connorzhangyu.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/</link><description>Recent content in 大数据 on Hello World</description><generator>Hugo</generator><language>zh</language><lastBuildDate>Sat, 19 Nov 2022 18:25:00 +0000</lastBuildDate><atom:link href="https://connorzhangyu.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/index.xml" rel="self" type="application/rss+xml"/><item><title>Flink</title><link>https://connorzhangyu.com/posts/flink/</link><pubDate>Sat, 19 Nov 2022 18:25:00 +0000</pubDate><guid>https://connorzhangyu.com/posts/flink/</guid><description>&lt;h1 id="flink">Flink&lt;/h1>
&lt;h2 id="尝试flink">尝试flink&lt;/h2>
&lt;h3 id="本地安装">本地安装&lt;/h3>
&lt;p>步骤一:下载&lt;/p>
&lt;p>为了能够运行Flink，唯一的要求是安装有效的&lt;strong>Java 8或11&lt;/strong>。您可以通过发出以下命令来检查Java的正确安装：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 要安装java环境&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>java -version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 下载解压flink&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tar -xzf flink-1.11.2-bin-scala_2.11.tgz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd flink-1.11.2-bin-scala_2.11
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>步骤二:启动本地集群&lt;/p>
&lt;pre tabindex="0">&lt;code>$ ./bin/start-cluster.sh
Starting cluster.
Starting standalonesession daemon on host.
Starting taskexecutor daemon on host.
&lt;/code>&lt;/pre>&lt;p>步骤三:提交一个job&lt;/p>
&lt;pre tabindex="0">&lt;code>$ ./bin/flink run examples/streaming/WordCount.jar
$ tail log/flink-*-taskexecutor-*.out
 (to,1)
 (be,1)
 (or,1)
 (not,1)
 (to,2)
 (be,2)
&lt;/code>&lt;/pre>&lt;p>步骤四:停止集群&lt;/p>
&lt;pre tabindex="0">&lt;code>$ ./bin/stop-cluster.sh
&lt;/code>&lt;/pre>&lt;h2 id="使用datastream-api进行欺诈检测">使用DataStream API进行欺诈检测&lt;/h2>
&lt;h3 id="java环境">Java环境&lt;/h3>
&lt;pre tabindex="0">&lt;code>&amp;lt;project xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;
		 xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&amp;gt;
	&amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;

	&amp;lt;groupId&amp;gt;frauddetection&amp;lt;/groupId&amp;gt;
	&amp;lt;artifactId&amp;gt;frauddetection&amp;lt;/artifactId&amp;gt;
	&amp;lt;version&amp;gt;0.1&amp;lt;/version&amp;gt;
	&amp;lt;packaging&amp;gt;jar&amp;lt;/packaging&amp;gt;

	&amp;lt;name&amp;gt;Flink Walkthrough DataStream Java&amp;lt;/name&amp;gt;
	&amp;lt;url&amp;gt;https://flink.apache.org&amp;lt;/url&amp;gt;

	&amp;lt;properties&amp;gt;
		&amp;lt;project.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/project.build.sourceEncoding&amp;gt;
		&amp;lt;flink.version&amp;gt;1.10.2&amp;lt;/flink.version&amp;gt;
		&amp;lt;java.version&amp;gt;1.8&amp;lt;/java.version&amp;gt;
		&amp;lt;scala.binary.version&amp;gt;2.11&amp;lt;/scala.binary.version&amp;gt;
		&amp;lt;maven.compiler.source&amp;gt;${java.version}&amp;lt;/maven.compiler.source&amp;gt;
		&amp;lt;maven.compiler.target&amp;gt;${java.version}&amp;lt;/maven.compiler.target&amp;gt;
	&amp;lt;/properties&amp;gt;

	&amp;lt;dependencies&amp;gt;
		&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;org.apache.flink&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;flink-walkthrough-common_${scala.binary.version}&amp;lt;/artifactId&amp;gt;
			&amp;lt;version&amp;gt;${flink.version}&amp;lt;/version&amp;gt;
		&amp;lt;/dependency&amp;gt;

		&amp;lt;!-- This dependency is provided, because it should not be packaged into the JAR file. --&amp;gt;
		&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;org.apache.flink&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;flink-streaming-java_${scala.binary.version}&amp;lt;/artifactId&amp;gt;
			&amp;lt;version&amp;gt;${flink.version}&amp;lt;/version&amp;gt;
&amp;lt;!--			&amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;--&amp;gt;
		&amp;lt;/dependency&amp;gt;

		&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;org.projectlombok&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;lombok&amp;lt;/artifactId&amp;gt;
			&amp;lt;version&amp;gt;1.18.0&amp;lt;/version&amp;gt;
			&amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
		&amp;lt;/dependency&amp;gt;

		&amp;lt;!-- Add connector dependencies here. They must be in the default scope (compile). --&amp;gt;

		&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;org.apache.flink&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;flink-connector-kafka-0.10_${scala.binary.version}&amp;lt;/artifactId&amp;gt;
			&amp;lt;version&amp;gt;${flink.version}&amp;lt;/version&amp;gt;
		&amp;lt;/dependency&amp;gt;

		&amp;lt;!-- Add logging framework, to produce console output when running in the IDE. --&amp;gt;
		&amp;lt;!-- These dependencies are excluded from the application JAR by default. --&amp;gt;
		&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;org.slf4j&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;slf4j-log4j12&amp;lt;/artifactId&amp;gt;
			&amp;lt;version&amp;gt;1.7.7&amp;lt;/version&amp;gt;
			&amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt;
		&amp;lt;/dependency&amp;gt;
		&amp;lt;dependency&amp;gt;
			&amp;lt;groupId&amp;gt;log4j&amp;lt;/groupId&amp;gt;
			&amp;lt;artifactId&amp;gt;log4j&amp;lt;/artifactId&amp;gt;
			&amp;lt;version&amp;gt;1.2.17&amp;lt;/version&amp;gt;
			&amp;lt;scope&amp;gt;runtime&amp;lt;/scope&amp;gt;
		&amp;lt;/dependency&amp;gt;
	&amp;lt;/dependencies&amp;gt;

	&amp;lt;build&amp;gt;
		&amp;lt;plugins&amp;gt;

			&amp;lt;!-- Java Compiler --&amp;gt;
			&amp;lt;plugin&amp;gt;
				&amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
				&amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
				&amp;lt;version&amp;gt;3.1&amp;lt;/version&amp;gt;
				&amp;lt;configuration&amp;gt;
					&amp;lt;source&amp;gt;${java.version}&amp;lt;/source&amp;gt;
					&amp;lt;target&amp;gt;${java.version}&amp;lt;/target&amp;gt;
				&amp;lt;/configuration&amp;gt;
			&amp;lt;/plugin&amp;gt;

			&amp;lt;!-- We use the maven-shade plugin to create a fat jar that contains all necessary dependencies. --&amp;gt;
			&amp;lt;!-- Change the value of &amp;lt;mainClass&amp;gt;...&amp;lt;/mainClass&amp;gt; if your program entry point changes. --&amp;gt;
			&amp;lt;plugin&amp;gt;
				&amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
				&amp;lt;artifactId&amp;gt;maven-shade-plugin&amp;lt;/artifactId&amp;gt;
				&amp;lt;version&amp;gt;3.0.0&amp;lt;/version&amp;gt;
				&amp;lt;executions&amp;gt;
					&amp;lt;!-- Run shade goal on package phase --&amp;gt;
					&amp;lt;execution&amp;gt;
						&amp;lt;phase&amp;gt;package&amp;lt;/phase&amp;gt;
						&amp;lt;goals&amp;gt;
							&amp;lt;goal&amp;gt;shade&amp;lt;/goal&amp;gt;
						&amp;lt;/goals&amp;gt;
						&amp;lt;configuration&amp;gt;
							&amp;lt;artifactSet&amp;gt;
								&amp;lt;excludes&amp;gt;
									&amp;lt;exclude&amp;gt;org.apache.flink:force-shading&amp;lt;/exclude&amp;gt;
									&amp;lt;exclude&amp;gt;com.google.code.findbugs:jsr305&amp;lt;/exclude&amp;gt;
									&amp;lt;exclude&amp;gt;org.slf4j:*&amp;lt;/exclude&amp;gt;
									&amp;lt;exclude&amp;gt;log4j:*&amp;lt;/exclude&amp;gt;
								&amp;lt;/excludes&amp;gt;
							&amp;lt;/artifactSet&amp;gt;
							&amp;lt;filters&amp;gt;
								&amp;lt;filter&amp;gt;
									&amp;lt;!-- Do not copy the signatures in the META-INF folder.
 Otherwise, this might cause SecurityExceptions when using the JAR. --&amp;gt;
									&amp;lt;artifact&amp;gt;*:*&amp;lt;/artifact&amp;gt;
									&amp;lt;excludes&amp;gt;
										&amp;lt;exclude&amp;gt;META-INF/*.SF&amp;lt;/exclude&amp;gt;
										&amp;lt;exclude&amp;gt;META-INF/*.DSA&amp;lt;/exclude&amp;gt;
										&amp;lt;exclude&amp;gt;META-INF/*.RSA&amp;lt;/exclude&amp;gt;
									&amp;lt;/excludes&amp;gt;
								&amp;lt;/filter&amp;gt;
							&amp;lt;/filters&amp;gt;
							&amp;lt;transformers&amp;gt;
								&amp;lt;transformer implementation=&amp;#34;org.apache.maven.plugins.shade.resource.ManifestResourceTransformer&amp;#34;&amp;gt;
									&amp;lt;mainClass&amp;gt;spendreport.FraudDetectionJob&amp;lt;/mainClass&amp;gt;
								&amp;lt;/transformer&amp;gt;
							&amp;lt;/transformers&amp;gt;
						&amp;lt;/configuration&amp;gt;
					&amp;lt;/execution&amp;gt;
				&amp;lt;/executions&amp;gt;
			&amp;lt;/plugin&amp;gt;
		&amp;lt;/plugins&amp;gt;

		&amp;lt;pluginManagement&amp;gt;
			&amp;lt;plugins&amp;gt;

				&amp;lt;!-- This improves the out-of-the-box experience in Eclipse by resolving some warnings. --&amp;gt;
				&amp;lt;plugin&amp;gt;
					&amp;lt;groupId&amp;gt;org.eclipse.m2e&amp;lt;/groupId&amp;gt;
					&amp;lt;artifactId&amp;gt;lifecycle-mapping&amp;lt;/artifactId&amp;gt;
					&amp;lt;version&amp;gt;1.0.0&amp;lt;/version&amp;gt;
					&amp;lt;configuration&amp;gt;
						&amp;lt;lifecycleMappingMetadata&amp;gt;
							&amp;lt;pluginExecutions&amp;gt;
								&amp;lt;pluginExecution&amp;gt;
									&amp;lt;pluginExecutionFilter&amp;gt;
										&amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
										&amp;lt;artifactId&amp;gt;maven-shade-plugin&amp;lt;/artifactId&amp;gt;
										&amp;lt;versionRange&amp;gt;[3.0.0,)&amp;lt;/versionRange&amp;gt;
										&amp;lt;goals&amp;gt;
											&amp;lt;goal&amp;gt;shade&amp;lt;/goal&amp;gt;
										&amp;lt;/goals&amp;gt;
									&amp;lt;/pluginExecutionFilter&amp;gt;
									&amp;lt;action&amp;gt;
										&amp;lt;ignore/&amp;gt;
									&amp;lt;/action&amp;gt;
								&amp;lt;/pluginExecution&amp;gt;
								&amp;lt;pluginExecution&amp;gt;
									&amp;lt;pluginExecutionFilter&amp;gt;
										&amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
										&amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
										&amp;lt;versionRange&amp;gt;[3.1,)&amp;lt;/versionRange&amp;gt;
										&amp;lt;goals&amp;gt;
											&amp;lt;goal&amp;gt;testCompile&amp;lt;/goal&amp;gt;
											&amp;lt;goal&amp;gt;compile&amp;lt;/goal&amp;gt;
										&amp;lt;/goals&amp;gt;
									&amp;lt;/pluginExecutionFilter&amp;gt;
									&amp;lt;action&amp;gt;
										&amp;lt;ignore/&amp;gt;
									&amp;lt;/action&amp;gt;
								&amp;lt;/pluginExecution&amp;gt;
							&amp;lt;/pluginExecutions&amp;gt;
						&amp;lt;/lifecycleMappingMetadata&amp;gt;
					&amp;lt;/configuration&amp;gt;
				&amp;lt;/plugin&amp;gt;
			&amp;lt;/plugins&amp;gt;
		&amp;lt;/pluginManagement&amp;gt;
	&amp;lt;/build&amp;gt;
&amp;lt;/project&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="输入">输入&lt;/h2>
&lt;h3 id="file输入">File输入&lt;/h3>
&lt;pre tabindex="0">&lt;code>public static void main(String[] args) throws Exception {
 final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();
 final DataStream&amp;lt;String&amp;gt; stringDataStreamSource = env.readTextFile(&amp;#34;Sensor.txt&amp;#34;);
 stringDataStreamSource.print(&amp;#34;data&amp;#34;);
 env.execute();
}
&lt;/code>&lt;/pre>&lt;h2 id="kafka">Kafka&lt;/h2>
&lt;p>需要引入包&lt;/p></description></item></channel></rss>